{{ if and .Values.onboarder.enabled .Values.onboarder.hook.pushAssetAttributeMediaFileToOnboarder.enabled -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: push-asset-attribute-media-file-to-onboarder
  labels:
    component: "hook-push-asset-attribute-media-file-to-onboarder"
    app.kubernetes.io/component: "hook-push-asset-attribute-media-file-to-onboarder"
    role: "push-asset-attribute-media-file-to-onboarder"
    {{- include "onboarder.standardLabels" . | indent 4 }}
    {{- include "pim.extraLabels" . | indent 4 }}
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": "post-install,post-upgrade"
    "helm.sh/hook-weight": "35"
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  template:
    metadata:
      labels:
        component: "hook-push-asset-attribute-media-file-to-onboarder"
        app.kubernetes.io/component: "hook-push-asset-attribute-media-file-to-onboarder"
        role: "push-asset-attribute-media-file-to-onboarder"
        {{- include "onboarder.standardLabels" . | indent 8 }}
        {{- include "pim.extraLabels" . | indent 8 }}
    spec:
      restartPolicy: Never
      containers:
        - name: push-asset-attribute-media-file-to-onboarder
          image:  {{ template "pim.imageNameAndTag" . }}
          imagePullPolicy: {{ .Values.image.pim.pullPolicy | quote }}
          command: ["su", "www-data", "-s", "/bin/bash", "/scripts-dir/hook-push-asset-attribute-media-file-to-onboarder.sh"]
          envFrom: [ configMapRef: { name: {{ template "pim.fullName" . }}-env } ]
          env:
            - { name: MAILER_USER, valueFrom: { secretKeyRef: { name: pim-secrets, key: mailerLogin } } }
            - { name: MAILER_PASSWORD, valueFrom: { secretKeyRef: { name: pim-secrets, key: mailerPassword } } }
            - { name: APP_DATABASE_PASSWORD, valueFrom: { secretKeyRef: { name: pim-secrets, key: mysqlPimUserPassword } } }
            - { name: GOOGLE_NAMESPACE, valueFrom: { fieldRef: { fieldPath: metadata.namespace } } }
            - { name: GOOGLE_POD_NAME, valueFrom: { fieldRef: { fieldPath: metadata.name } } }
{{- if .Values.common.phpConfCLI }}
{{ toYaml .Values.common.phpConfCLI | indent 12 }}
{{- end }}
          volumeMounts:
            - name: google-cloud-pim-storage-key
              mountPath: /var/secrets/google/srnt.json
              subPath: srnt.json
              readOnly: true
            - name: google-cloud-onboarder-key
              mountPath: /var/secrets/google/key.json
              subPath: key.json
              readOnly: true
            - name: pim-scripts
              mountPath: /scripts-dir
      volumes:
        - name: google-cloud-pim-storage-key
          secret:
            secretName: pim-secrets
            items:
            - key: srntPimStorageKey
              path: srnt.json
        - name: google-cloud-onboarder-key
          secret:
            secretName: pim-secrets
            items:
            - key: akobOnboarderKey
              path: key.json
        - name: pim-scripts
          configMap:
            name: pim-scripts
{{- end }}
