{{ if .Values.onboarder.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pim-onboarder-worker
  labels:
    app: {{ template "pim.fullName" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
    component: {{ template "pim.fullName" . }}
    {{ include "pim.extravarsPim" . | indent 4}}
    role: pim-onboarder-worker

spec:
  replicas: {{ .Values.pim.numDaemon }}
  minReadySeconds: 30
  selector:
    matchLabels:
      component: {{ template "pim.fullName" . }}
      role: pim-onboarder-worker
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        component: {{ template "pim.fullName" . }}
        role: pim-onboarder-worker
        {{ include "pim.extravarsPim" . | indent 8}}
    spec:
      containers:
        - name: fpm
          image: "{{ .Values.image.pim.repository }}:{{ .Values.image.pim.tag }}"
          imagePullPolicy: {{ .Values.image.pim.pullPolicy | quote }}
          command: ['sh', '-c', 'export HOME=/var/www/ && chown -R www-data:www-data /data && su -m -l www-data -s /bin/bash -c "php bin/console akeneo:synchronization:message:consumer --ttl=-1"']
          resources:
{{ toYaml .Values.pim.resources | indent 12 }}
          volumeMounts:
            - name: fpm-data
              mountPath: /data
              readOnly: false
            - name: google-cloud-onboarder-key
              mountPath: /var/secrets/google/key.json
              subPath: key.json
              readonly: true
          envFrom: [ configMapRef: { name: {{ template "pim.fullName" . }}-env } ]
          env:
            - { name: MAILER_USER, valueFrom: { secretKeyRef: { name: pim-secrets, key: mailerLogin } } }
            - { name: MAILER_PASSWORD, valueFrom: { secretKeyRef: { name: pim-secrets, key: mailerPassword } } }
            - { name: PIM_DATABASE_PASSWORD, valueFrom: { secretKeyRef: { name: pim-secrets, key: mysqlPimUserPassword } } }
            - { name: GOOGLE_NAMESPACE, valueFrom: { fieldRef: { fieldPath: metadata.namespace } } }
            - { name: GOOGLE_POD_NAME, valueFrom: { fieldRef: { fieldPath: metadata.name } } }
{{- if .Values.common.phpConf }}
{{ toYaml .Values.common.phpConf  | indent 12 }}
{{- end }}
      volumes:
        - name: fpm-data
          persistentVolumeClaim:
            claimName: pvc-data-pim-{{ .Values.global.extraLabels.pfid }}
        - name: google-cloud-onboarder-key
          secret:
            secretName: pim-secrets
            items:
            - key: akobOnboarderKey
              path: key.json
{{- end }}
