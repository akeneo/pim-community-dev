version: 2
jobs:
  setup:
    machine:
      enabled: true
    steps:
      - checkout
      - run:
          name: Copy env file
          command: cp .env.dist .env
      - run:
          name: Copy docker-compose.override.yml.dist
          command: cp .circleci/docker-compose.override.yml.dist docker-compose.override.yml
      - run:
            name: Pull the latest Docker images
            command: docker-compose pull
      - run:
          name: Setup tests results folder and log folder
          command: mkdir -p var/tests/phpunit var/tests/behat var/tests/phpspec var/tests/csfixer var/logs var/tests/screenshots
      - run:
          name: Setup the parameters.yml files
          command: ./bin/docker/pim-setup.sh
      - run:
          name: Set the local object storage for tests
          command: ./.circleci/local-object-storage-setup.sh
      - run:
          name: Change owner on project dir (default user = circleci (1001) and docker needs uid 1000)
          command: sudo chown -R 1000:1000 ../project
      - run:
          name: Start containers
          command: docker-compose up -d
      - restore_cache:
          name: Restore cache - node_modules
          keys:
            - node-modules-{{ .Environment.CACHE_VERSION }}-{{ checksum "yarn.lock" }}
      - restore_cache:
          name: Restore cache - vendor
          keys:
            - vendor-{{ .Environment.CACHE_VERSION }}-{{ checksum "composer.lock" }}
      - run:
          name: Change owner on project dir after restoring cache
          command: sudo chown -R 1000:1000 ../project
      - run:
          name: Install dependencies
          command: ./bin/docker/pim-dependencies.sh
      - run:
          name: Pim database installation
          command: docker-compose exec fpm bin/console --env=behat pim:install --force --clean
      - run:
          name: Pim yarn less installation
          command: docker-compose run --rm node yarn run less
      - run:
          name: Pim yarn dev installation
          command: docker-compose run --rm node yarn run webpack-dev
      - run:
          name: Pim yarn test installation
          command: docker-compose run --rm node yarn run webpack-test
      - run:
            name: Change owner on project dir after install
            command: sudo chmod -R 777 ../project
      - save_cache:
          paths:
            - ./node_modules
          key: node-modules-{{ .Environment.CACHE_VERSION }}-{{ checksum "yarn.lock" }}
      - save_cache:
          paths:
            - ./vendor
          key: vendor-{{ .Environment.CACHE_VERSION }}-{{ checksum "composer.lock" }}
      - persist_to_workspace:
          root: ~/
          paths:
            - project

  back_static_and_acceptance:
      machine:
          enabled: true
      steps:
          - attach_workspace:
                at: ~/
          - run:
                name: Change owner on project dir (default user = circleci (1001) and docker needs uid 1000)
                command: sudo chown -R 1000:1000 ../project
          - run:
                name: Start containers
                command: docker-compose up -d fpm
          - run:
                name: PhpSpec
                command: docker-compose exec -T fpm vendor/bin/phpspec run --format=junit > var/tests/phpspec/specs.xml
          - run:
                name: PhpCsFixer
                command: docker-compose exec -T fpm vendor/bin/php-cs-fixer fix --diff --dry-run --config=.php_cs.php
                when: always
          - run:
                name: PhpCoupling Detector
                command: DOCKER=true make coupling
                when: always
          - run:
                name: PHPStan
                command: docker-compose exec -T fpm vendor/bin/phpstan analyse src/Akeneo/Pim -l 1
                when: always
          - run:
                name: Check Pullup
                command: docker-compose exec -T fpm bin/check-pullup
                when: always
          - run:
                name: Acceptance back
                command: docker-compose exec fpm vendor/bin/behat --strict -p acceptance -vv
                when: always
          - store_test_results:
                path: var/tests
          - store_artifacts:
                path: var/tests
          - store_artifacts:
                path: var/logs

  back_phpunit_integration:
      machine:
          enabled: true
      parallelism: 10
      steps:
          - attach_workspace:
                at: ~/
          - run:
                name: Change owner on project dir in order to archive the project into the workspace
                command: sudo chown -R 1000:1000 ../project
          - run:
                name: Start containers
                command: docker-compose up -d
          - run:
                name: Install database
                command: |
                    sleep 25 # wait mysql to be up
                    docker-compose exec fpm bin/console --env=behat pim:install:db
          - run:
                name: PHPunit Integration
                command: |
                    TESTFILES=$(docker-compose exec -T fpm .circleci/find_phpunit.sh PIM_Integration_Test | circleci tests split)
                    .circleci/run_phpunit.sh $TESTFILES
          - store_test_results:
                path: var/tests/phpunit
          - store_artifacts:
                path: var/tests/phpunit
          - store_artifacts:
                path: var/logs

  back_phpunit_end_to_end:
      machine:
          enabled: true
      parallelism: 10
      steps:
          - attach_workspace:
                at: ~/
          - run:
                name: Change owner on project dir in order to archive the project into the workspace
                command: sudo chown -R 1000:1000 ../project
          - run:
                name: Start containers
                command: docker-compose up -d
          - run:
                name: Install database
                command: |
                    sleep 25 # wait mysql to be up
                    docker-compose exec fpm bin/console --env=behat pim:install:db
          - run:
                name: PHPunit End to end
                command: |
                    TESTFILES=$(docker-compose exec -T fpm .circleci/find_phpunit.sh End_to_End | circleci tests split)
                    .circleci/run_phpunit.sh $TESTFILES
          - store_test_results:
                path: var/tests/phpunit
          - store_artifacts:
                path: var/tests/phpunit
          - store_artifacts:
                path: var/logs

  back_behat_legacy:
    machine:
      enabled: true
    parallelism: 20
    steps:
      - attach_workspace:
          at: ~/
      - run:
            name: Get Behat Suite name to run
            command: |
                TESTSUITE=$(echo $CIRCLE_BRANCH | sed -e 's/^.*-\([^-]*\)$/\1/g')
                if ! [[ $TESTSUITE =~ ^(weasel|chipmunk|raccoon)$ ]] ; then
                  TESTSUITE="all"
                fi
                echo "Behat Suite to run: "$TESTSUITE
                echo "export TESTSUITE=$TESTSUITE" >> $BASH_ENV
      - run:
            name: Change owner on project dir in order to archive the project into the workspace
            command: sudo chown -R 1000:1000 ../project
      - run:
          name: Pull the latest Docker images
          command: docker-compose pull
      - run:
            name: Start containers
            command: docker-compose up -d
      - run:
            name: Install database
            command: |
                sleep 25 # wait mysql to be up
                docker-compose exec fpm bin/console --env=behat pim:install:db
      - run:
            name: Critical Behat
            command: |
                TESTFILES=$(docker-compose exec -T fpm vendor/bin/behat --list-scenarios -p legacy -s critical | circleci tests split --split-by=timings)
                .circleci/run_behat.sh critical $TESTFILES
      - run:
          name: Non critical Behat
          command: |
              TESTFILES=$(docker-compose exec -T fpm vendor/bin/behat --list-scenarios -p legacy -s $TESTSUITE | circleci tests split --split-by=timings)
              .circleci/run_behat.sh $TESTSUITE $TESTFILES
      - run:
          name: Gather Junit test result files in the same directory to improve the render of failing tests
          command: |
              set -e
              cd var/tests/behat
              sudo chmod -R 777 .
              for subdir in */*; do mv "${subdir}" "${subdir/\//_}"; done
          when: always
      - store_test_results:
          path: var/tests/behat
      - store_artifacts:
          path: var/tests/behat
      - store_artifacts:
          path: var/tests/screenshots
      - store_artifacts:
          path: var/logs

  front_static_acceptance_and_integration:
      machine:
          enabled: true
      steps:
        - attach_workspace:
            at: ~/
        - run:
            name: Change owner on project dir (default user = circleci (1001) and docker needs uid 1000)
            command: sudo chown -R 1000:1000 ../project
        - run:
            name: Front linter
            command: docker-compose run --rm node yarn run lint
        - run:
            name: Front unit tests
            command: docker-compose run --rm node yarn run unit
            when: always
        - run:
            name: Front acceptance tests
            command: MAX_RANDOM_LATENCY_MS=100 docker-compose run --rm node yarn run acceptance ./tests/features
            when: always
        - run:
            name: Front integration tests
            command: docker-compose run --rm node yarn run integration
            when: always

workflows:
  version: 2
  pull_request:
      jobs:
          - wait_for_user_approval:
                type: approval
                filters:
                    branches:
                        ignore:
                            - master
          - setup:
                requires:
                    - wait_for_user_approval
          - back_static_and_acceptance:
                requires:
                    - setup
          - front_static_acceptance_and_integration:
                requires:
                    - setup
          - back_phpunit_integration:
                requires:
                    - back_static_and_acceptance
                    - front_static_acceptance_and_integration
          - back_phpunit_end_to_end:
                requires:
                    - back_phpunit_integration
          - back_behat_legacy:
                requires:
                    - back_phpunit_end_to_end

  nightly:
      triggers:
          - schedule:
                cron: "0 2 * * *"
                filters:
                    branches:
                        only:
                            - "3.2"
      jobs:
          - setup
          - back_static_and_acceptance:
                requires:
                    - setup
          - front_static_acceptance_and_integration:
                requires:
                    - setup
          - back_phpunit_integration:
                requires:
                    - back_static_and_acceptance
                    - front_static_acceptance_and_integration
          - back_phpunit_end_to_end:
                requires:
                    - back_phpunit_integration
          - back_behat_legacy:
                requires:
                    - back_phpunit_end_to_end
