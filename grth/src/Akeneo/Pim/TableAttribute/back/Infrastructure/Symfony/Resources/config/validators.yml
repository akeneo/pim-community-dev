parameters:
    pim_catalog_table_allowed_column_datatypes: [ "text", "number", "boolean", "select" ]
    pim_catalog_table_allowed_first_column_datatypes: [ "select" ]

services:
    Akeneo\Pim\TableAttribute\Infrastructure\Validation\Attribute\IsTableAttributeConfiguredValidator:
        tags:
            - { name: 'validator.constraint_validator' }

    Akeneo\Pim\TableAttribute\Infrastructure\Validation\Attribute\IsColumnCodeUniqueValidator:
        tags:
            - { name: 'validator.constraint_validator' }

    Akeneo\Pim\TableAttribute\Infrastructure\Validation\Attribute\LabelCollectionValidator:
        arguments:
            - '@pim_channel.query.cache.channel_exists_with_locale'
        tags:
            - { name: 'validator.constraint_validator' }

    Akeneo\Pim\TableAttribute\Infrastructure\Validation\Attribute\FirstColumnCodeCannotBeChangedValidator:
        arguments:
            - '@Akeneo\Pim\TableAttribute\Domain\TableConfiguration\Repository\TableConfigurationRepository'
        tags:
            - { name: 'validator.constraint_validator' }

    Akeneo\Pim\TableAttribute\Infrastructure\Validation\Attribute\FirstColumnShouldHaveValidDataTypeValidator:
        arguments:
            - '%pim_catalog_table_allowed_first_column_datatypes%'
        tags:
            - { name: 'validator.constraint_validator' }

    Akeneo\Pim\TableAttribute\Infrastructure\Validation\Attribute\IsMaximumTableAttributesReachedValidator:
        arguments:
            - '@pim_catalog.repository.attribute'
        tags:
            - { name: 'validator.constraint_validator' }

    Akeneo\Pim\TableAttribute\Infrastructure\Validation\ProductValue\TableColumnsShouldExistValidator:
        arguments:
            - '@Akeneo\Pim\TableAttribute\Domain\TableConfiguration\Repository\TableConfigurationRepository'
        tags:
            - { name: 'validator.constraint_validator' }

    Akeneo\Pim\TableAttribute\Infrastructure\Validation\ProductValue\CellDataTypesShouldMatchValidator:
        arguments:
            - '@Akeneo\Pim\TableAttribute\Domain\TableConfiguration\Repository\TableConfigurationRepository'
        tags:
            - { name: 'validator.constraint_validator' }

    Akeneo\Pim\TableAttribute\Infrastructure\Validation\ProductValue\FirstColumnShouldBeFilledValidator:
        arguments:
            - '@Akeneo\Pim\TableAttribute\Domain\TableConfiguration\Repository\TableConfigurationRepository'
        tags:
            - { name: 'validator.constraint_validator' }

    Akeneo\Pim\TableAttribute\Infrastructure\Validation\ProductValue\SelectOptionsShouldExistValidator:
        arguments:
            - '@Akeneo\Pim\TableAttribute\Domain\TableConfiguration\Repository\TableConfigurationRepository'
            - '@Akeneo\Pim\TableAttribute\Domain\TableConfiguration\Query\GetNonExistingSelectOptionCodes'
        tags:
            - { name: 'validator.constraint_validator' }

    Akeneo\Pim\TableAttribute\Infrastructure\Validation\Attribute\AttributeColumnTypeShouldBeSelectValidator:
        arguments:
            - '@akeneo.pim.structure.query.get_attributes'
            - '@Akeneo\Pim\TableAttribute\Domain\TableConfiguration\Repository\TableConfigurationRepository'
        tags:
            - { name: 'validator.constraint_validator' }

    Akeneo\Pim\TableAttribute\Infrastructure\Validation\ProductValue\TableValidationsShouldMatchValidator:
        arguments:
            - '@Akeneo\Pim\TableAttribute\Domain\TableConfiguration\Repository\TableConfigurationRepository'
        tags:
            - { name: 'validator.constraint_validator' }

    Akeneo\Pim\TableAttribute\Infrastructure\Validation\ProductValue\TableShouldNotHaveTooManyRowsValidator:
        tags:
            - { name: 'validator.constraint_validator' }

    Akeneo\Pim\TableAttribute\Infrastructure\Validation\Attribute\ColumnDatatypeValidator:
        arguments:
            $allowedColumnDatatypes: '%pim_catalog_table_allowed_column_datatypes%'
        tags:
            - { name: 'validator.constraint_validator' }

    Akeneo\Pim\TableAttribute\Infrastructure\Validation\ReferenceEntity\ReferenceEntityShouldNotBeLinkedToATableColumnValidator:
        arguments:
            - '@Akeneo\Pim\TableAttribute\Domain\TableConfiguration\Query\IsLinkedToATableColumn'
        tags:
            - { name: 'validator.constraint_validator' }

    Akeneo\Pim\TableAttribute\Infrastructure\Validation\ProductValue\RecordsShouldExistValidator:
        arguments:
            - '@Akeneo\Pim\TableAttribute\Domain\TableConfiguration\Repository\TableConfigurationRepository'
            - '@Akeneo\Pim\TableAttribute\Infrastructure\Value\Query\GetExistingRecordCodes'
        tags:
            - { name: 'validator.constraint_validator' }

    Akeneo\Pim\TableAttribute\Infrastructure\Validation\Attribute\ReferenceEntityIdentifierShouldExist:
        tags:
            - { name: 'validator.constraint_validator' }

    Akeneo\Pim\TableAttribute\Infrastructure\Validation\Attribute\ReferenceEntityIdentifierShouldExistValidator:
        arguments:
            - '@Akeneo\Pim\TableAttribute\Domain\TableConfiguration\Query\ReferenceEntityExists'
            - '@Akeneo\Pim\TableAttribute\Infrastructure\AntiCorruptionLayer\Feature'
        tags:
            - { name: 'validator.constraint_validator' }

    # Constraint guessers
    Akeneo\Pim\TableAttribute\Infrastructure\Validation\ProductValue\ConstraintGuesser\TableGuesser:
        tags:
            - { name: 'pim_catalog.constraint_guesser.attribute' }

    Akeneo\Pim\TableAttribute\Infrastructure\Validation\Attribute\ImmutableReferenceEntityIdentifierValidator:
        arguments:
            - '@Akeneo\Pim\TableAttribute\Domain\TableConfiguration\Repository\TableConfigurationRepository'
        tags:
            - { name: 'validator.constraint_validator' }
