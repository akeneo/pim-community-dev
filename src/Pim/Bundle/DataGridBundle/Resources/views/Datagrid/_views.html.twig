<select id="view-selector" class="hide">
    {% set hasDefaultView = false %}

    {% for view in views %}
        {% if app.user.getDefaultGridView(alias) is not null and view.id == app.user.getDefaultGridView(alias).id %}
            {% set hasDefaultView = true %}
            {% set dataDefault    = '1' %}
        {% else %}
            {% set dataDefault = '0' %}
        {% endif %}

        <option value="{{ view.id }}" data-filters="{{ view.filters }}" data-columns="{{ view.columns|join(',') }}" data-default="{{ dataDefault }}" data-removable="{{ view.owner.id == app.user.id ? 1 : 0 }}">
            {{- view.label -}}
        </option>
    {% endfor %}

    {% if not hasDefaultView %}
        <option value="0" data-default="1">
            {{- 'datagrid_view.default'|trans -}}
        </option>
    {% endif %}
</select>

<a id="update-view" class="muted hide" href="javascript:void(0);">
    <i class="icon-ok" data-toggle="tooltip" data-placement="right" data-original-title="{{ 'datagrid_view.save_changes'|trans }}"></i>
</a>

<a id="remove-view" class="muted hide" href="javascript:void(0);">
    <i class="icon-trash" data-toggle="tooltip" data-placement="right" data-original-title="{{ 'datagrid_view.remove'|trans }}"></i>
</a>

<a id="create-view" class="muted" href="javascript:void(0);">
    <i class="icon-plus" data-toggle="tooltip" data-placement="right" data-original-title="{{ 'datagrid_view.create'|trans }}"></i>
</a>

{{ form_start(form, { attr: { class: 'hide' } }) }}
    {{ form_widget(form.label) }}
    {{ form_widget(form.filters) }}
    {{ form_widget(form.order) }}
{{ form_end(form) }}

<script type="text/javascript">
require(
    ['jquery', 'underscore', 'backbone', 'pim/router', 'oro/mediator', 'pim/datagrid/state', 'oro/messenger', 'pim/dialog', 'jquery.multiselect', 'jquery.multiselect.filter'],
    function ($, _, Backbone, router, mediator, DatagridState, messenger, Dialog) {
        'use strict';

        var reloadPageWithoutFilters = function() {
            var url = window.location.hash.split('|g/').shift();

            Backbone.history.fragment = new Date().getTime();
            Backbone.history.navigate(url, true);
        };

        var $selector = $('#view-selector');

        var activateView = function(viewId) {
            if (0 === +viewId) {
                DatagridState.remove('{{ alias }}', ['view', 'filters', 'columns']);
            } else {
                var $viewItem = $selector.find('option[value="' + viewId + '"]');
                if ($viewItem.length) {
                    DatagridState.set('{{ alias }}', { 'view': viewId, 'filters': $viewItem.data('filters'), 'columns': $viewItem.data('columns') });
                }
            }
        };

        var activeViewId = DatagridState.get('{{ alias }}', 'view');
        var $activeView  = $selector.find('option[value="'+activeViewId+'"]');

        if (!$activeView.length) {
            $activeView = $selector.find('option[data-default="1"]');
            activeViewId = $activeView.val();
        }

        var activeViewLabel = $activeView.text();

        var $removeLink = $('#remove-view');
        if ($activeView.data('removable')) {
            $removeLink.removeClass('hide').on('click', function() {
                Dialog.confirm('{{ 'confirmation.remove.datagrid view'|trans }}', '{{ 'confirmation.delete'|trans }}', function() {
                    $.ajax({
                        url: router.generate('pim_datagrid_view_remove', { id: activeViewId }),
                        type: 'POST',
                        headers: { accept:'application/json' },
                        data: { _method: 'DELETE' },
                        success: function() {
                            DatagridState.remove('{{ alias }}', ['view', 'filters', 'columns']);
                            rrouter.reloadPage();
                        }
                    });
                });
            });
        }

        var truncateTitle = function(title) {
            return title.length > 20 ? title.substr(0, 17) + '...' : title;
        };

        var opts = {
            title: truncateTitle(activeViewLabel),
            placeholder: '{{ 'Search'|trans }}',
            header: '',
            height: 175,
            minWidth: 225,
            classes: 'pimmultiselect',
            position: {
                my: 'right top',
                at: 'right bottom',
                collision: 'none'
            }
        };
        opts.selectedText = opts.noneSelectedText = opts.title;

        $selector.multiselect(opts).multiselectfilter({
            label: false,
            placeholder: opts.placeholder
        });

        var $menu = $('.ui-multiselect-menu.pimmultiselect').addClass('highlight-hover').appendTo($('#container'));
        $menu.find('input[type=checkbox]').addClass('hide');
        $menu.find('input[type="search"]').width(207);

        var sendForm = function(url, cb) {
            $.post(url, $('#{{ form.vars.id }}').serialize(), function(response) {
                if (response && response.errors && response.errors.length) {
                    _.each(response.errors, function(error) {
                        messenger.notificationFlashMessage('error', error);
                    })
                } else if (response && response.id) {
                    DatagridState.set('{{ alias }}', 'view', response.id);
                    if (cb) {
                        cb(response.id);
                    } else {
                        router.reloadPage();
                    }
                }
            });
        };

        var submitForm = function () {
            if (!$('#{{ form.label.vars.id }}').val()) {
                return;
            }
            $('#{{ form.filters.vars.id }}').val(DatagridState.get('{{ alias }}', 'filters'));
            $('#{{ form.order.vars.id }}').val(DatagridState.get('{{ alias }}', 'columns'));
            sendForm('{{ path('pim_datagrid_view_index', { alias: alias }) }}');
        };

        var $openButton = $('button.pimmultiselect').addClass('btn btn-group').css({
            'margin-top': '-6px',
            'margin-left': '10px'
        }).prepend($('<span>', { 'text': '{{ 'datagrid_view.views'|trans }}', 'class': 'pull-left buffer-small-right' }).css({
            'margin-right': '10px',
            'border-right': '1px solid #ccc'
        }));
        $openButton.append($('<i>', { 'class': 'icon-caret-down', 'css': { 'position': 'absolute', 'top': '6px', 'right': '6px' } }));

        var $updateLink = $('#update-view');
        $updateLink.removeClass('hide').on('click', function() {
            var state = DatagridState.get('{{ alias }}', ['view', 'columns', 'filters']);
            $('#{{ form.filters.vars.id }}').val(state.filters);
            $('#{{ form.order.vars.id }}').val(state.columns);

            sendForm(router.generate('pim_datagrid_view_index', { alias: '{{ alias }}', id: state.view }), function() {
                $activeView.data('filters', state.filters);
                $activeView.data('columns', state.columns);
                handleStateChange();
                messenger.notificationFlashMessage('success', '{{ 'flash.datagrid view.updated'|trans }}');
            });
        });

        var promptForLabel = function() {
            var content = '<input name="label" id="view-label" type="text" placeholder="{{ 'datagrid_view.placeholder'|trans }}">';
            var label = null;
            Dialog.confirm(content, '{{ 'datagrid_view.choose_label'|trans }}', function() {
                $('#{{ form.label.vars.id }}').val(label);
                submitForm();
            });
            var $input = $('#view-label');
            var $submitBtn = $input.parent().parent().find('.btn.ok').hide();
            $input.on('input', function() {
                label = $input.val();
                if (!label.length) {
                    $submitBtn.hide();
                } else {
                    $submitBtn.show();
                }
            }).on('keypress', function(e) {
                if ((e.keyCode || e.which) == 13 && label.length) {
                    $submitBtn.trigger('click');
                }
            });
        };

        var $createLink = $('#create-view').on('click', promptForLabel);

        mediator.once('route_start', function() {
            $selector.multiselect('destroy').hide();
            $createLink.addClass('hide');
            $updateLink.addClass('hide');
            $removeLink.addClass('hide');
        });

        var setTitle = function(title, suffix) {
            title = truncateTitle(title);
            if (suffix) {
                title += suffix;
            }
            $selector.multiselect({
                title: title,
                selectedText: title,
                noneSelectedText: title
            });
        };

        var handleStateChange = function() {
            var cleanState = { 'filters': $activeView.data('filters'), 'columns': $activeView.data('columns') };
            var currentState = DatagridState.get('{{ alias }}', ['filters', 'columns']);
            var $updateLink = $('#update-view');

            if ((!currentState.filters || currentState.filters == cleanState.filters)
                && (!currentState.columns || currentState.columns == cleanState.columns)
            ) {
                setTitle(activeViewLabel);
                $updateLink.addClass('hide');

            } else {
                setTitle(activeViewLabel, ' *');
                if (!$activeView.data('default') && $activeView.data('removable')) {
                    $updateLink.removeClass('hide');
                } else {
                    $updateLink.addClass('hide');
                }
            }
        };

        handleStateChange();

        mediator.bind('grid:{{ alias }}:state_changed', handleStateChange);

        $menu.on('click', 'li', function() {
            var gridViewId = $(this).find('input').val();
            activateView(gridViewId);

            router.reloadPage();
        });
    }
);
</script>
