version: 2
jobs:
  build_dev:
    machine:
      image: ubuntu-1604:201903-01
    steps:
      - checkout
      - run:
          name: Copy docker-compose.override.yml.dist
          command: cp .circleci/docker-compose.override.yml.dist docker-compose.override.yml
      - run:
            name: Pull and build the latest Docker images
            command: |
                make php-image-dev
                docker save -o php-pim-image.tar akeneo/pim-dev/php:7.3
      - run:
          name: Setup tests results folder and log folder
          command: mkdir -p var/tests/behat var/tests/phpspec var/tests/csfixer var/logs var/tests/screenshots ~/.cache/yarn ~/.composer
      - run:
          name: Change owner on project dir (default user = circleci (1001) and docker needs uid 1000)
          command: sudo chown -R 1000:1000 ../project
      - restore_cache:
          name: Restore cache - node_modules
          keys:
            - node-modules-{{ .Environment.CACHE_VERSION }}-{{ checksum "yarn.lock" }}
      - restore_cache:
          name: Restore cache - vendor
          keys:
            - vendor-{{ .Environment.CACHE_VERSION }}-{{ checksum "composer.lock" }}
      - run:
          name: Change owner on project dir after restoring cache
          command: |
              sudo chown -R 1000:1000 ../project
              sudo chown -R 1000:1000 ~/.composer
              sudo chown -R 1000:1000 ~/.cache/yarn
      - run:
            name: Install back and front dependencies
            command: make dependencies
      - run:
            name: Check PIM requirements
            command: |
                C='mysql elasticsearch' make up
                docker/wait_docker_up.sh
                make check-requirements
      - run:
            name: Install asset
            command: make assets
      - run:
            name: Build CSS
            command: make css
      - run:
            name: Build Javascript
            command: |
                make javascript-test
                make javascript-dev
      - run:
            name: Change owner on project dir after install
            command: sudo chmod -R 777 ../project
      - save_cache:
          paths:
            - ./node_modules
          key: node-modules-{{ .Environment.CACHE_VERSION }}-{{ checksum "yarn.lock" }}
      - save_cache:
          paths:
            - ./vendor
          key: vendor-{{ .Environment.CACHE_VERSION }}-{{ checksum "composer.lock" }}
      - persist_to_workspace:
          root: ~/
          paths:
            - project

  back_static_and_acceptance:
      machine:
          image: ubuntu-1604:201903-01
      steps:
          - attach_workspace:
                at: ~/
          - run:
                name: Change owner on project dir (default user = circleci (1001) and docker needs uid 1000)
                command: sudo chown -R 1000:1000 ../project
          - run:
                name: Load archived docker image
                command: docker load -i php-pim-image.tar
          - run:
                name: Check Pullup
                command: make check-pullup
                when: always
          - run:
                name: Analyzes source code to flag programming errors, bugs, stylistic errors, and suspicious constructs
                command: make lint-back CI=1
          - run:
                name: Code Coupling Detection
                command: make coupling-back CI=1
                when: always
          - run:
                name: Unit tests
                command: make unit-back CI=1
          - run:
                name: Acceptance tests
                command: make acceptance-back CI=1

                when: always
          - store_test_results:
                path: var/tests
          - store_artifacts:
                path: var/tests
          - store_artifacts:
                path: var/logs

  back_phpunit:
      machine:
          image: ubuntu-1604:201903-01
      parallelism: 10
      steps:
          - attach_workspace:
                at: ~/
          - run:
                name: Change owner on project dir in order to archive the project into the workspace
                command: sudo chown -R 1000:1000 ../project
          - run:
                name: Start containers
                command: |
                    docker load -i php-pim-image.tar
                    APP_ENV=test C='fpm mysql elasticsearch object-storage' make up
                    docker/wait_docker_up.sh
          - run:
                name: Install database
                command: APP_ENV=test make database
          - run:
                name: PHPunit Integration
                command: make integration-back CI=1
          - run:
                name: PHPunit End to end
                command: make end-to-end-back CI=1
          - store_test_results:
                path: var/tests/phpunit
          - store_artifacts:
                path: var/tests/phpunit
          - store_artifacts:
                path: var/logs

  back_behat_legacy:
    machine:
      image: ubuntu-1604:201903-01
    parallelism: 20
    steps:
      - attach_workspace:
          at: ~/
      - run:
            name: Get Behat Suite name to run
            command: |
                TESTSUITE=$(echo $CIRCLE_BRANCH | sed -e 's/^.*-\([^-]*\)$/\1/g')
                if ! [[ $TESTSUITE =~ ^(weasel|chipmunk|raccoon)$ ]] ; then
                  TESTSUITE="all"
                fi
                echo "Behat Suite to run: "$TESTSUITE
                echo "export TESTSUITE=$TESTSUITE" >> $BASH_ENV
      - run:
            name: Change owner on project dir in order to archive the project into the workspace
            command: sudo chown -R 1000:1000 ../project
      - run:
            name: Start containers
            command: |
                docker load -i php-pim-image.tar
                APP_ENV=behat C='fpm mysql elasticsearch httpd object-storage selenium' make up
                docker/wait_docker_up.sh
      - run:
            name: Install database
            command: APP_ENV=behat make database
      - run:
            name: Behat legacy
            command: make end-to-end-legacy SUITE=$TESTSUITE CI=1
      - run:
          name: Gather Junit test result files in the same directory to improve the render of failing tests
          command: |
              set -e
              cd var/tests/behat
              sudo chmod -R 777 .
              for subdir in */*; do mv "${subdir}" "${subdir/\//_}"; done
          when: always
      - store_test_results:
          path: var/tests/behat
      - store_artifacts:
          path: var/tests/behat
      - store_artifacts:
          path: var/tests/screenshots
      - store_artifacts:
          path: var/logs

  front_static_acceptance_and_integration:
      machine:
          image: ubuntu-1604:201903-01
      steps:
        - attach_workspace:
            at: ~/
        - run:
            name: Create yarn cache folder
            command: mkdir -p  ~/.cache/yarn
        - run:
              name: Change owner on project dir (default user = circleci (1001) and docker needs uid 1000)
              command: sudo chown -R 1000:1000 ../project ~/.cache/yarn
        - run:
              name: Front linter
              command: make lint-front CI=1
        - run:
              name: Front unit tests
              command: make unit-front CI=1
        - run:
              name: Front acceptance tests
              command: make acceptance-front CI=1
        - run:
              name: Front integration tests
              command: make integration-front CI=1

workflows:
  version: 2
  pull_request:
      jobs:
          - wait_for_user_approval:
                type: approval
                filters:
                    branches:
                        ignore:
                            - master
          - build_dev:
                requires:
                    - wait_for_user_approval
          - back_static_and_acceptance:
                requires:
                    - build_dev
          - front_static_acceptance_and_integration:
                requires:
                    - build_dev
          - back_phpunit:
                requires:
                    - back_static_and_acceptance
                    - front_static_acceptance_and_integration
          - back_behat_legacy:
                requires:
                    - back_phpunit

  nightly:
      triggers:
          - schedule:
                cron: "0 2 * * *"
                filters:
                    branches:
                        only:
                            - master
      jobs:
          - build_dev
          - back_static_and_acceptance:
                requires:
                    - build_dev
          - front_static_acceptance_and_integration:
                requires:
                    - build_dev
          - back_phpunit:
                requires:
                    - back_static_and_acceptance
                    - front_static_acceptance_and_integration
          - back_behat_legacy:
                requires:
                    - back_phpunit
