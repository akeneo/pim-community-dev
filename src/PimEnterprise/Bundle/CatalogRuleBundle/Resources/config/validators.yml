parameters:
    pimee_catalog_rule.validator.existing_filter_field.class: PimEnterprise\Component\CatalogRule\Validator\ExistingFilterFieldValidator
    pimee_catalog_rule.validator.existing_set_field.class:    PimEnterprise\Component\CatalogRule\Validator\ExistingSetFieldValidator
    pimee_catalog_rule.validator.existing_copy_fields.class:  PimEnterprise\Component\CatalogRule\Validator\ExistingCopyFieldsValidator
    pimee_catalog_rule.validator.existing_add_field.class:    PimEnterprise\Component\CatalogRule\Validator\ExistingAddFieldValidator
    pimee_catalog_rule.validator.non_empty_value.class:       PimEnterprise\Component\CatalogRule\Validator\NonEmptyValueConditionValidator
    pimee_catalog_rule.validator.value_condition.class:       PimEnterprise\Component\CatalogRule\Validator\ValueConditionValidator
    pimee_catalog_rule.validator.property_action.class:       PimEnterprise\Component\CatalogRule\Validator\PropertyActionValidator
    pimee_catalog_rule.validator.existing_remove_field.class: PimEnterprise\Component\CatalogRule\Validator\ExistingRemoveFieldValidator

services:
    pimee_catalog_rule.validator.existing_filter_field:
        class: '%pimee_catalog_rule.validator.existing_filter_field.class%'
        arguments:
            - '@pim_catalog.query.filter.registry'
        tags:
            - { name: validator.constraint_validator, alias: pimee_filter_field_validator }

    pimee_catalog_rule.validator.existing_set_field:
        class: '%pimee_catalog_rule.validator.existing_set_field.class%'
        arguments:
            - '@pim_catalog.updater.setter.registry'
        tags:
            - { name: validator.constraint_validator, alias: pimee_set_field_validator }

    pimee_catalog_rule.validator.existing_copy_fields:
        class: '%pimee_catalog_rule.validator.existing_copy_fields.class%'
        arguments:
            - '@pim_catalog.updater.copier.registry'
        tags:
            - { name: validator.constraint_validator, alias: pimee_copy_fields_validator }

    pimee_catalog_rule.validator.existing_add_field:
        class: '%pimee_catalog_rule.validator.existing_add_field.class%'
        arguments:
            - '@pim_catalog.updater.adder.registry'
        tags:
            - { name: validator.constraint_validator, alias: pimee_add_field_validator }

    pimee_catalog_rule.validator.non_empty_value:
        class: '%pimee_catalog_rule.validator.non_empty_value.class%'
        arguments:
            - '@pim_catalog.query.filter.registry'
        tags:
            - { name: validator.constraint_validator, alias: pimee_non_empty_value_validator }

    pimee_catalog_rule.validator.value_condition:
        class: '%pimee_catalog_rule.validator.value_condition.class%'
        arguments:
            - '@pim_catalog.query.product_query_builder_factory'
        tags:
            - { name: validator.constraint_validator, alias: pimee_value_condition_validator }

    pimee_catalog_rule.validator.property_action:
        class: '%pimee_catalog_rule.validator.property_action.class%'
        arguments:
            - '@akeneo_rule_engine.action_applier.registry'
            - '@pim_catalog.builder.product'
            - '@pim_catalog.validator.product'
        tags:
            - { name: validator.constraint_validator, alias: pimee_property_action_validator }

    pimee_catalog_rule.validator.existing_remove_field:
            class: '%pimee_catalog_rule.validator.existing_remove_field.class%'
            arguments:
                - '@pim_catalog.updater.remover.registry'
            tags:
                - { name: validator.constraint_validator, alias: pimee_remove_field_validator }
