commands:
    install_yq:
        description: "Install yq"
        steps:
            - run:
                  name: Install yq
                  command: |
                      wget https://github.com/mikefarah/yq/releases/download/3.3.1/yq_linux_386
                      sudo mv yq_linux_386 /usr/local/bin/yq
                      echo "e7fa464149a450d068311a244f403757408a745b  /usr/local/bin/yq" > /tmp/checksum
                      sha1sum -c /tmp/checksum
                      sudo chmod +x /usr/local/bin/yq

jobs:
    checkout_ee:
        machine:
            image: ubuntu-2004:202101-01
        steps:
            - add_ssh_keys:
                  fingerprints:
                      - "1f:25:f8:bb:59:52:95:f6:e2:f2:97:2f:30:d4:e9:66"
            - run:
                  name: Download EE dev with the SSH key that we added above
                  command: |
                      export GIT_SSH_COMMAND='ssh -i ~/.ssh/id_rsa_1f25f8bb595295f6e2f2972f30d4e966 -o UserKnownHostsFile=~/.ssh/known_hosts -o IdentitiesOnly=Yes'
                      git clone git@github.com:akeneo/pim-enterprise-dev.git /home/circleci/project
            - run:
                  name: Checkout EE branch if it exists, or 6.0 otherwise
                  command: |
                      cd /home/circleci/project
                      git checkout ${CIRCLE_BRANCH} || git checkout 6.0
                      echo "Current commit: $(git rev-parse --short HEAD)"
            - run:
                  name: BIG COMMERCE CONNECTOR - Checkout BigCommerce Connector
                  command: |
                      mkdir -p tmp
                      export GIT_SSH_COMMAND='ssh -i ~/.ssh/id_rsa_1f25f8bb595295f6e2f2972f30d4e966 -o UserKnownHostsFile=~/.ssh/known_hosts -o IdentitiesOnly=Yes'
                      CONNECTOR_BC_BRANCH=$(git -c 'versionsort.suffix=-' ls-remote --exit-code --refs --sort='version:refname' --tags git@github.com:akeneo/bigcommerce-connector.git 'v*' | tail -n1 | cut -d'/' -f3)
                      git clone --branch $CONNECTOR_BC_BRANCH git@github.com:akeneo/bigcommerce-connector.git tmp/build-connector
            - run:
                  name: Require proper dev CE branch
                  command: |
                      sed -i "s#akeneo/pim-community-dev\": \"6.0.x-dev#akeneo/pim-community-dev\": \"dev-${CIRCLE_BRANCH}#" composer.json
                      sed -i "s#akeneo/pim-community-dev\": \"6.0.x-dev#akeneo/pim-community-dev\": \"dev-${CIRCLE_BRANCH}#" grth/composer.json
            - install_yq
            - run:
                  name: Remove MySQL port translation (see BH-664)
                  command: yq delete --inplace docker-compose.yml services.mysql.ports
            - run:
                  name: Persist default IMAGE_TAG to be the repo last commit SHA1
                  command: |
                      echo export IMAGE_TAG_SHORTED=$(echo $CIRCLE_SHA1 | cut -c -7) >> persisted_env_vars
                      echo export IMAGE_TAG=$CIRCLE_SHA1 >> persisted_env_vars
            - persist_to_workspace:
                  root: ~/
                  paths:
                      - project

    checkout_ce:
        machine:
            image: ubuntu-2004:202101-01
        steps:
            - checkout
            - install_yq
            - run:
                  name: Remove MySQL port translation (see BH-664)
                  command: yq delete --inplace docker-compose.yml services.mysql.ports
            - persist_to_workspace:
                  root: ~/
                  paths:
                      - project

    build_dev:
        parameters:
            is_ee_built:
                type: boolean
                default: true
            path_to_front_packages:
                type: string
                default: front-packages
        machine:
            image: ubuntu-2004:202101-01
        steps:
            - attach_workspace:
                  at: ~/
            - run:
                  name: Copy docker-compose.override.yml.dist
                  command: cp .circleci/docker-compose.override.yml.dist docker-compose.override.yml
            - when:
                  condition: << parameters.is_ee_built >>

                  steps:
                      - run:
                            name: Creating hash key for PHP Docker image
                            command: |
                                find Dockerfile docker/ -type f -print0 | sort -z | xargs -0 sha1sum | sha1sum > ~/php-docker-image.hash
                                date +%F >> ~/php-docker-image.hash
                      - restore_cache:
                            name: Restore PHP docker image cache
                            key: php-docker-image-{{ checksum "~/php-docker-image.hash" }}
                      - run:
                            name: Build the latest EE Docker images
                            command: |
                                ls php-pim-image.tar && docker load -i php-pim-image.tar
                                ls php-pim-image.tar || make php-image-dev
                                ls php-pim-image.tar || docker save -o php-pim-image.tar akeneo/pim-dev/php:8.0
                      - save_cache:
                            name: Save PHP docker image cache
                            key: php-docker-image-{{ checksum "~/php-docker-image.hash" }}
                            paths:
                                - php-pim-image.tar
            - unless:
                  condition: << parameters.is_ee_built >>
                  steps:
                      - run:
                            name: Save the CE image as a tar
                            command: |
                                docker pull akeneo/pim-php-dev:6.0
                                docker save -o php-pim-image.tar akeneo/pim-php-dev:6.0
            - run:
                  name: Setup tests results folder and log folder
                  command: mkdir -p var/tests/phpspec var/tests/csfixer var/logs var/tests/screenshots ~/.cache/yarn ~/.cache/Cypress ~/.composer
            - run:
                  name: Creating cache key for JS and PHP dependencies
                  command: |
                      cat yarn.lock > ~/front-dependency.hash && date +%F >> ~/front-dependency.hash
                      cat composer.json > ~/back-dependency.hash && date +%F >> ~/back-dependency.hash
            - restore_cache:
                  name: Restore cache - yarn and Cypress dependency cache
                  keys:
                      - frontend-dependency-cache-{{ checksum "~/front-dependency.hash" }}
            - restore_cache:
                  name: Restore cache - composer dependency cache
                  keys:
                      - backend-dependency-cache-{{ checksum "~/back-dependency.hash" }}
            - run:
                  name: Change owner on project dir (default user = circleci (1001) and docker needs uid 1000)
                  command: |
                      sudo chown -R 1000:1000 ../project ~/.composer ~/.cache/
            - run:
                  name: Install back and front dependencies
                  command: make dependencies
                  environment:
                      YARN_REGISTRY: "http://registry.yarnpkg.com"
            - run:
                  name: Install assets
                  command: make assets
            - run:
                  name: Build css
                  command: make css
            - run:
                  name: Create hash for front packages
                  # Adding date allows to invalidate the cache each new day, adding front package path avoid conflict between CE build and EE build
                  command: |
                      find << parameters.path_to_front_packages >>/akeneo-design-system -type f -print0 | sort -z | xargs -0 sha1sum | sha1sum > ~/akeneo-design-system.hash
                      find << parameters.path_to_front_packages >>/measurement -type f -print0 | sort -z | xargs -0 sha1sum | sha1sum > ~/measurement.hash
                      find << parameters.path_to_front_packages >>/shared -type f -print0 | sort -z | xargs -0 sha1sum | sha1sum > ~/shared.hash
                      find << parameters.path_to_front_packages >>/../src/Akeneo/Platform/Job/front/process-tracker -type f -print0 | sort -z | xargs -0 sha1sum | sha1sum > ~/process-tracker.hash
                      find << parameters.path_to_front_packages >>/../src/Akeneo/Platform/Bundle/CatalogVolumeMonitoringBundle/front -type f -print0 | sort -z | xargs -0 sha1sum | sha1sum > ~/catalog-volume-monitoring.hash
                      echo "$(date +%F) << parameters.path_to_front_packages >>" | tee -a ~/akeneo-design-system.hash ~/measurement.hash ~/shared.hash ~/catalog-volume-monitoring.hash ~/process-tracker.hash
            - run:
                  name: Set directories owner to circleci
                  command: sudo chown -R 1001:1001 .
            - restore_cache:
                  name: Restore front package DSM cache
                  key: front-packages-dsm-{{ checksum "~/akeneo-design-system.hash" }}
            - restore_cache:
                  name: Restore front package measurement cache
                  key: front-packages-measurement-{{ checksum "~/measurement.hash" }}
            - restore_cache:
                  name: Restore front package Shared cache
                  key: front-packages-shared-{{ checksum "~/shared.hash" }}
            - restore_cache:
                  name: Restore micro frontend Process tracker cache
                  key: micro-frontend-process-tracker-{{ checksum "~/process-tracker.hash" }}
            - restore_cache:
                  name: Restore micro-frontend Catalog Volume Monitoring cache
                  key: micro-frontend-catalog-volume-monitoring-{{ checksum "~/catalog-volume-monitoring.hash" }}
            - run:
                  name: Set directories owner to docker
                  command: sudo chown -R 1000:1000 ../project
            - run:
                  name: Build front-packages
                  command: make front-packages
            - run:
                  name: Build Javascript
                  command: make javascript-dev
            - run:
                  name: Change owner on project dir after installing when there is no cache
                  command: sudo chmod -R 777 ../project ~/.cache ~/.composer
            - save_cache:
                  name: Save frontend dependency cache
                  paths:
                      - ~/.cache
                  key: frontend-dependency-cache-{{ checksum "~/front-dependency.hash" }}
            - save_cache:
                  name: Save backend dependency cache
                  paths:
                      - ~/.composer
                  key: backend-dependency-cache-{{ checksum "~/back-dependency.hash" }}
            - save_cache:
                  name: Save front package DSM cache
                  key: front-packages-dsm-{{ checksum "~/akeneo-design-system.hash" }}
                  paths:
                      - << parameters.path_to_front_packages >>/akeneo-design-system/
            - save_cache:
                  name: Save front package measurement cache
                  key: front-packages-measurement-{{ checksum "~/measurement.hash" }}
                  paths:
                      - << parameters.path_to_front_packages >>/measurement/
            - save_cache:
                  name: Save front package Shared cache
                  key: front-packages-shared-{{ checksum "~/shared.hash" }}
                  paths:
                      - << parameters.path_to_front_packages >>/shared/
            - save_cache:
                  name: Save micro frontend Process Tracker cache
                  key: micro-frontend-process-tracker-{{ checksum "~/process-tracker.hash" }}
                  paths:
                      - << parameters.path_to_front_packages >>/../src/Akeneo/Platform/Job/front/process-tracker
            - save_cache:
                  name: Save micro-frontend Catalog Volume Monitoring cache
                  key: micro-frontend-catalog-volume-monitoring-{{ checksum "~/catalog-volume-monitoring.hash" }}
                  paths:
                      - << parameters.path_to_front_packages >>/../src/Akeneo/Platform/Bundle/CatalogVolumeMonitoringBundle/front
            - persist_to_workspace:
                  root: ~/
                  paths:
                      - project
