{% extends 'PimEnrichBundle::layout.html.twig' %}

{% macro configuration(config, violations, jobType) %}
<table class="configuration">
    <thead></thead>
    <tbody>
        {% for element, value in config %}
            <tr>
                <td><b>{{ 'pim_base_connector.%s.%s.label'|format(jobType, element)|trans }}</b></td>
                <td>{{ value|normalizeValue }} {{ getViolations(violations, element) }}</td>
            </tr>
        {% endfor %}
    </tbody>
</table>
{% endmacro %}

{% block content %}

    {% set title = entityName ~ ' - ' ~ jobInstance.label %}

    {% set left %}
        <ul class="inline">
            <li>{{ 'Job'|trans }}: {{ jobInstance.job.name|trans }}</li>
            <li>{{ 'Connector'|trans }}: {{ jobInstance.connector|trans }}</li>
        </ul>
    {% endset %}

    {% set buttons %}
        {{ elements.backLink(indexRoute) }}
        {% if jobInstance.status != constant('Akeneo\\Bundle\\BatchBundle\\Entity\\JobInstance::STATUS_IN_PROGRESS') %}
            {{ elements.link('Edit', editRoute, { icon: 'edit' }) }}
        {% endif %}
        {% if uploadAllowed and uploadViolations|length == 0 %}
            {{ elements.link('Upload and '~action, null, {icon: 'upload-alt', class: 'btn-primary', attr: { 'data-form-toggle': 'pim_importexport_import_upload'}}) }}
        {% endif %}
        {% if violations|length == 0 %}
            {{ elements.link(action~' now', launchRoute, {icon: 'cogs', class: 'btn-primary'}) }}
        {% endif %}
    {% endset %}

    {{ elements.page_header(title, buttons, null, left) }}

    {% if form is defined and form is not empty and uploadAllowed and uploadViolations|length == 0 %}
        {{ form_start(form, {
            'id': 'pim_importexport_import_upload',
            'action': launchRoute,
            'attr': {
                'class': 'form-upload hide'
            }
        }) }}
            {{ elements.form_errors(form) }}
            <div class="row-fluid">
                {{ form_row(form.file) }}
                {{ elements.submitBtn('Upload and '~action~' now') }}
            </div>
        {{ form_end(form) }}
    {% endif %}

    <div class="row-fluid tab-content">
        <div class="tab-pane active">
            {% block configuration %}
                {% set configuration = _self.configuration(jobInstance.job.configuration, violations, action) %}
                {{ elements.accordion({ 'Configuration': configuration }, 1, true) }}
            {% endblock configuration %}
        </div>
    </div>

{% endblock %}
