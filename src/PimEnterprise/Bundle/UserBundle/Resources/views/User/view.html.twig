{% extends '@PimUser/User/view.html.twig' %}

{% macro api_data_block(user) %}
<div class="horizontal">
    <label>{{ user.api ? user.api.apiKey : 'N/A' }}</label>
    {% if resource_granted('pim_user_user_edit') %}
        <a class="AknButton AknButton--grey AknButton--little no-hash" id="btn-apigen" href="{{ path('oro_user_apigen', { id: user.id }) }}"
           data-title="{{ 'Generate key'|trans }}" data-message="{{ 'Generate key was successful. New key:'|trans }}">
            {{ 'Generate key'|trans }}
        </a>
    {% endif %}
</div>
{% endmacro %}

{% block content_data %}
  <div>
    {% set id = 'user-profile' %}

    {% set dataSubBlocks = [UI.attibuteRow('Email', {value: entity.email, hint: ''|trans})] %}

    {% set dataBlocks = [
        {
            'title': 'General'|trans,
            'class': 'active',
            'subblocks': [
                {
                    'title': 'Basic Information'|trans,
                    'data': [
                        UI.attibuteRow('User name'|trans, entity.username),
                        entity.namePrefix ? UI.attibuteRow('Name prefix'|trans, entity.namePrefix),
                        UI.attibuteRow('First name'|trans, entity.firstName|default('N/A')),
                        entity.middleName ? UI.attibuteRow('Middle name'|trans, entity.middleName),
                        UI.attibuteRow('Last name'|trans, entity.lastName|default('N/A')),
                        entity.nameSuffix ? UI.attibuteRow('Name suffix'|trans, entity.nameSuffix),
                        UI.attibuteRow('Birthday'|trans, entity.birthday ? entity.birthday|date_presenter : 'N/A'),
                        UI.renderAttribute('API key'|trans, _self.api_data_block(entity))
                    ]
                },
                {
                    'title': 'Contact Information'|trans,
                    'data': dataSubBlocks
                }
            ]
        }
    ]
    %}

    {#
      EntityExtend fields START
    #}

    {% set filters = [] %}
    {% for filter in entity.productGridFilters %}
      {% set filters = filters|merge([filter_label(filter)]) %}
    {% endfor %}

    {% set additionalData = [
        UI.attibuteRow('Catalog locale'|trans, entity.catalogLocale),
        UI.attibuteRow('Catalog scope'|trans, entity.catalogScope),
        UI.attibuteRow('Default tree'|trans, entity.defaultTree),
        UI.attibuteRow('user.product_grid_filters'|trans, filters|join(', '))
    ] %}

    {% for view in entity.getDefaultGridViews() %}
        {% set additionalData = additionalData|merge([
            UI.attibuteRow(
                'user.default_' ~ view.datagridAlias|replace('-', '_') ~ '_view.label'|trans,
                view.label|default('user.default_grid_view.none'|trans)
            )
        ]) %}
    {% endfor %}

    {% set additional = [
        {
            'title': 'Additional Information'|trans,
            'class': 'active',
            'subblocks': [
                {
                    'title': '',
                    'data': additionalData
                },
                {
                    'title': '',
                    'data': [
                        UI.attibuteRow('User salt'|trans, entity.salt)
                    ]
                }
            ]
        }
    ]
    %}

    {% set interfaces = [
        {
            'title': 'Interfaces'|trans,
            'subblocks': [
                {
                    'title': '',
                    'data': [
                        UI.attibuteRow('UI locale'|trans, entity.uiLocale.getName),
                    ]
                }
            ]
        }
    ]
    %}

    {% set yesTrans = 'user.proposals.notifications.yes' %}
    {% set noTrans  = 'user.proposals.notifications.no' %}

    {% set notificationsSubblocks = [] %}
    {% set proposal_to_review     = [] %}
    {% set proposal_state         = [] %}

    {% if is_proposal_to_review_field_visible(entity) %}
        {% set notifyToReview     = entity.hasProposalsToReviewNotification ? yesTrans : noTrans %}
        {% set proposal_to_review = [
            {
                'title': '',
                'data': [
                    UI.attibuteRow(
                        'user.proposals.notifications.to_review'|trans,
                        notifyToReview|trans
                    ),
                ]
            }
        ]
        %}
    {% endif %}

    {% if is_proposal_state_field_visible(entity) %}
        {% set notifyState    = entity.hasProposalsStateNotification ? yesTrans : noTrans %}
        {% set proposal_state = [
            {
                'title': '',
                'data': [
                    UI.attibuteRow(
                        'user.proposals.notifications.state'|trans,
                        notifyState|trans
                    ),
                ]
            }
        ]
        %}
    {% endif %}

    {% set notificationsSubblocks = notificationsSubblocks|merge(proposal_to_review)|merge(proposal_state) %}

    {% set notifications = [{
        'title': 'pimee_user.user.tab.notifications.title'|trans,
        'subblocks': notificationsSubblocks,
    }]
    %}

    {% set dataBlocks = dataBlocks|merge(additional)|merge(interfaces)|merge(notifications) %}

    {#
      EntityExtend fields END
    #}

    {%- set additional_data -%}
        {% placeholder oro_user_view_additional_data %}
    {%- endset -%}

    {% if additional_data is not empty %}
        {% set dataBlocks = dataBlocks|merge(
            [{
                'title': 'Additional data'|trans,
                'subblocks': [
                    {
                        'title': '',
                        'data': [additional_data]
                    }
                ]
            }]
        ) %}
    {% endif %}

    {% set data = { 'dataBlocks': dataBlocks } %}
      {{ UI.scrollData(id, data) }}
  </div>
{% endblock content_data %}
