apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "elasticsearch.fullName" . }}-single
  labels:
    app: {{ template "elasticsearch.fullName" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
    component: {{ template "elasticsearch.fullName" . }}
    role: single
    {{- range $key, $value := .Values.global.extraLabels }}
    {{ $key }}: {{ $value | quote }}
    {{- end }}
    {{- range $key, $value := .Values.common.extraLabels }}
    {{ $key }}: {{ $value | quote }}
    {{- end }}
    {{- range $key, $value := .Values.single.extraLabels }}
    {{ $key }}: {{ $value | quote }}
    {{- end }}
spec:
  selector:
    matchLabels:
      component: {{ template "elasticsearch.fullName" . }}
      role: single
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        component: {{ template "elasticsearch.fullName" . }}
        role: single
        {{- range $key, $value := .Values.global.extraLabels }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
        {{- range $key, $value := .Values.common.extraLabels }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
        {{- range $key, $value := .Values.single.extraLabels }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
    spec:
      {{- if or .Values.common.busybox.increaseMaxMapCount .Values.cluster.plugins .Values.keystore }}
      initContainers:
      - name: init-sysctl
        image: "{{ .Values.image.init.repository }}:{{ .Values.image.init.tag }}"
        imagePullPolicy: {{ .Values.image.init.pullPolicy }}
        command: ["sysctl", "-w", "vm.max_map_count=262144"]
        securityContext:
          privileged: true
{{ if .Values.keystore }}
      - name: keystore
        image: "{{ .Values.image.es.repository }}:{{ .Values.image.es.tag }}"
        command:
        - sh
        - -c
        - |
          #!/usr/bin/env bash
          set -euo pipefail
          elasticsearch-keystore create
          for i in /tmp/keystoreSecrets/*/*; do
            key=$(basename $i)
            echo "Adding file $i to keystore key $key"
            elasticsearch-keystore add-file "$key" "$i"
          done
          # Add the bootstrap password since otherwise the Elasticsearch entrypoint tries to do this on startup
          #[ ! -z "$ELASTIC_PASSWORD" ] && echo $ELASTIC_PASSWORD | elasticsearch-keystore add -x bootstrap.password
          cp -a /usr/share/elasticsearch/config/elasticsearch.keystore /tmp/keystore/
        volumeMounts:
          - name: keystore
            mountPath: /tmp/keystore
          {{- range .Values.keystore }}
          - name: keystore-{{ .secretName }}
            mountPath: /tmp/keystoreSecrets/{{ .secretName }}
          {{- end }}
{{ end }}
{{- if .Values.cluster.plugins }}
{{ include "plugin-installer" . | indent 6 }}
{{- end }}
      {{- end }}
      containers:
      - name: es-single
        securityContext:
          privileged: true
          capabilities:
            add:
              - IPC_LOCK
              - SYS_RESOURCE
        image: "{{ .Values.image.es.repository }}:{{ .Values.image.es.tag }}"
        imagePullPolicy: {{ .Values.image.es.pullPolicy }}
        {{- if .Values.common.command }}
        command:
          {{- range $key, $value := .Values.common.command }}
          - {{ $value }}
          {{- end }}
        {{- end }}
        env:
        - name: PATH_DATA
          value: "{{ .Values.common.dataDir }}"
        - name: PATH_LOGS
          value: "{{ .Values.common.dataDir }}/../logs"
        - name: path.data
          value: "{{ .Values.common.dataDir }}"
        - name: path.logs
          value: "{{ .Values.common.dataDir }}/../logs"
        - name: node.name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: ES_JAVA_OPTS
          value: "-Xms{{ .Values.single.heapMemory }} -Xmx{{ .Values.single.heapMemory }}"
        {{- range $key, $value :=  .Values.common.env }}
        - name: {{ $key }}
          value: {{ $value | quote }}
        {{- end }}
        {{- range $key, $value :=  .Values.single.env }}
        - name: {{ $key }}
          value: {{ $value | quote }}
        {{- end }}
        resources:
{{ toYaml .Values.single.resources | indent 10 }}
        ports:
        - containerPort: 9200
          name: http
          protocol: TCP
        - containerPort: 9300
          name: transport
          protocol: TCP
        livenessProbe:
          tcpSocket:
            port: 9300
          initialDelaySeconds: 20
          periodSeconds: 10
          failureThreshold: 6
        volumeMounts:
        - name: data
          mountPath: {{ .Values.common.dataDir }}
        - name: config
          mountPath: /usr/share/elasticsearch/config/elasticsearch.yml
          subPath: elasticsearch.yml
{{- if .Values.cluster.plugins }}
        - name: plugindir
          mountPath: /usr/share/elasticsearch/plugins/
{{- end }}
{{ if .Values.keystore }}
        - name: keystore
          mountPath: /usr/share/elasticsearch/config/elasticsearch.keystore
          subPath: elasticsearch.keystore
{{ end }}
{{- if .Values.cluster.keystoreSecret }}
        - name: keystore
          mountPath: "/usr/share/elasticsearch/config/elasticsearch.keystore"
          subPath: elasticsearch.keystore
          readOnly: true
{{- end }}
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: pvc-{{ .Release.Name }}-es-single
        - name: config
          configMap:
            name: {{ template "elasticsearch.fullName" . }}
{{- if .Values.cluster.plugins }}
        - name: plugindir
          emptyDir: {}
{{- end }}
{{ if .Values.keystore }}
        - name: keystore
          emptyDir: {}
          {{- range .Values.keystore }}
        - name: keystore-{{ .secretName }}
          secret: {{ toYaml . | nindent 12 }}
          {{- end }}
{{ end }}
{{- if .Values.cluster.keystoreSecret }}
        - name: keystore
          secret:
            secretName: {{ .Values.cluster.keystoreSecret }}
{{- end }}
