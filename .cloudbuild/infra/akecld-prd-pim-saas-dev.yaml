steps:
# - id: 'tf sec'
#   name: 'aquasec/tfsec'
#   entrypoint: 'sh'
#   args:
#   - '-c'
#   - |
#       if [ -d "deployments-ucs/terraform/${_ENV}" ]; then
#         tfsec deployments-ucs/terraform/${_ENV}/ \
#             -m MEDIUM
#       else
#         echo "No files for deployments-ucs/terraform/${_ENV}. Exiting"
#       fi
- id: 'tf plan'
  name: 'hashicorp/terraform:1.1.3'
  env:
    - 'TF_IN_AUTOMATION=true'
    - 'GOOGLE_IMPERSONATE_SERVICE_ACCOUNT=${_TARGET_IMPERSONATE}'
  entrypoint: 'sh'
  args:
  - '-c'
  - |
      if [ -d "deployments-ucs/terraform/${_ENV}/" ]; then
        cd deployments-ucs/terraform/${_ENV}
        echo "*************** TERRAFORM PLAN ******************"
        echo "******* At project: ${_TARGET_PROJECT_ID} ********"
        echo "*************************************************"
        terraform init -no-color
        terraform plan -no-color || exit 1
      else
        echo "No files for ${_TARGET_PROJECT_ID}. Exiting"
      fi
- id: 'tf apply'
  name: 'hashicorp/terraform:1.1.3'
  env:
    - 'TF_IN_AUTOMATION=true'
    - 'GOOGLE_IMPERSONATE_SERVICE_ACCOUNT=${_TARGET_IMPERSONATE}'
  entrypoint: 'sh'
  args:
  - '-c'
  - |
      if [ "${BRANCH_NAME}" != "master" ]; then
        echo "Not on branch master. Leaving ..."
      else
        if [ -d "deployments-ucs/terraform/${_ENV}/" ]; then
          cd deployments-ucs/terraform/${_ENV}
          echo "*************** TERRAFORM APPLY ******************"
          echo "******* At project: ${_TARGET_PROJECT_ID} ********"
          echo "*************************************************"
          terraform init -no-color
          terraform apply -no-color -auto-approve || exit 1
        else
          echo "No files for ${_TARGET_PROJECT_ID}. Exiting"
        fi
      fi
logsBucket: 'gs://${_TARGET_PROJECT_ID}-cloudbuild-logs'
substitutions:
  _ENV: dev
  _TARGET_PROJECT_ID: akecld-prd-pim-saas-dev
  _TARGET_IMPERSONATE: main-service-account@akecld-prd-pim-saas-dev.iam.gserviceaccount.com
