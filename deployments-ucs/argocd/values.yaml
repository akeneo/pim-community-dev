## Argo CD configuration
## Ref: https://github.com/argoproj/argo-cd
##
nameOverride: argocd

global:
  image:
    repository: quay.io/argoproj/argocd
    tag: "v2.5.5"
    imagePullPolicy: IfNotPresent

## Argo Configs
configs:
  # -- Repository credentials to be used as Templates for other repos
  ## Creates a secret for each key/value specified below to create repository credentials
  credentialTemplates:
    https-creds:
      url: https://github.com/akeneo/pim-saas-k8s-artifacts.git
      password: null
      username: null

  # -- Repositories list to be used by applications
  ## Creates a secret for each key/value specified below to create repositories
  ## Note: the last example in the list would use a repository credential template, configured under "configs.repositoryCredentials".
  repositories:
    private-repo:
      name: pim-saas-k8s-artifacts
      url: https://github.com/akeneo/pim-saas-k8s-artifacts

server:
  extraArgs:
    - --insecure
  ingress:
    enabled: false

# helm-gcs plugin: https://argo-cd.readthedocs.io/en/stable/user-guide/helm/#using-initcontainers
# Permissions to gcs bucket are granted with workload identity
repoServer:
  serviceAccount:
    create: true
    annotations:
      iam.gke.io/gcp-service-account: null
  initContainers:
    - name: install-helm-plugins
      image: alpine/helm:3.10.2
      volumeMounts:
        - mountPath: /helm-working-dir
          name: helm-working-dir
      env:
        - name: HELM_CACHE_HOME
          value: /helm-working-dir
        - name: HELM_CONFIG_HOME
          value: /helm-working-dir
        - name: HELM_DATA_HOME
          value: /helm-working-dir  
      command: ["/bin/sh", "-c"]
      args:
        - apk --no-cache add curl;
          helm plugin install https://github.com/hayorov/helm-gcs.git;
          helm repo add akeneo-charts gs://akeneo-pim-saas-charts-prod;
          helm repo update;
          chmod -R 777 ${HELM_DATA_HOME};
