{{- if and .Values.onboarder.enabled .Values.onboarder.hook.importAdditionalOnboarderFixtures.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: import-additional-onboarder-fixtures
  labels:
    app: {{ template "pim.fullName" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    component: {{ template "pim.fullName" . }}
    {{- range $key, $value := .Values.global.extraLabels }}
    {{ $key }}: {{ $value | quote }}
    {{- end }}
    {{- range $key, $value := .Values.common.extraLabels }}
    {{ $key }}: {{ $value | quote }}
    {{- end }}
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": {{ .Values.onboarder.hook.importAdditionalOnboarderFixtures.hook | quote }}
    "helm.sh/hook-weight": "20"
    "helm.sh/hook-delete-policy": "before-hook-creation"
spec:
  template:
    metadata:
      labels:
        component: {{ template "pim.fullName" . }}
        role: import-additional-onboarder-fixtures
        {{- range $key, $value := .Values.global.extraLabels }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
        {{- range $key, $value := .Values.common.extraLabels }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
    spec:
      restartPolicy: Never
      containers:
        - name: update-family-requirements
          image:  {{ template "pim.imageNameAndTag" . }}
          imagePullPolicy: {{ .Values.image.pim.pullPolicy | quote }}
          command: ['sh', '-c', 'su -m -l www-data -s /bin/bash -c "cd /srv/pim && bin/console akeneo:batch:job csv_family_import -c ''{\"filePath\": \"/srv/pim/vendor/akeneo/pim-onboarder/src/Bundle/Resources/fixtures/setup/family_requirements.csv\"}''"']
          envFrom: [ configMapRef: { name: {{ template "pim.fullName" . }}-env } ]
          env:
            - { name: MAILER_USER, valueFrom: { secretKeyRef: { name: pim-secrets, key: mailerLogin } } }
            - { name: MAILER_PASSWORD, valueFrom: { secretKeyRef: { name: pim-secrets, key: mailerPassword } } }
            - { name: APP_DATABASE_PASSWORD, valueFrom: { secretKeyRef: { name: pim-secrets, key: mysqlPimUserPassword } } }
            - { name: GOOGLE_NAMESPACE, valueFrom: { fieldRef: { fieldPath: metadata.namespace } } }
            - { name: GOOGLE_POD_NAME, valueFrom: { fieldRef: { fieldPath: metadata.name } } }
{{- if .Values.common.phpConfCLI }}
{{ toYaml .Values.common.phpConfCLI  | indent 12 }}
{{- end }}
          volumeMounts:
            - name: google-cloud-pim-storage-key
              mountPath: /var/secrets/google/srnt.json
              subPath: srnt.json
              readOnly: true
            - name: google-cloud-onboarder-key
              mountPath: /var/secrets/google/key.json
              subPath: key.json
              readOnly: true
        - name: update-channel-activated-locales
          image:  {{ template "pim.imageNameAndTag" . }}
          imagePullPolicy: {{ .Values.image.pim.pullPolicy | quote }}
          command: ['sh', '-c', 'su -m -l www-data -s /bin/bash -c "cd /srv/pim && bin/console akeneo:batch:job csv_channel_import -c ''{\"filePath\": \"/srv/pim/vendor/akeneo/pim-onboarder/src/Bundle/Resources/fixtures/setup/channels.csv\"}''"']
          envFrom: [ configMapRef: { name: {{ template "pim.fullName" . }}-env } ]
          env:
            - { name: MAILER_USER, valueFrom: { secretKeyRef: { name: pim-secrets, key: mailerLogin } } }
            - { name: MAILER_PASSWORD, valueFrom: { secretKeyRef: { name: pim-secrets, key: mailerPassword } } }
            - { name: APP_DATABASE_PASSWORD, valueFrom: { secretKeyRef: { name: pim-secrets, key: mysqlPimUserPassword } } }
            - { name: GOOGLE_NAMESPACE, valueFrom: { fieldRef: { fieldPath: metadata.namespace } } }
            - { name: GOOGLE_POD_NAME, valueFrom: { fieldRef: { fieldPath: metadata.name } } }
{{- if .Values.common.phpConfCLI }}
{{ toYaml .Values.common.phpConfCLI  | indent 12 }}
{{- end }}
          volumeMounts:
            - name: google-cloud-pim-storage-key
              mountPath: /var/secrets/google/srnt.json
              subPath: srnt.json
              readOnly: true
            - name: google-cloud-onboarder-key
              mountPath: /var/secrets/google/key.json
              subPath: key.json
              readOnly: true
      volumes:
        - name: google-cloud-pim-storage-key
          secret:
            secretName: pim-secrets
            items:
            - key: srntPimStorageKey
              path: srnt.json
        - name: google-cloud-onboarder-key
          secret:
            secretName: pim-secrets
            items:
            - key: akobOnboarderKey
              path: key.json
{{- end }}
