apiVersion: apps/v1
kind: Deployment
metadata:
  name: pim-web
  labels:
    app: {{ template "pim.fullName" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
    component: {{ template "pim.fullName" . }}
    {{ include "pim.extravarsPim" . | indent 4}}
    role: pim-web
spec:
  replicas: {{ .Values.pim.replicas }}
  minReadySeconds: 30
  selector:
    matchLabels:
      component: {{ template "pim.fullName" . }}
      role: pim-web
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      labels:
        component: {{ template "pim.fullName" . }}
        role: pim-web
        {{ include "pim.extravarsPim" . | indent 8}}
    spec:
      initContainers:
        - name: init-fpm
          image:  "{{ .Values.image.pim.repository }}:{{ .Values.image.pim.tag }}"
          imagePullPolicy: {{ .Values.image.pim.pullPolicy | quote }}
          command: ['sh', '-c', 'cp -p -r -f /var/www/html/web/*  /var/www/html/web/.htaccess /web-src/.; ']
          volumeMounts:
            - name: web-src
              mountPath: web-src
      containers:
        - name: fpm
          image: "{{ .Values.image.pim.repository }}:{{ .Values.image.pim.tag }}"
          imagePullPolicy: {{ .Values.image.pim.pullPolicy | quote }}
          resources:
{{ toYaml .Values.pim.resources | indent 12 }}
          ports:
            - name: fpm
              containerPort: 9000
          volumeMounts:
            - name: web-src
              mountPath: /var/www/html/web
            - name: fpm-data
              mountPath: /data
              readOnly: false
            - name: pim-parameter
              mountPath: /var/www/html/app/config/parameters.yml
              subPath: parameters.yml
              readOnly: true
          env:
            - { name: SYMFONY_ENV, value: prod }
            - { name: TRUSTED_PROXY_IPS, value: 10.0.0.0/8 }
            - { name: PIM_ELASTICSEARCH_HOST, value: elasticsearch }
            - { name: PIM_ELASTICSEARCH_PORT, value: "9200" }
            - { name: PIM_SHARED_STORAGE, value: /data }
            - { name: PIM_DATABASE_HOST, value: {{ .Values.mysql.mysql.serviceName | quote }} }
            - { name: PIM_DATABASE_NAME, value: {{ .Values.mysql.mysql.defaultDatabase | quote }} }
            - { name: PIM_DATABASE_USER, value: {{ .Values.mysql.mysql.defaultUser | quote }} }
            - { name: CONTAINER_NAME, value: pim }
            - { name: GOOGLE_LOCATION, value: {{ .Values.google.location | quote }} }
            - { name: GOOGLE_CLOUD_PROJECT, value: {{ .Values.google.project_id | quote }} }
            - { name: K8S_CLUSTER_NAME, value: {{ .Values.google.cluster_name | quote }} }
            - { name: MAILER_HOST, value: {{ .Value.mailer.host | quote }} }
            - { name: MAILER_PORT, value: {{ .Value.mailer.PORT | quote }} }
            - { name: MAILER_FROM_ADDRESS, value: {{ .Value.mailer.from_address | quote }} }
            - name: MAILER_USER
              valueFrom:
                secretKeyRef:
                  name: pim-secrets
                  key: mailerLogin
            - name: MAILER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: pim-secrets
                  key: mailerPassword
            - name: PIM_DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: pim-secrets
                  key: mysqlPIMuserpassword
            - name: GOOGLE_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: GOOGLE_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
{{- if .Values.common.phpConfFPM }}
{{ toYaml .Values.common.phpConfFPM  | indent 12 }}
{{- end }}
        - name: httpd
          image: "{{ .Values.image.httpd.repository }}:{{ .Values.image.httpd.tag }}"
          imagePullPolicy: {{ .Values.image.httpd.pullPolicy | quote }}
          ports:
            - containerPort: 80
              name: httpd
          volumeMounts:
            - name: web-src
              mountPath: /var/www/html/web
              readOnly: true
            - mountPath: /usr/local/apache2/conf/
              name: conf-httpd
              readOnly: true
      volumes:
        - name: web-src
          emptyDir: {}
        - name: pim-parameter
          configMap:
            name: pim-config
            items:
              - key: parameters.yml
                path: parameters.yml
        - name: fpm-data
          persistentVolumeClaim:
            claimName: pvc-data-pim-{{ .Values.global.extraLabels.pfid }}
        - name: conf-httpd
          configMap:
            name: pim-config
            items:
              - key: httpd.conf
                path: httpd.conf
              - key: mime.types
                path: mime.types
