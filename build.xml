<?xml version="1.0" encoding="UTF-8"?>
<project name="pim" default="build">

    <target name="build" depends="prepare,composer,vendors,setupdb,fixtures,lint,phploc,pdepend,phpmd-ci,phpcs-ci,phpcpd,phpdox,phpunit,phpcb"/>

    <target name="build-phpunit" depends="prepare,composer,vendors,setupdb,fixtures,phpunit-no-coverage"/>

    <target name="build-phpunit-coverage" depends="prepare,composer,vendors,setupdb,fixtures,phpunit"/>

    <target name="build-behat" depends="prepare,composer,vendors,setupdb,dumpassets,behat,behat-check"/>

    <target name="build-code-quality" depends="prepare,lint,phploc,pdepend,phpmd-ci,phpcs-ci,phpcpd"/>

    <target name="build-parallel" depends="prepare,lint,tools-parallel,phpunit,phpcb"/>

    <target name="tools-parallel" description="Run tools in parallel">
        <parallel threadCount="2">
            <sequential>
                <antcall target="pdepend"/>
                <antcall target="phpmd-ci"/>
            </sequential>
            <antcall target="phpcpd"/>
            <antcall target="phpcs-ci"/>
            <antcall target="phploc"/>
            <antcall target="phpdox"/>
        </parallel>
    </target>

    <target name="clean" description="Cleanup build artifacts">
        <delete dir="${basedir}/app/build/api"/>
        <delete dir="${basedir}/app/build/code-browser"/>
        <delete dir="${basedir}/app/build/coverage"/>
        <delete dir="${basedir}/app/build/logs"/>
        <delete dir="${basedir}/app/build/pdepend"/>

        <delete file="${basedir}/composer.phar" />
        <delete file="${basedir}/app/config/parameters.yml" />
        <delete file="${basedir}/app/config/parameters_test.yml" />
        <delete dir="${basedir}/app/cache" />
    </target>

    <target name="prepare" depends="clean" description="Prepare for build">
        <mkdir dir="${basedir}/app/build/api"/>
        <mkdir dir="${basedir}/app/build/code-browser"/>
        <mkdir dir="${basedir}/app/build/coverage"/>
        <mkdir dir="${basedir}/app/build/logs"/>
        <mkdir dir="${basedir}/app/build/logs/behat"/>
        <mkdir dir="${basedir}/app/build/pdepend"/>
        <mkdir dir="${basedir}/app/build/phpdox"/>

        <mkdir dir="${basedir}/app/cache" />
        <copy file="/var/lib/jenkins/conf-akeneo-pim-standard/parameters.yml" tofile="${basedir}/app/config/parameters.yml" />
        <copy file="/var/lib/jenkins/conf-akeneo-pim-standard/parameters.yml" tofile="${basedir}/app/config/parameters_test.yml" />
        <copy file="${basedir}/behat.yml.dist" tofile="${basedir}/behat.yml" />
    </target>

    <target name="lint" description="Perform syntax check of sourcecode files">
        <apply executable="php" failonerror="true">
            <arg value="-l" />

            <fileset dir="${basedir}/src/Pim">
                <include name="**/*.php" />
                <modified />
            </fileset>

            <fileset dir="${basedir}/src/Pim">
                <include name="**/*Test.php" />
                <modified />
            </fileset>
        </apply>
    </target>

    <target name="phploc" description="Measure project size using PHPLOC">
        <exec executable="phploc">
            <arg value="--log-csv" />
            <arg value="${basedir}/app/build/logs/phploc.csv" />
            <arg path="${basedir}/src/Pim" />
        </exec>
    </target>

    <target name="pdepend" description="Calculate software metrics using PHP_Depend">
        <exec executable="pdepend">
            <arg value="--jdepend-xml=${basedir}/app/build/logs/jdepend.xml" />
            <arg value="--jdepend-chart=${basedir}/app/build/pdepend/dependencies.svg" />
            <arg value="--overview-pyramid=${basedir}/app/build/pdepend/overview-pyramid.svg" />
            <arg path="${basedir}/src/Pim" />
        </exec>
    </target>

    <target name="phpmd" description="Perform project mess detection using PHPMD and print human readable output. Intended for usage on the command line before committing.">
        <exec executable="${basedir}/app/Resources/jenkins/phpmd_akeneo">
            <arg path="${basedir}/src/Pim" />
            <arg value="text" />
        </exec>
    </target>

    <target name="phpmd-ci" description="Perform project mess detection using PHPMD creating a log file for the continuous integration server">
        <exec executable="${basedir}/app/Resources/jenkins/phpmd_akeneo">
            <arg path="${basedir}/src/Pim" />
            <arg value="xml" />
            <arg value="--reportfile" />
            <arg value="${basedir}/app/build/logs/pmd.xml" />
        </exec>
    </target>

    <target name="phpcs" description="Find coding standard violations using PHP_CodeSniffer and print human readable output. Intended for usage on the command line before committing.">
        <exec executable="phpcs">
            <arg value="--standard=PSR2" />
            <arg value="--extensions=php" />
            <arg path="${basedir}/src/Pim" />
            <arg value="--ignore=${basedir}/src/*/Tests/*.php,${basedir}/src/*Tests/Files/*" />
        </exec>
    </target>

    <target name="phpcs-ci" description="Find coding standard violations using PHP_CodeSniffer creating a log file for the continuous integration server">
        <exec executable="phpcs" output="/dev/null">
            <arg value="--report=checkstyle" />
            <arg value="--report-file=${basedir}/app/build/logs/checkstyle.xml" />
            <arg value="--standard=PSR2" />
            <arg value="--extensions=php" />
            <arg path="${basedir}/src/Pim" />
            <arg value="--ignore=${basedir}/src/*/Tests/*.php,${basedir}/src/*Tests/Files/*" />
        </exec>
    </target>

    <target name="phpcpd" description="Find duplicate code using PHPCPD">
        <exec executable="phpcpd">
            <arg value="--log-pmd" />
            <arg value="${basedir}/app/build/logs/pmd-cpd.xml" />
            <arg path="${basedir}/src/Pim" />
        </exec>
    </target>

    <target name="phpdox" description="Generate API documentation using phpDox">
        <exec executable="phpdox">
            <arg value="-f" />
            <arg path="${basedir}/app/Resources/jenkins/phpdox.xml" />
        </exec>
    </target>

    <target name="phpunit" description="Run unit tests with PHPUnit">
        <exec executable="phpunit">
            <arg value="-c" />
            <arg path="${basedir}/app/phpunit.jenkins.xml" />
            <arg value="--testsuite=Jenkins_PIM_Test" />
        </exec>
    </target>

    <target name="phpunit-no-coverage" description="Run unit tests with PHPUnit without coverage">
        <exec executable="phpunit">
            <arg value="-c" />
            <arg path="${basedir}/app/phpunit.jenkins-no-coverage.xml" />
            <arg value="--testsuite=Jenkins_PIM_Test" />
        </exec>
    </target>

    <target name="behat" description="Run acceptance tests with Behat">
        <exec executable="bin/behat">
            <env key="DISPLAY" value=":0" />
            <arg value="--profile=jenkins" />
            <arg value="--ansi" />
            <arg value="--no-paths" />
        </exec>
    </target>

    <target name="behat-check" description="Check Behat output">
	<fail message="At least one scenario has failed">
	    <condition>
		<resourcecontains resource="./app/build/logs/behat/pretty.out" substring="failed"/>
	    </condition>
	</fail>
    </target>

    <target name="phpcb" description="Aggregate tool output with PHP_CodeBrowser">
        <exec executable="phpcb">
            <arg value="--log" />
            <arg path="${basedir}/app/build/logs" />
            <arg value="--source" />
            <arg path="${basedir}/src/Pim" />
            <arg value="--output" />
            <arg path="${basedir}/app/build/code-browser" />
        </exec>
    </target>

    <target name="composer" description="Install composer.phar">
        <exec executable="bash">
            <arg value="-c"/>
            <arg value="curl -s http://getcomposer.org/installer | php"/>
        </exec>
    </target>

    <target name="vendors" description="Install vendors">
        <exec executable="${basedir}/composer.phar" failonerror="true">
            <arg value="install" />
            <arg value="--no-progress" />
            <arg value="--prefer-dist" />
        </exec>
    </target>

    <target name="dumpassets" description="Dump the assets">
        <exec executable="app/console">
            <arg value="oro:navigation:init" />
        </exec>
        <exec executable="app/console">
            <arg value="assetic:dump" />
        </exec>
        <exec executable="app/console">
            <arg value="oro:assetic:dump" />
        </exec>
    </target>

    <target name="setupdb" description="Setup db">
        <exec executable="app/console">
          <arg value="doctrine:database:drop" />
          <arg value="-n" />
          <arg value="--force" />
        </exec>
        <exec executable="app/console">
          <arg value="doctrine:database:create" />
          <arg value="-n" />
        </exec>
        <exec executable="app/console">
          <arg value="doctrine:schema:update" />
          <arg value="-n" />
          <arg value="--complete" />
          <arg value="--force" />
        </exec>
    </target>

    <target name="fixtures" description="Load fixtures">
        <exec executable="app/console">
          <arg value="doctrine:fixtures:load" />
          <arg value="--no-interaction" />
        </exec>
        <exec executable="app/console">
          <arg value="oro:acl:load" />
        </exec>
        <exec executable="app/console">
          <arg value="oro:search:create-index" />
        </exec>
        <exec executable="app/console">
          <arg value="oro:search:index" />
        </exec>
        <exec executable="app/console">
          <arg value="oro:search:reindex" />
        </exec>
    </target>

</project>
