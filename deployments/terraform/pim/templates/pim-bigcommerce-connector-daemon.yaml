{{- if .Values.connectors.bigcommerce.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pim-bigcommerce-connector-daemon
  labels:
    component: "pim-bigcommerce-connector-daemon" # Deprecated. Cf https://www.notion.so/akeneo/Tagging-strategy-782b4ae037c44d4884b02c8c62e81117
    app.kubernetes.io/component: "pim-bigcommerce-connector-daemon"
    role: "pim-bigcommerce-connector-daemon" # Deprecated. Cf https://www.notion.so/akeneo/Tagging-strategy-782b4ae037c44d4884b02c8c62e81117
    {{- include "pim.standardLabels" . | indent 4 }}
    {{- include "pim.extraLabels" . | indent 4 }}
spec:
  replicas: 1
  minReadySeconds: 30
  selector:
    matchLabels:
      component: "pim-bigcommerce-connector-daemon"
      release: "{{ .Release.Name }}"
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 100%
      maxSurge: 100%
  template:
    metadata:
      labels:
        component: "pim-bigcommerce-connector-daemon" # Deprecated. Cf https://www.notion.so/akeneo/Tagging-strategy-782b4ae037c44d4884b02c8c62e81117
        app.kubernetes.io/component: "pim-bigcommerce-connector-daemon"
        role: "pim-bigcommerce-connector-daemon" # Deprecated. Cf https://www.notion.so/akeneo/Tagging-strategy-782b4ae037c44d4884b02c8c62e81117
        {{- include "pim.standardLabels" . | indent 8 }}
        {{- include "pim.extraLabels" . | indent 8 }}
      annotations:
        checksum/env-config: {{ include (print $.Template.BasePath "/env-configmap.yaml") . | replace  (printf "%s-%s" .Chart.Name .Chart.Version ) "" | sha256sum }} # force reload of pods upon change of the configmap
        checksum/secrets: {{ include (print $.Template.BasePath "/pim-secrets.yaml") . | replace  (printf "%s-%s" .Chart.Name .Chart.Version ) "" | sha256sum }} # force reload of pods upon change of the configmap
    spec:
      terminationGracePeriodSeconds: 86400
      containers:
        - name: php
          image: {{ template "pim.imageNameAndTag" . }}
          imagePullPolicy: {{ .Values.image.pim.pullPolicy | quote }}
          command: ['setpriv','--reuid=www-data','--regid=www-data','--init-groups','/srv/pim/bin/queue-daemon-wrapper.sh','messenger:consume async --quiet --time-limit=3600']
          resources:
            limits:
              memory: "512Mi"
            requests:
              memory: "128Mi"
              cpu: "10m"
          volumeMounts:
            - name: google-cloud-pim-storage-key
              mountPath: /var/secrets/google/srnt.json
              subPath: srnt.json
              readOnly: true
          workingDir: /srv/pim/connectors/bigcommerce/back
          envFrom: [ configMapRef: { name: {{ template "pim.fullName"  . }}-env } ]
          env:
            - { name: MAILER_USER, valueFrom: { secretKeyRef: { name: pim-secrets, key: mailerLogin } } }
            - { name: MAILER_PASSWORD, valueFrom: { secretKeyRef: { name: pim-secrets, key: mailerPassword } } }
            - { name: GOOGLE_NAMESPACE, valueFrom: { fieldRef: { fieldPath: metadata.namespace } } }
            - { name: GOOGLE_POD_NAME, valueFrom: { fieldRef: { fieldPath: metadata.name } } }
            - { name: CONTAINER_NAME, value: php }
            - { name: GOOGLE_APPLICATION_CREDENTIALS, value: "/var/secrets/google/srnt.json" }
{{- if .Values.common.phpConfCLI }}
{{ toYaml .Values.common.phpConfCLI | indent 12 }}
{{- end }}
      volumes:
        - name: google-cloud-pim-storage-key
          secret:
            secretName: pim-secrets
            items:
            - key: srntPimStorageKey
              path: srnt.json

---
{{- end }}
