envVarsDeployDev: &envVarsDeployDev
envVarsDeployPIMSaaSDev: &envVarsDeployPIMSaaSDev
dockerCloudDeployerCurrent: &dockerCloudDeployerCurrent
dockerCloudDeployerNext: &dockerCloudDeployerNext
dockerCloudDeployerUCS: &dockerCloudDeployerUCS
executor-machine: &executor-machine

jobs:
    delete_environment:
        parameters:
            INSTANCE_NAME:
                type: string
                default: ""
        environment:
            <<: *envVarsDeployDev
        <<: *dockerCloudDeployerCurrent
        resource_class: small
        steps:
            - attach_workspace:
                  at: ~/
            - add_ssh_keys:
                  fingerprints:
                      - "1f:25:f8:bb:59:52:95:f6:e2:f2:97:2f:30:d4:e9:66"
            - set_gcloud_config_dev
            - run:
                  name: Delete environments
                  no_output_timeout: 30m
                  command: |
                      ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts
                      export GIT_SSH_COMMAND='ssh -i ~/.ssh/id_rsa_1f25f8bb595295f6e2f2972f30d4e966 -o UserKnownHostsFile=~/.ssh/known_hosts -o IdentitiesOnly=Yes'
                      NS=<<parameters.INSTANCE_NAME>> make -C deployments/ delete_environment_manually

    delete_pr_environment:
        parameters:
            PRODUCT_TYPE:
                type: string
                default: ""
            INSTANCE_NAME:
                type: string
                default: ""
        environment:
            <<: *envVarsDeployDev
        <<: *dockerCloudDeployerCurrent
        resource_class: small
        steps:
            - attach_workspace:
                  at: ~/
            - add_ssh_keys:
                  fingerprints:
                      - "1f:25:f8:bb:59:52:95:f6:e2:f2:97:2f:30:d4:e9:66"
            - set_gcloud_config_dev
            - restore_persisted_env_vars
            - run:
                  name: Delete environments
                  no_output_timeout: 30m
                  command: |
                      ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts
                      export GIT_SSH_COMMAND='ssh -i ~/.ssh/id_rsa_1f25f8bb595295f6e2f2972f30d4e966 -o UserKnownHostsFile=~/.ssh/known_hosts -o IdentitiesOnly=Yes'
                      UNCOMMIT_INSTANCE_STATUS_CODE=0
                      for i in 1 2 3; do make -C deployments/ uncommit-instance && UNCOMMIT_INSTANCE_STATUS_CODE=0 && break || UNCOMMIT_INSTANCE_STATUS_CODE=1; done
                      exit ${UNCOMMIT_INSTANCE_STATUS_CODE}

    delete_ucs_pim:
        parameters:
            PIM_NAMESPACE_PREFIX:
              type: string
              default: "pim"
            PRODUCT_TYPE:
                type: string
                default: ""
            TENANT_NAME:
                type: string
                default: ""
        environment:
            <<: *envVarsDeployPIMSaaSDev
        <<: *dockerCloudDeployerUCS
        resource_class: small
        steps:
            - attach_workspace:
                  at: ~/
            - set_gcloud_config_pim_saas_dev
            - restore_persisted_env_vars
            - run:
                  name: Delete environments
                  command: |
                      CIRCLE_BRANCH_LOWER=$(echo "${CIRCLE_BRANCH}" | awk '{print tolower($0)}')
                      PIM_NAMESPACE=$(echo << parameters.PIM_NAMESPACE_PREFIX >>-${CIRCLE_BRANCH_LOWER} | cut -c -63)
                      ARGOCD_PASSWORD=$(kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d)

                      # Login to argocd call k8s
                      kubectl config set-context --current --namespace=argocd
                      argocd login --core argocd-${GOOGLE_CLUSTER_REGION}.${GOOGLE_DOMAIN} --username admin --password ${ARGOCD_PASSWORD}

                      echo "      argocd app terminate-op ${PIM_NAMESPACE} --core || true"
                      echo "      kubectl delete app ${PIM_NAMESPACE} -n argocd"
                      echo "      kubectl delete ${PIM_NAMESPACE}"
                      argocd app terminate-op ${PIM_NAMESPACE} --core || true
                      kubectl delete app ${PIM_NAMESPACE} -n argocd
                      kubectl delete ns ${PIM_NAMESPACE}

    delete_ucs_tenant:
        parameters:
            PRODUCT_TYPE:
                type: string
                default: "srnt"
            CLUSTER_NEXT:
                type: boolean
                default: false
            tenant_name:
                type: string
                default: ''
        environment:
            <<: *envVarsDeployPIMSaaSDev
        <<: *dockerCloudDeployerUCS
        resource_class: small
        steps:
            - attach_workspace:
                  at: ~/
            - when:
                  condition:
                      equal: [true, << parameters.CLUSTER_NEXT >> ]
                  steps:
                      - modify_cluster
            - set_gcloud_config_pim_saas_dev
            - restore_persisted_env_vars
            - restore_persisted_timmy_env_vars
            - run:
                  name: Delete Tenant
                  no_output_timeout: 30m
                  command: |
                      if [ ! << parameters.tenant_name >> = "" ]; then
                        TENANT_NAME=<< parameters.tenant_name >>
                      fi
                      FUNCTION_NAME=${GOOGLE_REGION_PREFIX}-timmy-delete-tenant
                      if [ ! -z "${SKIP_DEPLOY_TIMMY}" -a "${SKIP_DEPLOY_TIMMY}" = "false" ]; then
                        FUNCTION_NAME=${GOOGLE_REGION_PREFIX}-${CIRCLE_BRANCH_LOWER}-timmy-delete-tenant
                      fi
                      JSON_BODY_STRING=$(printf "{\"branchName\":\"%s\",\"tenant_name\":\"%s\"}\n" ${CIRCLE_BRANCH} ${TENANT_NAME} )
                      gcloud config unset auth/impersonate_service_account
                      DELETE_TENANT_STATUS_CODE=0
                      gcloud beta functions call ${FUNCTION_NAME} --region=${GOOGLE_CLUSTER_REGION} --data  ${JSON_BODY_STRING} --gen2 || DELETE_TENANT_STATUS_CODE=1
                      echo ${FUNCTION_NAME}
                      echo ${JSON_BODY_STRING}
                      exit ${DELETE_TENANT_STATUS_CODE}

    delete_timmy:
        parameters:
            PRODUCT_TYPE:
                type: string
                default: ""
            TENANT_NAME:
                type: string
                default: ""
        environment:
            <<: *envVarsDeployPIMSaaSDev
        <<: *dockerCloudDeployerUCS
        resource_class: small
        steps:
            - attach_workspace:
                  at: ~/
            - set_gcloud_config_pim_saas_dev
            - restore_persisted_env_vars
            - restore_persisted_timmy_env_vars
            - install_terrafrom
            - run:
                  name: Delete environments
                  command: |
                      if [ "${SKIP_DEPLOY_TIMMY}" = "false" ]; then
                       TERRAFORM_PATH="deployments-ucs/timmy/terraform/${ENV_NAME}"
                       cd ${TERRAFORM_PATH}
                       terraform init -backend-config=./backends/${GOOGLE_CLUSTER_REGION}.hcl -reconfigure
                       terraform workspace select ${CIRCLE_BRANCH_LOWER} || terraform workspace new ${CIRCLE_BRANCH_LOWER}
                       terraform  destroy -auto-approve -input=false -var-file=./vars/${GOOGLE_CLUSTER_REGION}.tfvars -var branch_name=${CIRCLE_BRANCH_LOWER}
                      fi

    delete_environments_hourly:
        parameters:
            PRODUCT_TYPE:
                type: string
                default: ""
        environment:
            <<: *envVarsDeployDev
        <<: *dockerCloudDeployerCurrent
        resource_class: small
        steps:
            - attach_workspace:
                  at: ~/
            - add_ssh_keys:
                  fingerprints:
                      - "1f:25:f8:bb:59:52:95:f6:e2:f2:97:2f:30:d4:e9:66"
            - set_gcloud_config_dev
            - run:
                  name: Delete environments
                  no_output_timeout: 30m
                  command: |
                      TYPE="<<parameters.PRODUCT_TYPE>>"
                      ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts

                      export GIT_SSH_COMMAND='ssh -i ~/.ssh/id_rsa_1f25f8bb595295f6e2f2972f30d4e966 -o UserKnownHostsFile=~/.ssh/known_hosts -o IdentitiesOnly=Yes'

                      TYPE=${TYPE} make -C deployments/ delete_environments_hourly

    remove_unused_resources:
        environment:
            <<: *envVarsDeployDev
        <<: *dockerCloudDeployerCurrent
        resource_class: small
        steps:
            - attach_workspace:
                  at: ~/
            - set_gcloud_config_dev
            - run:
                  name: Remove unused resources
                  command:
                      make -C deployments/ remove_unused_resources

    delete_ucs_environments_hourly:
        environment:
            <<: *envVarsDeployPIMSaaSDev
        <<: *dockerCloudDeployerUCS
        resource_class: small
        steps:
            - attach_workspace:
                  at: ~/
            - set_gcloud_config_pim_saas_dev
            - run:
                  name: Delete tenant environments
                  no_output_timeout: 15m
                  command: |
                      sh deployments-ucs/bin/remove_tenants.sh
            - run:
                  name: Delete PIM environments
                  no_output_timeout: 15m
                  command: |
                      sh deployments-ucs/bin/remove_pim.sh
