parameters:
  akeneo.tailored_import.validation.attribute_target_constraints:
    pim_catalog_identifier: 'Akeneo\Platform\TailoredImport\Infrastructure\Validation\DataMapping\Target\Attribute\Identifier\Identifier'
    pim_catalog_metric: 'Akeneo\Platform\TailoredImport\Infrastructure\Validation\DataMapping\Target\Attribute\Measurement\Measurement'
    pim_catalog_number: 'Akeneo\Platform\TailoredImport\Infrastructure\Validation\DataMapping\Target\Attribute\Number\Number'
    pim_catalog_simpleselect: 'Akeneo\Platform\TailoredImport\Infrastructure\Validation\DataMapping\Target\Attribute\SimpleSelect\SimpleSelect'
    pim_catalog_multiselect: 'Akeneo\Platform\TailoredImport\Infrastructure\Validation\DataMapping\Target\Attribute\MultiSelect\MultiSelect'
    pim_catalog_text: 'Akeneo\Platform\TailoredImport\Infrastructure\Validation\DataMapping\Target\Attribute\Text\Text'
    pim_catalog_textarea: 'Akeneo\Platform\TailoredImport\Infrastructure\Validation\DataMapping\Target\Attribute\Text\Text'
    pim_catalog_date: 'Akeneo\Platform\TailoredImport\Infrastructure\Validation\DataMapping\Target\Attribute\Date\Date'

  akeneo.tailored_import.validation.property_target_constraints:
    categories: 'Akeneo\Platform\TailoredImport\Infrastructure\Validation\DataMapping\Target\Property\Categories\Categories'
    family: 'Akeneo\Platform\TailoredImport\Infrastructure\Validation\DataMapping\Target\Property\Family\Family'

  akeneo.tailored_import.validation.operation_constraints:
    clean_html_tags: 'Akeneo\Platform\TailoredImport\Infrastructure\Validation\DataMapping\Operation\CleanHTMLTagsOperation'
    split: 'Akeneo\Platform\TailoredImport\Infrastructure\Validation\DataMapping\Operation\SplitOperation'
    simple_select_replacement: 'Akeneo\Platform\TailoredImport\Infrastructure\Validation\DataMapping\Operation\ReplacementOperation'
    multi_select_replacement: 'Akeneo\Platform\TailoredImport\Infrastructure\Validation\DataMapping\Operation\ReplacementOperation'
    categories_replacement: 'Akeneo\Platform\TailoredImport\Infrastructure\Validation\DataMapping\Operation\ReplacementOperation'

services:
  Akeneo\Platform\TailoredImport\Infrastructure\Validation\IsValidAttributeValidator:
    arguments:
      - '@akeneo.pim.structure.query.get_attributes'
      - '@pim_channel.query.cache.channel_exists_with_locale'
    tags:
      - { name: validator.constraint_validator }

  Akeneo\Platform\TailoredImport\Infrastructure\Validation\DataMappingsValidator:
    arguments:
      - '@akeneo.pim.structure.query.get_attributes'
      - '%akeneo.tailored_import.validation.attribute_target_constraints%'
      - '%akeneo.tailored_import.validation.property_target_constraints%'
    tags:
      - { name: validator.constraint_validator }

  Akeneo\Platform\TailoredImport\Infrastructure\Validation\FileKeyValidator:
    arguments:
      - '@akeneo_file_storage.file_storage.filesystem_provider'
    tags:
      - { name: validator.constraint_validator }

  Akeneo\Platform\TailoredImport\Infrastructure\Validation\IsValidFileTemplateInformationQueryValidator:
    arguments:
      - '@akeneo_file_storage.file_storage.filesystem_provider'
      - '@akeneo.tailored_import.spout.remote_file_reader.factory'
    tags:
      - { name: validator.constraint_validator }

  Akeneo\Platform\TailoredImport\Infrastructure\Validation\SearchAttributesQueryValidator:
    tags:
      - { name: validator.constraint_validator }

  Akeneo\Platform\TailoredImport\Infrastructure\Validation\SearchAttributeOptionsQueryValidator:
    tags:
      - { name: validator.constraint_validator }

  Akeneo\Platform\TailoredImport\Infrastructure\Validation\SampleData\SampleDataQueryValidator:
    tags:
      - { name: validator.constraint_validator }

  Akeneo\Platform\TailoredImport\Infrastructure\Validation\SampleData\RefreshSampleDataQueryValidator:
    tags:
      - { name: validator.constraint_validator }

  Akeneo\Platform\TailoredImport\Infrastructure\Validation\DataMapping\OperationsValidator:
    arguments:
      - '%akeneo.tailored_import.validation.operation_constraints%'
    tags:
      - { name: validator.constraint_validator }

  Akeneo\Platform\TailoredImport\Infrastructure\Validation\DataMapping\Operation\SplitOperationValidator:
    arguments:
      - [ ',', ';', '|' ]
    tags:
      - { name: validator.constraint_validator }

  Akeneo\Platform\TailoredImport\Infrastructure\Validation\DataMapping\Target\Attribute\SourceConfiguration\DecimalSeparatorValidator:
    arguments:
      - [',', '.', '٫‎']
    tags:
      - { name: validator.constraint_validator }

  Akeneo\Platform\TailoredImport\Infrastructure\Validation\SampleData\GeneratePreviewDataValidator:
    arguments:
      - '%akeneo.tailored_import.validation.operation_constraints%'
    tags:
      - { name: validator.constraint_validator }

  Akeneo\Platform\TailoredImport\Infrastructure\Validation\DataMapping\Target\Attribute\Measurement\UnitValidator:
    arguments:
      - '@akeneo_measurement.public_api.find_unit'
    tags:
      - { name: validator.constraint_validator }

  Akeneo\Platform\TailoredImport\Infrastructure\Validation\ReadColumnsValidator:
    arguments:
      - '@akeneo.tailored_import.spout.remote_file_reader.factory'
    tags:
      - { name: validator.constraint_validator }
