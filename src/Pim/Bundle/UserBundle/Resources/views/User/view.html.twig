{% extends 'PimUIBundle:actions:view.html.twig' %}
{% import 'PimUIBundle::macros.html.twig' as UI %}

{% set fullname = entity.fullName|default('N/A') %}
{% oro_title_set({params : {"%username%": fullname }}) %}

{% block navButtons %}
    {% if editRoute is defined %}
        {{ UI.button({
            'path' : path(editRoute),
            'iClass' : 'icon-pencil ',
            'title' : 'Edit profile',
            'label' : 'Edit',
            'aClass' : 'AknButtonList-item AknButton--action edit-user'
        }) }}
    {% else %}
        {% if resource_granted('pim_user_user_edit') %}
            {{ UI.button({
                'path' : path('oro_user_update', { id: entity.id }),
                'iClass' : 'icon-pencil ',
                'title' : 'Edit user',
                'label' : 'Edit',
                'aClass' : 'AknButtonList-item AknButton--action edit-user'
            }) }}
        {% endif %}
    {% endif %}
    {% if resource_granted('pim_user_user_remove') and entity.id!=app.user.id %}
        {{ UI.deleteButton({
            'dataUrl': path('oro_user_user_delete', {'id': entity.id}),
            'dataRedirect': path('oro_user_index'),
            'aCss': 'AknButtonList-item remove-button',
            'dataId': entity.id,
            'dataMessage': 'Are you sure you want to delete this user?'|trans,
            'successMessage': 'User deleted'|trans,
            'title': 'Delete user',
            'label': 'Delete'
        }) }}
    {% endif %}
{% endblock navButtons %}

{% block pageHeader %}
    {% set breadcrumbs = {
        'entity':      entity,
        'indexPath':   path('oro_user_index'),
        'indexLabel': 'Users'|trans,
        'entityTitle': fullname,
        'hasAvatar':   true,
        'imagePath':   entity.imagePath,
    }
    %}
    {{ parent() }}
{% endblock pageHeader %}

{% block titleButtons %}
    {{ parent() }}
    {% if entity.enabled %}
        <div class="AknBadge AknBadge AknBadge--enabled status-enabled"><i class="AknBadge-icon icon-status-enabled icon-circle"></i>{{ 'Active'|trans }}</div>
    {% else %}
        <div class="AknBadge AknBadge AknBadge--disabled status-disabled"><i class="AknBadge-icon icon-status-disabled icon-circle"></i>{{ 'Inactive'|trans }}</div>
    {% endif %}
{% endblock titleButtons %}

{% block stats %}
    {{ parent() }}
    <span class="AknTitleContainer-metaItem">{{ 'Last logged in'|trans }}: {{ entity.lastLogin ? entity.lastLogin|datetime_presenter : 'N/A' }}</span>
    <span class="AknTitleContainer-metaItem">{{ 'Login count'|trans }}: {{ entity.loginCount|default(0) }}</span>
{% endblock stats %}

{% block backButton %}
    {{ elements.backLink(path('oro_user_index')) }}
{% endblock %}

{% block content_data %}
  <div>
    {% set id = 'user-profile' %}

    {% set dataSubBlocks = [UI.attibuteRow('Email', {value: entity.email, hint: ''|trans})] %}

    {% set dataBlocks = [
        {
            'title': 'General'|trans,
            'class': 'active',
            'subblocks': [
                {
                    'title': 'Basic Information'|trans,
                    'class': 'AknFormContainer AknFormContainer--withPadding',
                    'data': [
                        UI.attibuteRow('User name'|trans, entity.username),
                        entity.namePrefix ? UI.attibuteRow('Name prefix'|trans, entity.namePrefix),
                        UI.attibuteRow('First name'|trans, entity.firstName|default('N/A')),
                        entity.middleName ? UI.attibuteRow('Middle name'|trans, entity.middleName),
                        UI.attibuteRow('Last name'|trans, entity.lastName|default('N/A')),
                        entity.nameSuffix ? UI.attibuteRow('Name suffix'|trans, entity.nameSuffix),
                        UI.attibuteRow('Birthday'|trans, entity.birthday ? entity.birthday|date_presenter : 'N/A')
                    ]
                },
                {
                    'title': 'Contact Information'|trans,
                    'class': 'AknFormContainer AknFormContainer--withPadding',
                    'data': dataSubBlocks
                }
            ]
        }
    ]
    %}

    {#
      EntityExtend fields START
    #}

    {% set filters = [] %}
    {% for filter in entity.productGridFilters %}
      {% set filters = filters|merge([filter_label(filter)]) %}
    {% endfor %}

    {% set additionalData = [
        UI.attibuteRow('Catalog locale'|trans, entity.catalogLocale),
        UI.attibuteRow('Catalog scope'|trans, entity.catalogScope),
        UI.attibuteRow('Default tree'|trans, entity.defaultTree),
        UI.attibuteRow('user.product_grid_filters'|trans, filters|join(', '))
    ] %}

    {% for view in entity.getDefaultGridViews() %}
        {% set additionalData = additionalData|merge([
            UI.attibuteRow(
                'user.default_' ~ view.datagridAlias|replace('-', '_') ~ '_view.label'|trans,
                view.label|default('user.default_grid_view.none'|trans)
            )
        ]) %}
    {% endfor %}

    {% set additionalData = additionalData|merge([
        UI.attibuteRow('User salt'|trans, entity.salt)
    ]) %}

    {% set additional = [
        {
            'title': 'Additional Information'|trans,
            'class': 'active',
            'subblocks': [
                {
                    'title': '',
                    'class': 'AknFormContainer AknFormContainer--withPadding',
                    'data': additionalData
                }
            ]
        }
    ]
    %}

    {% set interfaces = [
        {
            'title': 'Interfaces'|trans,
            'subblocks': [
                {
                    'title': '',
                    'class': 'AknFormContainer AknFormContainer--withPadding',
                    'data': [
                        UI.attibuteRow('UI locale'|trans, entity.uiLocale.getName),
                    ]
                }
            ]
        }
    ]
    %}

    {% set dataBlocks = dataBlocks|merge(additional)|merge(interfaces) %}

    {#
      EntityExtend fields END
    #}

    {%- set additional_data -%}
        {% placeholder oro_user_view_additional_data %}
    {%- endset -%}

    {% if additional_data is not empty %}
        {% set dataBlocks = dataBlocks|merge(
            [{
                'title': 'Additional data'|trans,
                'subblocks': [
                    {
                        'title': '',
                        'data': [additional_data]
                    }
                ]
            }]
        ) %}
    {% endif %}

    {% set data = { 'dataBlocks': dataBlocks } %}
    {{ parent() }}
  </div>
{% endblock content_data %}
