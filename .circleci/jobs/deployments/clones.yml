envVarsDeployDev: &envVarsDeployDev
dockerCloudDeployerNext: &dockerCloudDeployerNext

jobs:
    # Description :
    #    Use disk snapshot (MySQL and ES) for prod customer to clone their instances
    #    Cloned instances are accessibles from web with url : https://<namespace>.dev.cloud.akeneo.com with login "adminakeneo"
    #    and password can be found in the "Persist env vars for next jobs" step for the variable PIM_ADMIN_PASSWORD
    test_clone_from_customer_db:
        parameters:
            PRODUCT_TYPE:
                type: string
                default: "srnt"
            SOURCE_PFID:
                type: string
                default: ""
            LONG_TTL_INSTANCE:
                type: boolean
                default: false
        environment:
            <<: *envVarsDeployDev
        <<: *dockerCloudDeployerNext
        resource_class: small
        steps:
            - attach_workspace:
                  at: ~/
            - add_ssh_keys:
                  fingerprints:
                      - "1f:25:f8:bb:59:52:95:f6:e2:f2:97:2f:30:d4:e9:66"
            - set_gcloud_config_dev
            - restore_persisted_env_vars
            - run:
                  name: Define value for next steps
                  command: |
                      SOURCE_PFID=<< parameters.SOURCE_PFID >>
                      INSTANCE_NAME_PREFIX=pimci<<# parameters.LONG_TTL_INSTANCE >>-long<</ parameters.LONG_TTL_INSTANCE >>-duplic
                      INSTANCE_NAME=${INSTANCE_NAME_PREFIX}-$(echo "${SOURCE_PFID}" | cut -c1-15)-${CIRCLE_BUILD_NUM}

                      echo export SOURCE_PFID=${SOURCE_PFID} >> $BASH_ENV
                      echo export INSTANCE_NAME_PREFIX=${INSTANCE_NAME_PREFIX} >> $BASH_ENV
                      echo export INSTANCE_NAME=${INSTANCE_NAME} >> $BASH_ENV

                      echo "Source PFID: ${SOURCE_PFID}"
                      echo "Instance name prefix: ${INSTANCE_NAME_PREFIX}"
                      echo "Instance name: ${INSTANCE_NAME}"
                      echo "Image tag: ${IMAGE_TAG}"
                      echo "Long ttl tag: << parameters.LONG_TTL_INSTANCE >>"
            - run:
                  name: DATADOG deployment Livetail logs page
                  command: echo "https://app.datadoghq.eu/logs/livetail?query=kube_namespace%3A${TYPE}-${INSTANCE_NAME}"
            - run:
                  name: Duplicate PROD environment
                  command: |
                      ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts
                      export GIT_SSH_COMMAND='ssh -i ~/.ssh/id_rsa_1f25f8bb595295f6e2f2972f30d4e966 -o UserKnownHostsFile=~/.ssh/known_hosts -o IdentitiesOnly=Yes'
                      make -C deployments/ clone_saas_instance
                      make -C deployments/ commit-instance
            - run:
                  name: Persist env vars for next jobs
                  command: |
                      PIM_ADMIN_PASSWORD=$(yq r /root/project/deployments/instances/${TYPE}-${INSTANCE_NAME}/values.yaml pim.defaultAdminUser.password)
                      echo export PIM_ADMIN_PASSWORD=${PIM_ADMIN_PASSWORD} >> persisted_env_vars
                      echo export SOURCE_PFID=${SOURCE_PFID} >> persisted_env_vars
                      echo export INSTANCE_NAME_PREFIX=${INSTANCE_NAME_PREFIX} >> persisted_env_vars
                      echo export INSTANCE_NAME=${INSTANCE_NAME} >> persisted_env_vars
            - run:
                  name: Display login information
                  command: |
                      PIM_USER=$(yq r /root/project/deployments/instances/${TYPE}-${INSTANCE_NAME}/values.yaml pim.defaultAdminUser.email)
                      PIM_PASSWORD=$(yq r /root/project/deployments/instances/${TYPE}-${INSTANCE_NAME}/values.yaml pim.defaultAdminUser.password)
                      PIM_URL="https://${INSTANCE_NAME}.dev.cloud.akeneo.com"
                      PIM_NAMESPACE=${TYPE}-${INSTANCE_NAME}

                      echo ###########################################
                      echo #      Akeneo pim release deployed        #
                      echo ###########################################
                      echo "Username: ${PIM_USER}"
                      echo "Password: ${PIM_PASSWORD}"
                      echo "Url: ${PIM_URL}"
                      echo "K9S access: k9s -n ${PIM_NAMESPACE} -c pods"

                      ###########################################
            - run:
                  name: Prepare infrastructure artifacts
                  command: make -C deployments/ prepare-infrastructure-artifacts
                  when: on_fail
            - store_artifacts:
                  path: ~/artifacts/infra
            - run:
                  name: Remove env on kubernetes
                  command: |
                      ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts
                      export GIT_SSH_COMMAND='ssh -i ~/.ssh/id_rsa_1f25f8bb595295f6e2f2972f30d4e966 -o UserKnownHostsFile=~/.ssh/known_hosts -o IdentitiesOnly=Yes'
                      UNCOMMIT_INSTANCE_STATUS_CODE=0
                      for i in 1 2 3; do make -C deployments/ uncommit-instance && UNCOMMIT_INSTANCE_STATUS_CODE=0 && break || UNCOMMIT_INSTANCE_STATUS_CODE=1; done
                      exit ${UNCOMMIT_INSTANCE_STATUS_CODE}
                  when: on_fail
            - persist_to_workspace:
                  root: ~/
                  paths:
                      - project/persisted_env_vars
