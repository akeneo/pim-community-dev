{% extends bap.layout %}
{% import 'PimUIBundle::macros.html.twig' as UI %}
{% import 'PimUIBundle:Default:page_elements.html.twig' as elements %}

{% set fullname = form.vars.value.fullName|default('N/A') %}
{% oro_title_set({params : {"%username%": fullname }}) %}
{% set title = form.vars.value.id ? 'Edit user'|trans ~ ' - ' ~ fullname : 'New user'|trans %}
{% if editRoute %}
    {% set formAction = path(editRoute) %}
{% else %}
    {% set formAction = form.vars.value.id ? path('oro_user_update', { id: form.vars.value.id}) : path('oro_user_create') %}
{% endif %}

{% block head_script %}
    <script type="text/javascript">
        require(['jquery', 'pim/initselect2', 'datepicker', 'pim/date-context', 'jquery.jstree', 'jstree/jquery.hotkeys'],
        function ($, initSelect2, datepicker, dateContext) {
            $(function() {
                $('#{{ form.vars.id }}').find('select').addClass('select2');
                initSelect2.init($('#{{ form.vars.id }}'));

                _.each($('#{{ form.vars.id }} input.datepicker:not(.hasPicker)'), function (field) {
                    datepicker.init($(field).closest('div'), {
                        format: dateContext.get('date').format,
                        defaultFormat: dateContext.get('date').defaultFormat,
                        language: dateContext.get('language'),
                    });
                });

                {% if form.rolesCollection is defined %}
                    var $roles = $('#{{ form.rolesCollection.vars.id }}');

                    var checkRoles = function() {
                        if ($roles.find('input:checked').length) {
                            $('a[href="#pim_user-user-tab-group_and_role"]').removeClass('AknHorizontalNavtab-link--errored error');
                            $roles.parent().removeClass('validation-error');
                        } else {
                            $('a[href="#pim_user-user-tab-group_and_role"]').addClass('AknHorizontalNavtab-link--errored error');
                            $roles.addClass('error').parent().addClass('validation-error');
                        }
                    };

                    $roles.on('change', 'input', checkRoles);

                    checkRoles();
                {% endif %}
            });
        });
    </script>
{% endblock %}

{% block page_container %}
{% block content %}
    {{ JSFV(form) }}
    {{ form_start(form, {
        'action': formAction,
        'attr': {
            'data-updated-title': 'confirmation.leave'|trans,
            'data-updated-message': 'confirmation.discard changes'|trans({ '%entity%': 'user.title'|trans })
        }
    }) }}

        {% set meta %}
            {% if form.vars.value.id %}
                <span class="AknTitleContainer-metaItem">{{ 'Created'|trans }}: {{ form.vars.value.createdAt ? form.vars.value.createdAt|datetime_presenter : 'N/A' }}</span>
                <span class="AknTitleContainer-metaItem">{{ 'Updated'|trans }}: {{ form.vars.value.updatedAt ? form.vars.value.updatedAt|datetime_presenter : 'N/A' }}</span>
                <span class="AknTitleContainer-metaItem">{{ 'Last logged in'|trans }}: {{ form.vars.value.lastLogin ? form.vars.value.lastLogin|datetime_presenter : 'N/A' }}</span>
                <span class="AknTitleContainer-metaItem">{{ 'Login count'|trans }}: {{ form.vars.value.loginCount|default(0) }}</span>
            {% endif %}
        {% endset %}

        {% set back %}
            {{ elements.backLink(path('oro_user_index')) }}
            <img class="AknTitleContainer-avatar" src="{{ form.vars.value.imagePath ? form.vars.value.imagePath | imagine_filter('avatar_med') : asset('bundles/pimui/images/info-user.png') }}" alt="{{ fullname }}"/>
        {% endset %}

        {% set buttons %}
            {% if form.vars.value.id and form.vars.value.id != app.user.id %}
                {{ elements.deleteLink(
                    path('oro_user_user_delete', {'id': form.vars.value.id}),
                    'pim_user_user_remove',
                    path('oro_user_index'),
                    'confirmation.remove.user'|trans({ '%name%': fullname }),
                    'flash.user.removed'|trans,
                    '',
                    'AknButtonList-item'
                ) }}
            {% endif %}
            {% if form.vars.value.id %}
                {{ elements.link(
                    'Cancel'|trans,
                    path('oro_user_profile_view', {'id': form.vars.value.id}),
                    { icon: 'chevron-left', class:'AknButtonList-item AknButton--grey' }
                ) }}
            {% endif %}
            {{ elements.submitBtn('', 'ok', 'AknButtonList-item') }}
        {% endset %}

        {{ elements.page_header(title, buttons, null, meta, null, back, elements.updated(form.vars.id)) }}

        <div class="AknTabContainer">
            {{ elements.form_navbar(view_element_aliases(form.vars.id ~ '.form_tab')) }}
            <div class="AknTabContainer-content tab-content oro-tab-form">
                {{ elements.form_errors(form) }}

                {{ view_elements(form.vars.id ~ '.form_tab') }}
            </div>
        </div>

    {{ form_end(form) }}

{% endblock %}
{% endblock %}
