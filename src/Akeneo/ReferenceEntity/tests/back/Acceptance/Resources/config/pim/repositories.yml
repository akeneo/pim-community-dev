services:
    # Repositories
    akeneo_referenceentity.infrastructure.persistence.repository.reference_entity:
        class: Akeneo\ReferenceEntity\Common\Fake\InMemoryReferenceEntityRepository

    akeneo_referenceentity.infrastructure.persistence.repository.record:
        class: Akeneo\ReferenceEntity\Common\Fake\InMemoryRecordRepository

    akeneo_referenceentity.infrastructure.persistence.repository.attribute:
        class: Akeneo\ReferenceEntity\Common\Fake\InMemoryAttributeRepository

    # Query functions
    akeneo_referenceentity.infrastructure.persistence.query.find_reference_entity_items:
        class: Akeneo\ReferenceEntity\Common\Fake\InMemoryFindReferenceEntityItems

    akeneo_referenceentity.infrastructure.persistence.query.find_reference_entity_details:
        class: Akeneo\ReferenceEntity\Common\Fake\InMemoryFindReferenceEntityDetails

    akeneo_referenceentity.infrastructure.persistence.query.find_record_details:
        class: Akeneo\ReferenceEntity\Common\Fake\InMemoryFindRecordDetails

    akeneo_referenceentity.infrastructure.persistence.query.find_existing_record_codes:
        class: Akeneo\ReferenceEntity\Common\Fake\InMemoryFindExistingRecordCodes
        arguments:
            - '@akeneo_referenceentity.infrastructure.persistence.repository.record'

    akeneo_referenceentity.infrastructure.persistence.query.record_exists:
        class: Akeneo\ReferenceEntity\Common\Fake\InMemoryRecordExists
        arguments:
            - '@akeneo_referenceentity.infrastructure.persistence.repository.record'

    akeneo_referenceentity.infrastructure.persistence.query.reference_entity_exists:
        class: Akeneo\ReferenceEntity\Common\Fake\InMemoryReferenceEntityExists
        arguments:
            - '@akeneo_referenceentity.infrastructure.persistence.repository.reference_entity'

    akeneo_referenceentity.infrastructure.persistence.query.attribute_exists:
        class: Akeneo\ReferenceEntity\Common\Fake\InMemoryAttributeExists
        arguments:
            - '@akeneo_referenceentity.infrastructure.persistence.repository.attribute'

    akeneo_referenceentity.infrastructure.persistence.query.find_attribute_next_order:
        class: Akeneo\ReferenceEntity\Common\Fake\InMemoryFindAttributeNextOrder
        arguments:
            - '@akeneo_referenceentity.infrastructure.persistence.repository.attribute'

    akeneo_referenceentity.infrastructure.persistence.query.find_attributes_details:
        class: Akeneo\ReferenceEntity\Common\Fake\InMemoryFindAttributesDetails

    akeneo_referenceentity.infrastructure.persistence.query.reference_entity_has_records:
        class: Akeneo\ReferenceEntity\Common\Fake\InMemoryReferenceEntityHasRecords
        arguments:
            - '@akeneo_referenceentity.infrastructure.persistence.repository.record'

    akeneo_referenceentity.infrastructure.persistence.query.reference_entity_is_linked_to_at_least_one_product_attribute:
        class: Akeneo\ReferenceEntity\Common\Fake\InMemoryReferenceEntityIsLinkedToAtLeastOneProductAttribute
        arguments:
            - '@pim_catalog.repository.attribute'

    akeneo_referenceentity.infrastructure.persistence.query.find_value_key_collection:
        class: Akeneo\ReferenceEntity\Common\Fake\InMemoryFindValueKeyCollection

    akeneo_referenceentity.infrastructure.persistence.query.generate_empty_values:
        class: Akeneo\ReferenceEntity\Common\Fake\InMemoryGenerateEmptyValues

    akeneo_referenceentity.infrastructure.persistence.query.find_attributes_indexed_by_identifier:
        class: Akeneo\ReferenceEntity\Common\Fake\InMemoryFindAttributesIndexedByIdentifier

    akeneo_referenceentity.infrastructure.persistence.query.find_record_items_for_identifiers:
        class: 'Akeneo\Test\Acceptance\Product\InMemoryFindRecordItemsForIdentifiers'

    akeneo_referenceentity.infrastructure.search.elasticsearch.record.query.find_identifiers_for_query:
        class: Akeneo\ReferenceEntity\Common\Fake\InMemoryFindIdentifiersForQuery
