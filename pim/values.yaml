nameOverride: ""
global:
  extraLabels:
    type: srnt
    instance_name: nil # Generated with terraform template
    pfid: nil # Generated with terraform template
  monitoring:
    enabled: false

backup:
  enabled: true
  projectId: nil # Generated with terraform template
  zone: nil # Generated with terraform template
  snapshot:
    schedule: "0 0 */1 * * *" # Once every hour: https://godoc.org/github.com/robfig/cron
    retentionPolicy:
      dailyBackups: 10
      weeklyBackups: 4
      monthlyBackups: 12
      yearlyBackups: 10
    export:
      enabled: true
      snapshotAge: 24h

common:
  extraLabels: {}
  pimMasterDomain: nil # Generated with terraform template
  retailerDomain: nil
  phpConfFPM:
  - name: "PHP_CONF_MAX_EXECUTION_TIME"
    value: "60"
  - name: "PHP_CONF_MAX_INPUT_VARS"
    value: "1000"
  - name: "PHP_CONF_UPLOAD_LIMIT"
    value: "512M"
  - name: "PHP_CONF_MAX_POST_SIZE"
    value: "512M"
  - name: "PHP_CONF_MEMORY_LIMIT"
    value: "512M"
  - name: "PHP_CONF_DISPLAY_ERRORS"
    value: "off"
  - name: "PHP_CONF_ERROR_REPORTING"
    value: "22527" # E_ALL & ~E_DEPRECATED & ~E_STRICT
  - name: "PHP_CONF_DATE_TIMEZONE"
    value: "Etc/UTC"

  phpConfCLI:
  - name: "PHP_CONF_MAX_EXECUTION_TIME"
    value: "0"
  - name: "PHP_CONF_MAX_INPUT_VARS"
    value: "1000"
  - name: "PHP_CONF_UPLOAD_LIMIT"
    value: "512M"
  - name: "PHP_CONF_MAX_POST_SIZE"
    value: "512M"
  - name: "PHP_CONF_MEMORY_LIMIT"
    value: "2G"
  - name: "PHP_CONF_DISPLAY_ERRORS"
    value: "off"
  - name: "PHP_CONF_ERROR_REPORTING"
    value: "22527" # E_ALL & ~E_DEPRECATED & ~E_STRICT
  - name: "PHP_CONF_DATE_TIMEZONE"
    value: "Etc/UTC"

mailer:
  login: nil # Generated with terraform template
  password: nil # Generated with terraform template
  host: nil # Generated with terraform template
  port: nil # Generated with terraform template
  from_address: no-reply@akeneo.com

certmanager:
  issuer: letsencrypt-prod
  acme:
    challenge: dns01
    dns01:
      provider: clouddns

image:
  pim:
    repository: eu.gcr.io/akeneo-cloud/pim-enterprise-cloud
    # image.pim.tag is added by the Jenkinsfile when running the CI, manually use "--set image.pim.tag x.y.z-AB"
    pullPolicy: IfNotPresent
  httpd:
    repository: httpd
    tag: 2.4.33
    pullPolicy: IfNotPresent

pim:
  hook:
    upgradePim:
      enabled: true
      hook: "pre-upgrade"
    upgradeES:
      enabled: true
      hook: "pre-upgrade"
  updateStrategy:
    type: RollingUpdate
  replicas: 2
  numDaemon: 2
  extraLabels: {}
  secret: nil # Generate me with `uuidgen`
  persistence:
    diskSize: 150Gi
  resources:
    requests:
      cpu: 200m
  defaultCatalog: minimal
  users:
    admin:
      firstName: nil # Fill me
      lastName: nil # Fill me
      email: nil # Fill me
      password: nil # Generate me with `pwgen -sB 22`
      catalogDefaultLocale: en_US # Change me if needed
      userDefaultLocale: en_US # Change me if needed
      catalogDefaultScope: ecommerce
      defaultCategoryTree: master
      roles: ROLE_ADMINISTRATOR
      groups: IT support
      enabled: 1
      defaultAssetTree: asset_main_catalog
  jobs:
    batch-purge:
      enabled: true
      pimCommand: "akeneo:batch:purge-job-execution"
      schedule: "0 0 1 * *"
    completeness-calculate:
      enabled: true
      pimCommand: "pim:completeness:calculate"
      schedule: "0 2 1 * *"
    rule-run:
      enabled: true
      pimCommand: "akeneo:rule:run"
      schedule: "0 5 * * *"
      mountPimData: true
    versionning-refresh:
      enabled: true
      pimCommand: "pim:versioning:refresh"
      schedule: "0 3 * * *"
    volume-aggregate:
      enabled: true
      pimCommand: "pim:volume:aggregate"
      schedule: "0 4 * * *"
    send-expiration-notification:
      enabled: true
      pimCommand: "pim:asset:send-expiration-notification"
      schedule: "0 1 * * *"
    project-recalculate:
      enabled: true
      pimCommand: "pimee:project:recalculate"
      schedule: "20 0 * * *"
    project-notify-before-due-date:
      enabled: true
      pimCommand: "pimee:project:notify-before-due-date"
      schedule: "0 2 * * *"
    franklin-insights-fetch-products:
      enabled: true
      pimCommand: "akeneo:batch:publish-job-to-queue franklin_insights_fetch_products"
      schedule: "30 */1 * * *"
    reference-entity-refresh-records:
      enabled: true
      pimCommand: "akeneo:reference-entity:refresh-records --all"
      schedule: "0 23 * * *"

# Onboarder
onboarder:
  enabled: false
  pubsub:
    topicPub: nil
    topicCon: nil
    queueName: nil
  serviceAccount: nil
  sso:
    idp:
      publicKey: nil
    sp:
      rawCrt: nil
      rawPem: nil

nfs:
  nameOverride: ""
  persistence:
    enabled: true
    storageClass: ssd-retain
    size: 155Gi # Add +3% based on pim.persistence.diskSize
  storageClass:
    name: nfs

mysql:
  common:
    class: ssd-retain
  mysql:
    serviceName: pim-mysql
    defaultUser: akeneo_pim
    userPassword: nil # Generate me with `pwgen -sB 22`
    rootPassword: nil # Generate me with `pwgen -sB 22`
    defaultDatabase: akeneo_pim
    dataDiskSize: 100Gi
    stateful:
      enabled: false
  common:
    class: ssd-retain

memcached:
  fullnameOverride: memcached
  replicaCount: 1
  resources:
    limits:
      cpu: "1"
      memory: "96Mi"
    requests:
      cpu: "30m"
      memory: "64Mi"
  memcached:
    maxItemMemory: 64

elasticsearch:
  appVersion: 6.5.4
  image:
    repository: docker.elastic.co/elasticsearch/elasticsearch-oss
    tag: 6.5.4
  fullnameOverride: elasticsearch
  sysctlInitContainer:
    enabled: false
  cluster:
    name: "pim-es"
    env:
      # See chart config map: https://github.com/helm/charts/blob/master/stable/elasticsearch/templates/configmap.yaml
      # And elasticsearch documentation: https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-gateway.html
      MINIMUM_MASTER_NODES: "2" # Might be equal to "lower((master.replicas/2)+1)
      EXPECTED_MASTER_NODES: "2" # Equals to MINIMUM_MASTER_NODES
      RECOVER_AFTER_MASTER_NODES: "2" # Equals to MINIMUM_MASTER_NODES
      EXPECTED_DATA_NODES: "2" # Equals to data.replica
      RECOVER_AFTER_DATA_NODES: "2" # Equals to data.replica
  client:
    replicas: 1
    heapSize: "128m"
    resources:
      limits:
        cpu: "1"
        memory: "512Mi"
      requests:
        cpu: "25m"
        memory: "160Mi"
  master:
    replicas: 2
    persistence:
      size: 1Gi
      storageClass: ssd-retain
    heapSize: "256m"
    resources:
      limits:
        cpu: "1"
        memory: "512Mi"
      requests:
        cpu: "25m"
        memory: "320Mi"
    updateStrategy:
      type: RollingUpdate
  data:
    replicas: 2
    persistence:
      size: 10Gi
      storageClass: ssd-retain
    heapSize: "256m"
    resources:
      limits:
        cpu: "1"
        memory: "1024Mi"
      requests:
        cpu: "25m"
        memory: "512Mi"
    updateStrategy:
      type: RollingUpdate

catalog:
  EE:
    minimal:
      path: vendor/akeneo/pim-enterprise-dev/src/Akeneo/Platform/Bundle/InstallerBundle/Resources/fixtures/minimal
      class: PimEnterpriseInstallerBundle:minimal
    icecat:
      path: vendor/akeneo/pim-enterprise-dev/src/Akeneo/Platform/Bundle/InstallerBundle/Resources/fixtures/icecat_demo_dev
      class: PimEnterpriseInstallerBundle:icecat_demo_dev
    onboarder:
      path: vendor/akeneo/pim-onboarder/src/Bundle/Resources/fixtures/onboarder
      class: PimOnboarderBundle:onboarder

