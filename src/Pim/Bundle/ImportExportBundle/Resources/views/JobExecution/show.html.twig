{% extends 'PimCatalogBundle::layout.html.twig' %}

{% block content %}

    {% set title = "execution details"|trans ~ ' - ' ~ execution.jobInstance.label %}
    {% set subtitle = execution.jobInstance.label  %}
    {% set isRunning = execution.exitStatus.exitCode not in [
            constant('Oro\\Bundle\\BatchBundle\\Job\\ExitStatus::COMPLETED'),
            constant('Oro\\Bundle\\BatchBundle\\Job\\ExitStatus::STOPPED'),
            constant('Oro\\Bundle\\BatchBundle\\Job\\ExitStatus::FAILED')
        ]
    %}

    {% set buttons %}
        {{ elements.backLink(indexRoute) }}

        {% if isRunning %}
            {{ elements.link('Refresh', path(refresh_route, { 'id': execution.id }), { icon: 'refresh' }) }}
        {% else %}
            {% if existingDownload %}
                {{ elements.link(
                    'Download file',
                    path(download_file_route, { 'id': execution.id }), { icon: 'download', class:'no-hash' }
                ) }}
            {% endif %}
            {% if existingLog %}
                {{ elements.link(
                    'Download log',
                    path(download_log_route, { 'id': execution.id }), { icon: 'download', class:'no-hash' }
                ) }}
            {% endif %}
        {% endif %}
        {{ elements.link('Show profile', path(show_profile_route, { 'id': execution.jobInstance.id })) }}
    {% endset %}

    {% set left %}
        <ul class="inline">
           <li>{{ 'Status'|trans }}: {{ execution.status|upper }}</li>
       </ul>
    {% endset %}

    {{ elements.page_header(title, buttons, subtitle, left) }}

    <div class="container-fluid grid-container">
        <table class="table table-bordered groups">
            <thead>
                <th>{{ 'Step' | trans | upper }}</th>
                <th>{{ 'Status' | trans | upper }}</th>
                <th>{{ 'Read count' | trans | upper }}</th>
                <th>{{ 'Filter' | trans | upper }}</th>
                <th>{{ 'Write' | trans |upper }}</th>
                <th>{{ 'Start' | trans | upper }}</th>
                <th>{{ 'End' | trans | upper }}</th>
            </thead>
            <tbody>
                {% for step in execution.stepExecutions %}
                    <tr>
                        <td>{{ step.stepName | trans }}</td>
                        <td>{{ step.status }}</td>
                        <td>{{ step.readCount }}</td>
                        <td>{{ step.filterCount }}</td>
                        <td>{{ step.writeCount }}</td>
                        <td>{{ step.startTime|date("Y-m-d H:i:s") }}</td>
                        <td>{{ step.endTime|date("Y-m-d H:i:s") }}</td>
                    </tr>

                    {# Step warnings #}
                    {% for warning in step.warnings %}
                    <tr class="warning">
                        <td colspan="7">
                            <span class="title">{{ warning.name|trans|upper }}</span>&nbsp;
                            {{ warning.reason }}<br />
                            <a class="data" href="#"
                                data-display-label="{{ 'Display data'|trans }}"
                                data-hide-label="{{ 'Hide data'|trans }}">
                                {{ 'Display data'|trans }}
                            </a>
                            <table class="data table-striped table-bordered table-hover">
                                {% for key, value in warning.item %}
                                <tr>
                                    <td>{{ key }}</td>
                                    <td>{{ value }}</td>
                                </tr>
                                {% endfor %}
                            </table>
                        </td>
                    </tr>
                    {% endfor %}

                    {# Step errors #}
                    {% for error in step.failureExceptions %}
                    <tr class="error">
                        <td colspan="7">
                            <span class="title">{{ step.stepName|trans|upper }}</span>&nbsp;{{ error.message }}
                        </td>
                    </tr>
                    {% endfor %}
                {% endfor %}

                {# Job errors #}
                {% for error in execution.failureExceptions %}
                <tr class="error">
                    <span class="title">{{ execution.jobInstance.label|upper }}</span>&nbsp;{{ error.message }}
                </tr>
                {% endfor %}
            </tbody>
        </table>
    </div>

{% endblock %}

{% block head_script %}
    {{ parent() }}

    <script type="text/javascript">
        require(
            ['jquery'],
            function($){
                'use strict';
                $(function() {
                    $('a.data').click(function(event) {
                        var displayLabel = $(this).data('display-label');
                        var hideLabel = $(this).data('hide-label');
                        var newLabel = $(this).text().trim() == displayLabel ? hideLabel : displayLabel;

                        event.preventDefault();

                        $(this).siblings('table.data').toggle();
                        $(this).text(newLabel);
                    });
                });
            }
        );
    </script>
{% endblock %}
