
{% import 'PimUIBundle::macros.html.twig' as UI %}
{% import 'PimUIBundle:Default:page_elements.html.twig' as elements %}

{% set fullname = form.vars.value.fullName|default('N/A') %}
{% set title = form.vars.value.id ? 'Edit user'|trans ~ ' - ' ~ fullname : 'New user'|trans %}

{% block head_script %}
    <script type="text/javascript">
        require(['underscore', 'jquery', 'pim/initselect2', 'datepicker', 'pim/date-context', 'jquery.jstree', 'jstree/jquery.hotkeys', 'bootstrap.bootstrapswitch'],
        function (_, $, initSelect2, datepicker, dateContext) {
            $(function() {
                $('#{{ form.vars.id }}').find('select').addClass('select2');
                initSelect2.init($('#{{ form.vars.id }}'));

                _.each($('#{{ form.vars.id }} input.datepicker:not(.hasPicker)'), function (field) {
                    datepicker.init($(field).closest('div'), {
                        format: dateContext.get('date').format,
                        defaultFormat: dateContext.get('date').defaultFormat,
                        language: dateContext.get('language')
                    });
                });

                {% if form.rolesCollection is defined %}
                    var $roles = $('#{{ form.rolesCollection.vars.id }}');

                    var checkRoles = function() {
                        if ($roles.find('input:checked').length) {
                            $('a[href="#pim_user-user-tab-group_and_role"]').removeClass('AknHorizontalNavtab-link--errored error');
                            $roles.parent().removeClass('validation-error');
                        } else {
                            $('a[href="#pim_user-user-tab-group_and_role"]').addClass('AknHorizontalNavtab-link--errored error');
                            $roles.addClass('error').parent().addClass('validation-error');
                        }
                    };

                    $roles.on('change', 'input', checkRoles);

                    checkRoles();
                {% endif %}

                $('#{{ form.vars.id }} .switch:not(.has-switch)').bootstrapSwitch();
            });
        });
    </script>
{% endblock %}

{% block page_container %}
{% block content %}
<div class="AknDefault-mainContent">
    {{ form_start(form, {
        'action': editRoute,
        'attr': {
            'data-updated-title': 'confirmation.leave'|trans,
            'data-updated-message': 'confirmation.discard changes'|trans({ '%entity%': 'user.title'|trans }),
            'novalidate': ''
        }
    }) }}

        {% set meta %}
            {% if form.vars.value.id %}
                <span class="AknTitleContainer-metaItem">{{ 'Created'|trans }}: {{ form.vars.value.createdAt ? form.vars.value.createdAt|datetime_presenter : 'N/A' }}</span>
                <span class="AknTitleContainer-metaItem">{{ 'Updated'|trans }}: {{ form.vars.value.updatedAt ? form.vars.value.updatedAt|datetime_presenter : 'N/A' }}</span>
                <span class="AknTitleContainer-metaItem">{{ 'Last logged in'|trans }}: {{ form.vars.value.lastLogin ? form.vars.value.lastLogin|datetime_presenter : 'N/A' }}</span>
                <span class="AknTitleContainer-metaItem">{{ 'Login count'|trans }}: {{ form.vars.value.loginCount|default(0) }}</span>
            {% endif %}
        {% endset %}

        {% set buttons %}
            {% if form.vars.value.id and form.vars.value.id != app.user.id %}
              <div class="AknSecondaryActions AknDropdown AknButtonList-item secondary-actions">
                <div class="AknSecondaryActions-button dropdown-button" data-toggle="dropdown"></div>
                <div class="AknDropdown-menu AknDropdown-menu--right">
                    <div class="AknDropdown-menuTitle">{{'other_actions'|trans}}</div>
                    {{ elements.deleteLink(
                        path('oro_user_user_delete', {'id': form.vars.value.id}),
                        'pim_user_user_remove',
                        path('oro_user_index'),
                        'confirmation.remove.user'|trans({ '%name%': fullname }),
                        'flash.user.removed'|trans,
                        'Confirm deletion'|trans,
                        'AknDropdown-menuLink delete',
                        'Users'|trans
                    ) }}
                </div>
              </div>
            {% endif %}
            {{ elements.submitBtn('', 'ok', 'AknButtonList-item') }}
        {% endset %}

        {% set image %}
            {% set imagePath = form.vars.value.imagePath %}
            <img class="AknTitleContainer-image" src="{{ imagePath ? imagePath | imagine_filter('avatar_med') : asset('bundles/pimui/images/info-user.png') }}"/>
        {% endset %}

        {{ elements.page_header(
            {
                title: title,
                buttons: buttons,
                meta: meta,
                state: elements.updated(form.vars.id),
                image: image
            }
        ) }}

        {{ elements.form_navbar(view_element_aliases(form.vars.id ~ '.form_tab')) }}
        <div class="AknTabContainer-content tab-content oro-tab-form">
            {{ elements.form_errors(form) }}

            {{ view_elements(form.vars.id ~ '.form_tab') }}
        </div>

        <script>
            require(
                [
                    'pim/common/breadcrumbs',
                    'pim/fetcher-registry',
                    'pim/form-builder',
                    'pim/page-title'
                ],
                function(
                    Breadcrumbs,
                    FetcherRegistry,
                    FormBuilder,
                    PageTitle
                ) {
                    $(function() {
                        var breadcrumbs = new Breadcrumbs({
                            config: {
                                tab: 'pim-menu-system',
                                item: 'pim-menu-system-user-user'
                            }
                        });
                        breadcrumbs.configure().then(function () {
                            breadcrumbs.render();
                            $('*[data-drop-zone="breadcrumbs"]').append(breadcrumbs.$el);
                        });

                        PageTitle.set({ 'username': '{{ fullname }}' });

                        FetcherRegistry.initialize().done(function () {
                            FormBuilder.build('pim-menu-user-navigation').then(function (form) {
                                $('.user-menu').append(form.el);
                                form.render();
                            }.bind(this));
                        });
                    });
                }
            );
        </script>

    {{ form_end(form) }}
</div>
{% endblock %}
{% endblock %}
