{% extends 'PimUIBundle:actions:view.html.twig' %}
{% import 'PimUIBundle::macros.html.twig' as UI %}

{% set fullname = entity.fullName|default('N/A') %}

{% block navButtons %}
    {{ parent() }}
    {% if resource_granted('pim_user_user_remove') and entity.id!=app.user.id %}
        <div class="AknSecondaryActions AknDropdown AknButtonList-item secondary-actions">
            <div class="AknSecondaryActions-button dropdown-button" data-toggle="dropdown"></div>
            <div class="AknDropdown-menu AknDropdown-menu--right">
                <div class="AknDropdown-menuTitle">{{'other_actions'|trans}}</div>
                    {{ UI.deleteButton({
                        'dataUrl': path('pim_user_user_delete', {'id': entity.id}),
                        'dataRedirect': path('pim_user_index'),
                        'aCss': 'AknDropdown-menuLink delete remove-button',
                        'dataId': entity.id,
                        'dataMessage': 'confirmation.remove.user'|trans,
                        'successMessage': 'User deleted'|trans,
                        'title': 'confirmation.delete'|trans,
                        'label': 'pim_common.delete'|trans,
                        'subTitle': 'pim_user.user.title'|trans
                    }) }}
            </div>
        </div>
    {% endif %}
    {% if editRoute is defined %}
        {{ UI.button({
            'path' : path(editRoute),
            'iClass' : 'icon-pencil ',
            'label' : 'pim_common.edit',
            'aClass' : 'AknButtonList-item AknButton--action edit-user'
        }) }}
    {% else %}
        {% if resource_granted('pim_user_user_edit') %}
            {{ UI.button({
                'path' : path('pim_user_update', { id: entity.id }),
                'iClass' : 'icon-pencil ',
                'label' : 'pim_common.edit',
                'aClass' : 'AknButtonList-item AknButton--action edit-user'
            }) }}
        {% endif %}
    {% endif %}
{% endblock navButtons %}

{% block pageHeader %}
    {% set breadcrumbs = {
        'entity':      entity,
        'entityTitle': fullname,
        'hasAvatar':   true,
        'imagePath':   entity.imagePath,
    }
    %}
    {{ parent() }}
{% endblock pageHeader %}

{% block stats %}
    {{ parent() }}
    <span class="AknTitleContainer-metaItem">{{ 'pim_user.user.fields.last_logged_in'|trans }}: {{ entity.lastLogin ? entity.lastLogin|datetime_presenter : 'N/A' }}</span>
    <span class="AknTitleContainer-metaItem">{{ 'pim_user.user.fields.login_count'|trans }}: {{ entity.loginCount|default(0) }}</span>
{% endblock stats %}

{% block context %}
    {% if entity.enabled %}
        <div class="AknBadge AknBadge--medium AknBadge--enabled status-enabled"><i class="AknBadge-icon icon-status-enabled icon-circle"></i>{{ 'pim_user.user.fields.active'|trans }}</div>
    {% else %}
        <div class="AknBadge AknBadge--medium AknBadge--disabled status-disabled"><i class="AknBadge-icon icon-status-disabled icon-circle"></i>{{ 'pim_user.user.fields.inactive'|trans }}</div>
    {% endif %}
{% endblock context %}

{% block content_data %}
    <div>
    {% set id = 'user-profile' %}

    {% set dataSubBlocks = [UI.attibuteRow('pim_user.user.fields.email'|trans, {value: entity.email, hint: ''|trans})] %}

    {% set dataBlocks = [
        {
            'title': 'pim_user.user.tabs.general.title'|trans,
            'class': 'active',
            'subblocks': [
                {
                    'title': 'pim_user.user.tabs.general.basic_information'|trans,
                    'class': 'AknFormContainer AknFormContainer--withPadding',
                    'data': [
                        UI.attibuteRow('pim_user.user.fields.username'|trans, entity.username),
                        entity.namePrefix ? UI.attibuteRow('pim_user.user.fields.name_prefix'|trans, entity.namePrefix),
                        UI.attibuteRow('pim_user.user.fields.first_name'|trans, entity.firstName|default('N/A')),
                        entity.middleName ? UI.attibuteRow('pim_user.user.fields.middle_name'|trans, entity.middleName),
                        UI.attibuteRow('pim_user.user.fields.last_name'|trans, entity.lastName|default('N/A')),
                        entity.nameSuffix ? UI.attibuteRow('pim_user.user.fields.name_suffix'|trans, entity.nameSuffix),
                        entity.phone ? UI.attibuteRow('pim_user.user.fields.phone'|trans, entity.phone),
                        UI.attibuteRow('pim_user.user.fields.date_of_birth'|trans, entity.birthday ? entity.birthday|date_presenter : 'N/A')
                    ]
                },
                {
                    'title': 'pim_user.user.tabs.general.contact_information'|trans,
                    'class': 'AknFormContainer AknFormContainer--withPadding',
                    'data': dataSubBlocks
                }
            ]
        }
    ]
    %}

    {#
      EntityExtend fields START
    #}

    {% set filters = [] %}
    {% for filter in entity.productGridFilters %}
      {% set filters = filters|merge([filter_label(filter)]) %}
    {% endfor %}

    {% set additionalData = [
        UI.attibuteRow('pim_user.user.fields.catalog_locale'|trans, entity.catalogLocale),
        UI.attibuteRow('pim_user.user.fields.catalog_scope'|trans, entity.catalogScope),
        UI.attibuteRow('pim_user.user.fields.default_tree'|trans, entity.defaultTree),
        UI.attibuteRow('pim_user.user.fields.product_grid_filters'|trans, filters|join(', '))
    ] %}

    {% for view in entity.getDefaultGridViews() %}
        {% set additionalData = additionalData|merge([
            UI.attibuteRow(
                'pim_user.user.fields.default_' ~ view.datagridAlias|replace('-', '_') ~ '_view.label'|trans,
                view.label|default('pim_user.user.fields.default_grid_view.none'|trans)
            )
        ]) %}
    {% endfor %}

    {% set additionalData = additionalData|merge([
        UI.attibuteRow('pim_user.user.fields.user_salt'|trans, entity.salt)
    ]) %}

    {% set additional = [
        {
            'title': 'pim_user.user.tabs.additional.title'|trans,
            'class': 'active',
            'subblocks': [
                {
                    'title': '',
                    'class': 'AknFormContainer AknFormContainer--withPadding',
                    'data': additionalData
                }
            ]
        }
    ]
    %}

    {% set interfaces = [
        {
            'title': 'pim_user.user.tabs.interfaces.title'|trans,
            'subblocks': [
                {
                    'title': '',
                    'class': 'AknFormContainer AknFormContainer--withPadding',
                    'data': [
                        UI.attibuteRow('pim_user.user.fields.ui_locale'|trans, entity.uiLocale.getName),
                        UI.attibuteRow('pim_user.user.fields.timezone'|trans, entity.timezone),
                    ]
                }
            ]
        }
    ]
    %}

    {% set yesTrans = 'user.proposals.notifications.yes' %}
    {% set noTrans  = 'user.proposals.notifications.no' %}

    {% set notificationsSubblocks = [] %}
    {% set proposal_to_review     = [] %}
    {% set proposal_state         = [] %}

    {% if is_proposal_to_review_field_visible(entity) %}
        {% set notifyToReview     = entity.hasProposalsToReviewNotification ? yesTrans : noTrans %}
        {% set proposal_to_review = [
            {
                'title': '',
                'class': 'AknFormContainer AknFormContainer--withPadding',
                'data': [
                    UI.attibuteRow(
                        'user.proposals.notifications.to_review'|trans,
                        notifyToReview|trans
                    ),
                ]
            }
        ]
        %}
    {% endif %}

    {% if is_proposal_state_field_visible(entity) %}
        {% set notifyState    = entity.hasProposalsStateNotification ? yesTrans : noTrans %}
        {% set proposal_state = [
            {
                'title': '',
                'class': 'AknFormContainer AknFormContainer--withPadding',
                'data': [
                    UI.attibuteRow(
                        'user.proposals.notifications.state'|trans,
                        notifyState|trans
                    ),
                ]
            }
        ]
        %}
    {% endif %}

    {% set notificationsSubblocks = notificationsSubblocks|merge(proposal_to_review)|merge(proposal_state) %}

    {% set notifications = [{
        'title': 'pimee_user.user.tab.notifications.title'|trans,
        'subblocks': notificationsSubblocks,
    }]
    %}

    {% set dataBlocks = dataBlocks|merge(additional)|merge(interfaces)|merge(notifications) %}

    {#
      EntityExtend fields END
    #}

    {%- set additional_data -%}
        {% placeholder pim_user_view_additional_data %}
    {%- endset -%}

    {% if additional_data is not empty %}
        {% set dataBlocks = dataBlocks|merge(
            [{
                'title': 'pim_user.user.tabs.additional_data.title'|trans,
                'subblocks': [
                    {
                        'title': '',
                        'class': 'AknFormContainer AknFormContainer--withPadding',
                        'data': [additional_data]
                    }
                ]
            }]
        ) %}
    {% endif %}

    {% set data = { 'dataBlocks': dataBlocks } %}
    {{ UI.scrollData(id, data) }}
    </div>

    <script>
        require(
            [
                'pim/common/breadcrumbs',
                'pim/fetcher-registry',
                'pim/form-builder',
                'pim/page-title'
            ],
            function(
                Breadcrumbs,
                FetcherRegistry,
                FormBuilder,
                PageTitle
            ) {
                $(function() {
                    var breadcrumbs = new Breadcrumbs({
                        config: {
                            tab: 'pim-menu-system',
                            item: 'pim-menu-system-user-user'
                        }
                    });
                    breadcrumbs.configure().then(function () {
                        breadcrumbs.render();
                        $('*[data-drop-zone="breadcrumbs"]').append(breadcrumbs.$el);
                    });

                    PageTitle.set({ 'username': '{{ fullname }}' });

                    FetcherRegistry.initialize().done(function () {
                        FormBuilder.build('pim-menu-user-navigation').then(function (form) {
                            $('.user-menu').append(form.el);
                            form.render();
                        }.bind(this));
                    });
                });
            }
        );
    </script>
{% endblock content_data %}
