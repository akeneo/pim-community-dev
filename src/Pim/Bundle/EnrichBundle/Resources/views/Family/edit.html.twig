{% extends 'PimEnrichBundle::layout.html.twig' %}

{% oro_title_set({ params: { "%family.label%": form.vars.value.label } }) %}

{% block content %}

    {% if resource_granted('pim_enrich_family_edit_attributes') %}
        {% include 'PimEnrichBundle:Attribute:_available-attributes-form.html.twig' with {
            'form': attributesForm,
            'action': path('pim_enrich_family_addattributes', {'id': form.vars.value.id})
        } %}
    {% endif %}

    {{ JSFV(form) }}
    {{ form_start(form, {
        'action': path('pim_enrich_family_edit', { id: form.vars.value.id }),
        'attr': {
            'data-updated-title': 'confirmation.leave'|trans,
            'data-updated-message': 'confirmation.discard changes'|trans({ '%entity%': 'family.title'|trans })
        }
    }) }}

        {% set title = 'family.edit'|trans ~ ' - ' ~ form.vars.value.label %}

        {% set buttons %}
            {{ elements.backLink(path('pim_enrich_family_index')) }}
            {% if form.vars.value.id %}
                {{ elements.deleteLink(
                    path('pim_enrich_family_remove', { 'id': form.vars.value.id }),
                    'pim_enrich_family_remove',
                    path('pim_enrich_family_index'),
                    'confirmation.remove.family'|trans({ '%name%': form.vars.value.label }),
                    'flash.family.removed'|trans
                ) }}
            {% endif %}
            {{ elements.submitBtn() }}
        {% endset %}

        {{ elements.page_header(title, buttons, null, null, elements.updated(form.vars.id)) }}

        {{ elements.form_navbar(view_element_aliases(form.vars.id ~ '.form_tab')) }}

        <div class="tab-content">

            {{ elements.form_errors(form) }}

            {{ view_elements(form.vars.id ~ '.form_tab') }}

        </div>
    {{ form_end(form) }}
{% endblock %}

{% block head_script_component %}
    {{ parent() }}

    <script type="text/javascript">
        require(
            ['jquery', 'bootstrap'],
            function ($) {
                'use strict';

                $(function() {
                    $('.group').click(function() {
                        $(this).parent().find('tr:not(.group)').toggle();
                        $(this).find('i').toggleClass('icon-expand-alt icon-collapse-alt');
                    });

                    {% if resource_granted('pim_enrich_family_edit_attributes') %}
                    $('.attribute-requirement:not(.identifier) i').on('click', function() {
                        $(this).toggleClass('icon-ok required').toggleClass('icon-circle non-required');

                        var $input = $(this).siblings('input[type="checkbox"]').eq(0);
                        var checked = $input.is(':checked');
                        $(this).attr('data-original-title', $(this).parent().data((checked ? 'not-' : '') + 'required-title')).tooltip('show');
                        $input.prop('checked', !checked).trigger('change');
                    });
                    {% endif %}
                });
            }
        );
    </script>
{% endblock %}
