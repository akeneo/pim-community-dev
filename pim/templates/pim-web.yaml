apiVersion: apps/v1
kind: Deployment
metadata:
  name: pim-web
  labels:
    app: {{ template "pim.fullName" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
    component: {{ template "pim.fullName" . }}
    {{ include "pim.extravarsPim" . | indent 4}}
    role: pim-web
spec:
  replicas: {{ .Values.pim.replicas }}
  minReadySeconds: 30
  selector:
    matchLabels:
      component: {{ template "pim.fullName" . }}
      role: pim-web
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      labels:
        component: {{ template "pim.fullName" . }}
        role: pim-web
        {{ include "pim.extravarsPim" . | indent 8}}
    spec:
      initContainers:
        - name: init-fpm
          image:  "{{ .Values.image.pim.repository }}:{{ required "Value .image.pim.tag is required!" .Values.image.pim.tag }}"
          imagePullPolicy: {{ .Values.image.pim.pullPolicy | quote }}
          command: ['sh', '-c', 'export HOME=/var/www/ && su -m -l www-data -s /bin/bash -c "php bin/console pim:installer:dump-require-paths && yarn run webpack" && cp -p -r -f /var/www/html/web/* /var/www/html/web/.htaccess /web-src/. ']
          volumeMounts:
            - name: web-src
              mountPath: web-src
            {{- if .Values.onboarder.enabled }}
            # we need the key
            - name: google-cloud-onboarder-key
              mountPath: /var/secrets/google/key.json
              subPath: key.json
              readOnly: true
            {{- end }}
          env:
            {{- include "pim.pim-web.env" . | nindent 12 }}
      containers:
        - name: fpm
          image: "{{ .Values.image.pim.repository }}:{{ .Values.image.pim.tag }}"
          imagePullPolicy: {{ .Values.image.pim.pullPolicy | quote }}
          resources:
{{ toYaml .Values.pim.resources | indent 12 }}
          ports:
            - name: fpm
              containerPort: 9000
          volumeMounts:
            - name: web-src
              mountPath: /var/www/html/web
            - name: fpm-data
              mountPath: /data
              readOnly: false
            {{- if .Values.onboarder.enabled }}
            - name: google-cloud-onboarder-key
              mountPath: /var/secrets/google/key.json
              subPath: key.json
              readOnly: true
            - name: sso-onboarder-private
              mountPath: /var/secrets/pimmaster/pimmaster.pem
              subPath: pimmaster.pem
              readOnly: true
            - name: sso-onboarder-public
              mountPath: /var/secrets/pimmaster/pimmaster.crt
              subPath: pimmaster.crt
              readOnly: true
            {{- end }}
          env:
            {{- include "pim.pim-web.env" . | nindent 12 }}
{{- if .Values.common.phpConfFPM }}
{{ toYaml .Values.common.phpConfFPM  | indent 12 }}
{{- end }}
        - name: httpd
          image: "{{ .Values.image.httpd.repository }}:{{ .Values.image.httpd.tag }}"
          imagePullPolicy: {{ .Values.image.httpd.pullPolicy | quote }}
          ports:
            - containerPort: 80
              name: httpd
          volumeMounts:
            - name: web-src
              mountPath: /var/www/html/web
              readOnly: true
            - mountPath: /usr/local/apache2/conf/
              name: conf-httpd
              readOnly: true
      volumes:
        - name: web-src
          emptyDir: {}
        - name: fpm-data
          persistentVolumeClaim:
            claimName: pvc-data-pim-{{required ".Values.global.extraLabels.pfid is required" .Values.global.extraLabels.pfid }}
        - name: conf-httpd
          configMap:
            name: pim-config
            items:
              - key: httpd.conf
                path: httpd.conf
              - key: mime.types
                path: mime.types
        {{- if .Values.onboarder.enabled }}
        - name: google-cloud-onboarder-key
          secret:
            secretName: pim-secrets
            items:
            - key: akobOnboarderKey
              path: key.json
        - name: sso-onboarder-private
          secret:
            secretName: pim-secrets
            items:
            - key: akobPimmasterPem
              path: pimmaster.pem
        - name: sso-onboarder-public
          secret:
            secretName: pim-secrets
            items:
            - key: akobPimmasterCrt
              path: pimmaster.crt
        {{- end }}


{{- define "pim.pim-web.env" }}
- { name: SYMFONY_ENV, value: prod }
- { name: TRUSTED_PROXY_IPS, value: 10.0.0.0/8 }
- { name: PIM_ELASTICSEARCH_HOST, value: elasticsearch }
- { name: PIM_ELASTICSEARCH_PORT, value: "9200" }
- { name: PIM_SHARED_STORAGE, value: /data }
- { name: PIM_DATABASE_HOST, value: {{ .Values.mysql.mysql.serviceName | quote }} }
- { name: PIM_DATABASE_NAME, value: {{ .Values.mysql.mysql.defaultDatabase | quote }} }
- { name: PIM_DATABASE_USER, value: {{ .Values.mysql.mysql.defaultUser | quote }} }
- { name: CONTAINER_NAME, value: pim }
- { name: GOOGLE_LOCATION, value: {{ .Values.google.location | quote }} }
- { name: GOOGLE_CLOUD_PROJECT, value: {{ .Values.google.project_id | quote }} }
- { name: K8S_CLUSTER_NAME, value: {{ .Values.google.cluster_name | quote }} }
- { name: MAILER_HOST, value: {{ .Values.mailer.host | quote }} }
- { name: MAILER_PORT, value: {{ .Values.mailer.port | quote }} }
- { name: MAILER_FROM_ADDRESS, value: {{ .Values.mailer.from_address | quote }} }
- name: MAILER_USER
  valueFrom:
    secretKeyRef:
      name: pim-secrets
      key: mailerLogin
- name: MAILER_PASSWORD
  valueFrom:
    secretKeyRef:
      name: pim-secrets
      key: mailerPassword
- name: PIM_DATABASE_PASSWORD
  valueFrom:
    secretKeyRef:
      name: pim-secrets
      key: mysqlPimUserPassword
- name: GOOGLE_NAMESPACE
  valueFrom:
    fieldRef:
      fieldPath: metadata.namespace
- name: GOOGLE_POD_NAME
  valueFrom:
    fieldRef:
      fieldPath: metadata.name
{{- if .Values.onboarder.enabled }}
- name: ONBOARDER_ENABLED
  value: "1"
- name: GCP_PROJECT_ID
  value: {{ .Values.common.gcpProjectID | quote }}
- name: GOOGLE_APPLICATION_CREDENTIALS
  value: /var/secrets/google/key.json
- name: ONBOARDER_RETAILER_URL
  value: https://{{ .Values.common.retailerDomain }}
- name: ONBOARDER_PIMMASTER_URL
  value: https://{{ .Values.common.pimMasterDomain }}
- name: SIMPLESAMLPHP_CONFIG_DIR
  value: /var/www/html/vendor/akeneo/pim-onboarder/src/Infrastructure/Authentication/SimpleSamlPhp/Configuration
- name: ONBOARDER_SSO_IDP_PUBLIC_KEY
  value: {{ .Values.onboarder.sso.idp.publicKey | quote }}
- name: ONBOARDER_SSO_CERTS_PATH
  value: "/var/secrets/pimmaster/"
- name: ONBOARDER_TOPIC_NAME_FOR_PUBLICATION
  value: {{ .Values.onboarder.pubsub.topicPub | quote }}
- name: ONBOARDER_TOPIC_NAME_FOR_CONSUMPTION
  value: {{ .Values.onboarder.pubsub.topicCon | quote }}
- name: ONBOARDER_QUEUE_NAME
  value: {{ .Values.onboarder.pubsub.queueName | quote }}
- name: ONBOARDER_CLOUD_STORAGE_BUCKET_NAME
  value: {{ .Values.common.aobGcsBucketName | quote }}
{{- else }}
- name: ONBOARDER_ENABLED
  value: "0"
{{- end }}
{{- end }}