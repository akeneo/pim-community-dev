{% extends 'PimEnrichBundle::layout.html.twig' %}

{% block main %}
    <div id="main">
        {% block before_content %}
        <div class="AknBreadcrumbContainer">
            <div id="breadcrumb">
                {% block breadcrumb %}
                    {% placeholder breadcrumb %}
                {% endblock breadcrumb %}
            </div>
            <div id="flash-messages">
                {% block messages %}
                    <div class="flash-messages-frame">
                        <div class="flash-messages-holder"></div>
                    </div>
                    <script type="text/template" id="message-item-template">
                        <div class="alert <% if (type) {  %><%= 'alert-' + type %><% } %> fade in top-messages ">
                            <button type="button" class="close" data-dismiss="alert">&times;</button>
                            <div class="message"><%= message %></div>
                        </div>
                    </script>
                    <script type="text/javascript">
                        require(['jquery', 'oro/messenger'],
                                function($, messenger) {
                                    messenger.setup({
                                        container: '#flash-messages .flash-messages-holder',
                                        template: _.template($.trim($('#message-item-template').html()))
                                    });
                                    {% if app.session.flashbag.peekAll|length > 0 %}
                                        $(function() {
                                            {% for type, messages in app.session.flashbag.all %}
                                                {% for message in messages %}
                                                    messenger.notificationFlashMessage({{ type|json_encode|raw }}, {{ message|trans|json_encode|raw }});
                                                {% endfor %}
                                            {% endfor %}
                                        });
                                    {% endif %}
                                });
                    </script>
                {% endblock messages %}
            </div>
            {% placeholder pin_button %}
        </div>
        {% endblock before_content %}
        <div class="hash-loading-mask"></div>
        <div id="container">
            {% block page_container %}
                {% block content %}
                    {% placeholder content_before %}
                    <div id="variant-group-edit-form">

                    </div>
                    <script>
                        require(
                            ['jquery', 'pim/fetcher-registry', 'pim/form-builder', 'pim/variant-group-manager', 'pim/user-context', 'pim/dialog', 'oro/mediator', 'pim/error', 'oro/navigation'],
                            function($, FetcherRegistry, FormBuilder, VariantGroupManager, UserContext, Dialog, mediator, Error, Navigation) {
                                $(function() {
                                    FetcherRegistry.initialize().done(function () {
                                        FetcherRegistry.getFetcher('variant-group').fetch('{{ code }}', {cached: false, generateMissing: true})
                                            .then(function (group) {
                                                var label    = _.escape(group.labels[UserContext.get('catalogLocale')]);
                                                var newTitle = document.title.replace('%group.label%', label);

                                                document.title  = newTitle;
                                                var navigation  = Navigation.getInstance();
                                                var navTitle    = navigation.getPinButtonsData('title');
                                                navTitle.params = {'%group.label%': label};
                                                navigation.setPinButtonsData('title', navTitle);
                                                navigation.setPinButtonsData('title-rendered-short', newTitle);

                                                FormBuilder.build(group.meta.form)
                                                    .then(function (form) {
                                                        form.setData(group);
                                                        mediator.trigger('pim_enrich:form:entity:post_fetch', group);
                                                        form.setElement('#variant-group-edit-form').render();
                                                    });
                                            }).fail(function(response, textStatus, errorThrown) {
                                                var errorView = new Error(response.responseJSON.message, response.status);
                                                errorView.setElement('#variant-group-edit-form').render();
                                            });
                                    })
                                });
                            });
                    </script>
                    {% placeholder content_after %}
                {% endblock content %}
            {% endblock page_container %}
        </div>
    </div>
{% endblock main %}
