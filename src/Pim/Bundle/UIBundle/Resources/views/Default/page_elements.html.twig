{% macro createBtn(entity, url, attr, acl, icon) %}
{% spaceless %}
    {% if acl is null or resource_granted(acl) %}
        {% if attr == 'dialog' %}
            {% set buttonId = 'create-'~(entity|replace({' ': '-', '.': '-'})|lower) %}
            {% set attr = { 'id': buttonId, 'data-form-url': url } %}
            {% set url = null %}
        {% endif %}
        {% set title = ('btn.create.' ~ entity)|trans|capitalize %}
        <a class="btn btn-primary pull-right{% if attr.class is defined %} {{ attr.class }}{% endif %} {% if entity and icon %} icons-holder-text{% elseif icon %} icons-holder{% endif %} " href="{{ url ? '#' ~ url : 'javascript:void(0);' }}" title="{{ title }}"{% if attr %}{% for key, value in attr %}{% if key != 'class' %} {{ key }}="{{ value }}"{% endif %}{% endfor %}{% endif %}>
            {% if icon %}
                <i class="icon-{{ icon }}"></i>
            {% endif %}
            {{ title }}
        </a>
        {% if buttonId is defined %}
            <script type="text/javascript">
                require(
                    ['jquery', 'pim/dialogform'],
                    function ($, DialogForm) {
                        'use strict';
                        $(function() {
                            new DialogForm('#{{ buttonId }}');
                        });
                    }
                );
            </script>
        {% endif %}
    {% endif %}
{% endspaceless %}
{% endmacro %}

{% macro submitBtn(text, icon) %}
{% spaceless %}
    {% set text = text|default('btn.save')|trans|capitalize %}
    <button type="submit" class="btn btn-primary btn-submit" title="{{ text }}">
        {% if icon %}
            <i class="icon-{{ icon }}"></i>
        {% endif %}
        {{ text }}
    </button>
{% endspaceless %}
{% endmacro %}

{% macro submitDropdownBtn(actions) %}
{% spaceless %}
    <div class="btn-group submit-form">
        {% for actionKey, action in actions %}
            {% if loop.first %}
                <button type="submit" class="btn btn-primary" title="{{ action.text|default('')|trans|capitalize }}">{{ action.text|default('')|trans|capitalize }}</button>
                <button data-toggle="dropdown" class="btn btn-primary dropdown-toggle"><span class="caret"></span></button>
                <ul class="dropdown-menu right-align">
            {% else %}
                    <li><a href="javascript:void(0);" value="{{ actionKey }}">{{ action.text|default('')|trans|capitalize }}</a></li>
            {% endif %}
        {% endfor %}
        </ul>
    </div>
{% endspaceless %}
{% endmacro %}

{% macro backLink(url, title) %}
{% spaceless %}
    {% set title = title|default('btn.to grid') %}
    <a class="btn icons-holder back-link" href="#{{ url }}" title="{{ title|trans|capitalize }}"><i class="icon-chevron-left"></i></a>
{% endspaceless %}
{% endmacro %}

{% macro deleteLinkAttributes(url, redirectUrl, message, successMessage, title) %}{% spaceless %}
    {% set message = message|default('confirmation.remove.item') %}
    {% set title = title|default('confirmation.delete'|trans) %}
    {% set successMessage = successMessage|default('flash.entity.removed'|trans) %}
    href="javascript:void(0);" data-dialog="confirm" data-title="{{ title }}" data-message="{{ message }}" data-url="{{ url }}" data-redirect-url="#{{ redirectUrl }}" data-method="DELETE" data-error-message="{% trans %}The element could not be deleted{% endtrans %}" data-success-message="{{ successMessage }}"
{% endspaceless %}{% endmacro %}

{% macro deleteLink(url, acl, redirectUrl, message, successMessage, title) %}{% spaceless %}
    {% if acl is null or resource_granted(acl) %}
        {% import _self as elements %}
        <a class="btn icons-holder-text no-hash btn-delete" title="{{ 'btn.delete'|trans|capitalize }}" {{elements.deleteLinkAttributes(url, redirectUrl, message, successMessage, title)}} >
            <i class="icon-trash"></i>
            {{ 'btn.delete'|trans|capitalize }}
        </a>
    {% endif %}
{% endspaceless %}{% endmacro %}

{% macro link(text, url, opts = {}) %}
{% spaceless %}
    {% set title = opts.title is defined ? opts.title : text %}
    {% set icon = opts.icon is defined ? opts.icon : null %}
    <a{% if opts.id is defined %} id="{{ opts.id }}"{% endif %} class="btn {{ opts.class is defined ? opts.class|join(' ') }}{% if text and icon %} icons-holder-text{% elseif icon %} icons-holder{% endif %} {{ icon }}" href="{{ url ? '#' ~ url : 'javascript:void(0);' }}"{% if title %} title="{{ title|trans|capitalize }}"{% endif %}{% if opts.attr is defined %}{% for key, value in opts.attr %} {{ key }}="{{ value }}"{% endfor %}{% endif %}>
        {% if icon %}<i class="icon-{{ icon }}"></i>{% endif %}
        {{ text|trans|capitalize }}
    </a>
{% endspaceless %}
{% endmacro %}

{% macro page_header(title, buttons, subtitle, left, right) %}
    <div class="navigation clearfix navbar-extra">
        <div class="row-fluid">
            {% if buttons is not empty %}
                <div class="navbar-buttons pull-right">
                    {{ buttons }}
                </div>
            {% endif %}
            <div class="navbar-content pull-left">
                <div class="navbar-title clearfix-oro">
                    <div class="sub-title">{{ title|first|capitalize ~ title[1:] }}</div>
                    {% if subtitle is not empty %}
                        <span class="separator">/</span>
                        <div class="sub-title">{{ subtitle }}</div>
                    {% endif %}
                </div>
           </div>
           <div class="clearfix"></div>
           <div class="navbar-content pull-left">
               {{ left }}
           </div>
            {{ right }}
        </div>
    </div>
{% endmacro %}

{% macro form_navbar(tabs, translationSuffix = '.title') %}
    <div id="form-navbar" class="navbar navbar-static scrollspy-nav">
        <div class="navbar-inner">
            <div class="row-fluid">
                {% if tabs is not empty %}
                    <ul class="nav">
                        {% if tabs is iterable %}
                            {% for tab in tabs %}
                                <li{% if loop.first %} class="active"{% endif %}><a href="#{{ tab|replace({' ': '-', '.': '-'})|lower }}" data-toggle="tab">{{ (tab ~ translationSuffix)|trans }}</a></li>
                            {% endfor %}
                        {% else %}
                            <li class="active"><a href="#{{ tabs|replace({' ': '-', '.': '-'})|lower }}" data-toggle="tab">{{ (tabs ~ translationSuffix)|trans }}</a></li>
                        {% endif %}
                    </ul>
                {% endif %}
            </div>
        </div>
    </div>
{% endmacro %}

{% macro form_errors(form) %}
    {% if form.vars.errors|length %}
        <div class="alert alert-error fade in top-messages">
            <button type="button" class="close" data-dismiss="alert">&times;</button>
            <div class="message">
                {{ form_errors(form) }}
            </div>
        </div>
    {% endif %}
{% endmacro %}

{% macro accordion(items = {}, counter = 1, no_buffer = false) %}
    <div class="accordion">
        {% for title, content in items %}
            <div class="accordion-group">
                <div class="accordion-heading">
                    <a class="accordion-toggle" data-toggle="collapse" href="#collapse-{{ counter }}-{{ loop.index }}">
                        <i class="icon-chevron-down"></i>
                        {{ title|trans }}
                    </a>
                </div>
                <div id="collapse-{{ counter }}-{{ loop.index }}" class="accordion-body in">
                    <div class="accordion-inner{{ no_buffer ? '-unbuffered' : '' }}">
                        {{ content|raw }}
                    </div>
                </div>
            </div>
        {% endfor %}
    </div>
{% endmacro %}

{% macro updated(formId) %}
{% spaceless %}
    <div id="entity-updated" class="pull-right">
        <span class="label label-warning">
            <i class="icon icon-circle"></i>
            {{ 'info.updated'|trans }}
        </span>
    </div>
    <script type="text/javascript">
        require(
            ['jquery', 'pim/formupdatelistener'],
            function ($, FormUpdateListener) {
                'use strict';
                $(function () {
                    new FormUpdateListener($('#{{ formId }}'));
                });
            }
        );
    </script>
{% endspaceless %}
{% endmacro %}

{% macro quickCreateOption(id, route) %}
{% spaceless %}
    {% set id = 'add-option-link-' ~ id %}
    <a id="{{ id }}" data-form-url="{{ route }}" class="btn btn-small icons-holder add-attribute-option" href="javascript:void(0);" data-toggle="tooltip" data-original-title="{{ 'Add an option'|trans }}" data-success-message="{{ 'flash.attribute.option created'|trans }}" data-error-message="{{ 'flash.attribute.error creating option'|trans }}">
        <i class="icon-plus"></i>
    </a>
{% endspaceless %}
{% endmacro %}

{% macro channelSwitcher(channels) %}
{% spaceless %}
    {% set id = 'channel-switcher' %}
    <div id="{{ id }}" class="btn-group">
        <a class="btn dropdown-toggle" href="javascript:void(0);" title="{{ 'Scope'|trans }}" data-toggle="dropdown">
            <i class="icon-eye-open"></i>
            <span>{{ 'Scope'|trans }}</span>
        </a>
        <ul class="dropdown-menu pull-right">
            {% for channel in channels %}
                <li><a href="javascript:void(0);" data-scope="{{ channel.code }}">{{ channel.label }}</a></li>
            {% endfor %}
        </ul>
        <a class="btn icons-holder" href="javascript:void(0);" title="{{ 'Expand all channels'|trans }}" data-action="expand" data-collapse-title="{{ 'Collapse all channels'|trans }}" data-expand-title="{{ 'Expand all channels'|trans }}">
            <i class="icon-caret-right"></i>
        </a>
    </div>
    <script type="text/javascript">
        require(
            ['jquery', 'oro/mediator'],
            function ($, mediator) {
                'use strict';
                $(function () {
                    var $channelSwitcher = $('#{{ id }}');
                    $channelSwitcher.find('.dropdown-menu').find('a[data-scope]').on('click', function() {
                        mediator.trigger('scopablefield:changescope', $(this).attr('data-scope'));
                    });
                    $channelSwitcher.find('>a[data-action]').on('click', function() {
                        var $el = $(this),
                            action = $el.attr('data-action');
                        mediator.trigger('scopablefield:' + action);
                        var newAction = action == 'collapse' ? 'expand' : 'collapse';
                        $el.attr('title', $el.attr('data-' + newAction + '-title')).attr('data-action', newAction);
                        $el.find('i').toggleClass('icon-caret-right icon-caret-down');
                    });
                });
            }
        );
    </script>
{% endspaceless %}
{% endmacro %}

{% macro enabledSwitch(form) %}
{% spaceless %}
    {% if form.enabled is defined %}
        {% set switchId = 'switch_status' %}
        {% set enableLabel = 'info.product.enable'|trans %}
        {% set disableLabel = 'info.product.disable'|trans %}
        {% set enabledLabel = 'info.product.enabled'|trans %}
        {% set disabledLabel = 'info.product.disabled'|trans %}
        {{ form_widget(form.enabled) }}
        <div class="btn-group">
            <button id="{{ switchId }}" type="button" class="btn">{{ form.enabled.vars.value ? disableLabel : enableLabel }}</button>
        </div>
        <script type="text/javascript">
            require(
                ['jquery'],
                function ($) {
                    'use strict';
                    $(function () {
                        $('#{{ switchId }}').on('click', function () {
                            var $field = $('#{{ form.enabled.vars.id }}'),
                                $status = $('.status-enabled').find('.badge');
                            if (+$field.val()) {
                                $field.val(0).trigger('change');
                                $(this).html('{{ enableLabel }}');
                                $status.html('<i class="icon-status-disabled icon-circle"></i>{{ disabledLabel }}').removeClass('badge-enabled status-enabled').addClass('badge-disabled status-disabled');
                            } else {
                                $field.val(1).trigger('change');
                                $(this).html('{{ disableLabel }}');
                                $status.html('<i class="icon-status-enabled icon-circle"></i>{{ enabledLabel }}').removeClass('badge-disabled status-disabled').addClass('badge-enabled status-enabled');
                            }
                        });
                    });
                }
            );
        </script>
    {% endif %}
{% endspaceless %}
{% endmacro %}

{% macro enabledLabel(form) %}
{% spaceless %}
    {% if form.enabled is defined %}
        <div class="status-enabled pull-left">
            {% if form.enabled.vars.value %}
                <div class="badge badge-enabled status-enabled"><i class="icon-status-enabled icon-circle"></i>{{ 'info.product.enabled'|trans }}</div>
            {% else %}
                <div class="badge badge-disabled status-disabled"><i class="icon-status-disabled icon-circle"></i>{{ 'info.product.disabled'|trans }}</div>
            {% endif %}
        </div>
    {% endif %}
{% endspaceless %}
{% endmacro %}

{% macro confirmLinkAttributes(url, redirectUrl, message, successMessage, title) %}{% spaceless %}
    {% set title = title|default('confirmation.confirm'|trans) %}
    href="javascript:void(0);" data-dialog="confirm" data-title="{{ title }}" data-message="{{ message }}" data-url="{{ url }}" data-redirect-url="#{{ redirectUrl }}" data-method="POST" data-error-message="{% trans %}The action could not be performed{% endtrans %}" data-success-message="{{ successMessage }}"
{% endspaceless %}{% endmacro %}

{% macro confirmLink(url, redirectUrl, successMessage, buttonLabel, buttonIcon, message, buttonClass, title) %}{% spaceless %}
    {% import _self as this %}
    {% set buttonLabel = 'btn.' ~ buttonLabel %}
    <a class="btn {{ buttonClass }} icons-holder-text no-hash" title="{{ buttonLabel|trans|capitalize }}" {{this.confirmLinkAttributes(url, redirectUrl, message, successMessage, title)}} >
        <i class="icon-{{ buttonIcon }}"></i>
        {{ buttonLabel|trans|capitalize }}
    </a>
{% endspaceless %}{% endmacro %}
