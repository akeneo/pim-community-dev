steps:
  - id: Install prerequisite for the PIM
    name: "europe-west1-docker.pkg.dev/akecld-prd-pim-saas-dev/pim-deployer/pim-deployer:1.0.0"
    dir: "deployments-ucs"
    entrypoint: 'sh'
    args:
    - '-c'
    - |
        # Set cluster authentication
        gcloud config set project ${PROJECT_ID}
        gcloud config set compute/zone ${_GOOGLE_COMPUTE_ZONE}
        gcloud container clusters get-credentials ${_CLUSTER_NAME} --project=${PROJECT_ID} --region=${_GOOGLE_CLUSTER_REGION}

        # Custom configuration
        ## Argocd
        yq -i '.configs.credentialTemplates.https-creds.username = "argocd"' k8s/argocd/values.yaml
        ARGOCD_TOKEN="$${ARGOCD_TOKEN}" yq -i '.configs.credentialTemplates.https-creds.password = env(ARGOCD_TOKEN)' k8s/argocd/values.yaml
        yq -i 'del(.server.ingress.tls)' k8s/argocd/values.yaml
        HOST="*.${_GOOGLE_DOMAIN}" yq -i e '.server.ingress.tls[0].hosts |= . + [env(HOST)] ' k8s/argocd/values.yaml
        yq -i 'del(.server.ingress.hosts)' k8s/argocd/values.yaml
        GOOGLE_DOMAIN="argocd.${_GOOGLE_DOMAIN}" yq -i e '.server.ingress.hosts |= . + [env(GOOGLE_DOMAIN)] ' k8s/argocd/values.yaml
        # Set target revision to current branch
        yq -i '.configs.additionalApplications[0].source.targetRevision = env(BRANCH_NAME)' k8s/argocd/values.yaml
        VALUES="values-${PROJECT_ID}" yq -i '.configs.additionalApplications[0].helm.valueFiles[0] = env(VALUES)' k8s/argocd/values.yaml
        VALUES="values-${PROJECT_ID}" yq -i '.spec.source.helm.valueFiles[0] = env(VALUES)' k8s/infra/infra-apps.yaml

        ## Datadog
        DATADOG_API_SECRET_NAME=datadog-api-secret
        kubectl create secret generic $DATADOG_API_SECRET_NAME --from-literal api-key="$DATADOG_API_KEY"

        # Use helm repo
        helm repo add traefik https://helm.traefik.io/traefik
        helm repo add argo https://argoproj.github.io/argo-helm
        helm repo update 2>&1

        # Install prerequisite
        ## ArgoCD
        helm upgrade --version 4.8.2 --debug --atomic --cleanup-on-fail --history-max 5 -i --wait --create-namespace -n argocd argocd argo/argo-cd -f k8s/argocd/values.yaml
        kubectl apply -f k8s/argocd/templates/argocd-cm.yaml

        ## Traefik
        rm -Rf "./traefik-chart"
        helm pull traefik/traefik --version v10.13.0 --untar --untardir "old/traefik/traefik-chart"
        kubectl apply -f "old/traefik/traefik-chart/traefik/crds"
        rm -Rf "old/traefik/traefik-chart"
        helm upgrade traefik-v2 traefik/traefik \
         --debug \
         --atomic \
         --cleanup-on-fail \
         --create-namespace \
         --wait \
         --timeout 10m \
         -i \
         --version=10.13.0 \
         -n=traefik-v2 \
         -f "old/traefik/static-configuration.yaml"

        

    secretEnv: ['ARGOCD_TOKEN', 'DATADOG_API_KEY']
options:
  logging: CLOUD_LOGGING_ONLY
availableSecrets:
  secretManager:
  - versionName: projects/${PROJECT_ID}/secrets/ARGOCD_TOKEN/versions/latest
    env: 'ARGOCD_TOKEN'
  - versionName: projects/${PROJECT_ID}/secrets/DATADOG_API_KEY/versions/latest
    env: 'DATADOG_API_KEY'
substitutions:
  _CLUSTER_NAME: akecld-prd-pim-saas-dev-europe-west1
  _GOOGLE_CLUSTER_REGION: europe-west1
  _GOOGLE_COMPUTE_ZONE: europe-west1-b
  _GOOGLE_DOMAIN: pim-saas-dev.dev.cloud.akeneo.com
