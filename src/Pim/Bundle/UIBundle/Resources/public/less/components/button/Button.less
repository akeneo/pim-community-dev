@import '../../base/variables';

.AknButton {
  @darken: 10%;
  @lighten: 20%;

  // Default button color is light gray
  background: @AknLightGray;
  color: @AknDefaultFontColor;
  height: @AknDefaultButtonSize;
  line-height: @AknDefaultButtonSize;
  font-size: @AknFontSizeBig;
  min-width: @AknDefaultButtonSize;
  display: inline-block;
  padding: 0 @AknDefaultButtonSize/2;
  border-radius: 100px;
  border: none;
  cursor: pointer;
  text-align: left;
  white-space: nowrap;
  transition:
    background 0.1s ease,
    color 0.1s ease,
    border-color 0.1s ease;
  position: relative;

  &:hover,
  &--active {
    background: darken(@AknLightGray, @darken);
    color: darken(@AknDefaultFontColor, @darken);
  }

  &-icon {
    display: none !important; // Used for preemption of .icon class
  }

  // Apply color
  &--apply {
    background-color: @AknGreen;
    color: white;
  }

  &--apply:hover,
  &--apply&--active {
    background: darken(@AknGreen, @darken);
    color: white;
  }

  &--apply&--disabled {
    background: lighten(@AknGreen, @lighten);
    cursor: not-allowed;
  }

  // Grey color
  &--grey {
    background-color: @AknGrey;
    color: white;
  }

  &--grey:hover,
  &--grey&--active {
    background: darken(@AknGrey, @darken);
    color: white;
  }

  &--grey&--disabled {
    background: lighten(@AknGrey, @lighten);
    cursor: not-allowed;
  }

  // GreyLight
  &--greyLight {
    background-color: white;
    border: 1px solid @AknGrey;
    color: @AknGrey;
  }

  &--greyLight:hover,
  &--greyLight&--active {
    background-color: white;
    border-color: darken(@AknGrey, 20%);
    color: darken(@AknGrey, 20%);
  }

  &--greyLight&--disabled {
    background-color: white;
    border-color: lighten(@AknGrey, 20%);
    color: lighten(@AknGrey, 20%);
    cursor: not-allowed;
  }

  // Important color
  &--important {
    background-color: @AknRed;
    color: white;
  }

  &--important:hover,
  &--important&--active {
    background: darken(@AknRed, @darken);
    color: white;
  }

  &--important&--disabled {
    background: lighten(@AknRed, @lighten);
    cursor: not-allowed;
  }

  // Action color
  &--action {
    background-color: @AknBlue;
    color: white;
  }

  &--action:hover,
  &--action&--active {
    background: darken(@AknBlue, @darken);
    color: white;
  }

  &--action&--disabled {
    background: lighten(@AknBlue, @lighten);
    cursor: not-allowed;
  }

  // Sizes
  &--big {
    height: @AknBigButtonSize;
    line-height: @AknBigButtonSize;
    min-width: @AknBigButtonSize;
    font-size: @AknFontSizeBig;
  }

  &--small {
    height: @AknLittleButtonSize;
    line-height: @AknLittleButtonSize;
    min-width: @AknLittleButtonSize;
    font-size: @AknDefaultFontSize;
  }

  &--micro {
    height: @AknMicroButtonSize;
    line-height: @AknMicroButtonSize;
    min-width: @AknMicroButtonSize;
    font-size: @AknDefaultFontSize;
  }

  &--noLeftRadius {
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
  }

  &--hidden {
    display: none;
  }

  &--uppercase {
    text-transform: uppercase;
  }

  &--disabled:focus {
    outline: -webkit-focus-ring-color auto 0;
  }
}
