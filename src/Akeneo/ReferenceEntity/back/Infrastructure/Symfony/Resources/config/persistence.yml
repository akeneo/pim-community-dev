services:
    # Repositories
    akeneo_referenceentity.infrastructure.persistence.repository.reference_entity:
        class: Akeneo\ReferenceEntity\Infrastructure\Persistence\Sql\ReferenceEntity\SqlReferenceEntityRepository
        arguments:
            - '@database_connection'

    akeneo_referenceentity.infrastructure.persistence.repository.attribute:
        class: Akeneo\ReferenceEntity\Infrastructure\Persistence\Sql\Attribute\SqlAttributeRepository
        arguments:
            - '@database_connection'
            - '@akeneo_referenceentity.infrastructure.persistence.attribute.hydrator.attribute_hydrator_registry'
            - '@event_dispatcher'

    akeneo_referenceentity.infrastructure.persistence.repository.record:
        class: Akeneo\ReferenceEntity\Infrastructure\Persistence\Sql\Record\SqlRecordRepository
        arguments:
            - '@database_connection'
            - '@akeneo_referenceentity.infrastructure.persistence.record.hydrator.record'
            - '@akeneo_referenceentity.infrastructure.persistence.query.find_value_key_collection'
            - '@akeneo_referenceentity.infrastructure.persistence.query.find_attributes_indexed_by_identifier'
            - '@event_dispatcher'

    akeneo_referenceentity.infrastructure.persistence.repository.reference_entity_permission:
        class: Akeneo\ReferenceEntity\Infrastructure\Persistence\Sql\ReferenceEntityPermission\SqlReferenceEntityPermissionRepository
        arguments:
            - '@database_connection'

    # Reference entities query functions
    akeneo_referenceentity.infrastructure.persistence.query.reference_entity_exists:
        class: Akeneo\ReferenceEntity\Infrastructure\Persistence\Sql\ReferenceEntity\SqlReferenceEntityExists
        arguments:
            - '@database_connection'

    akeneo_referenceentity.infrastructure.persistence.query.find_reference_entity_items:
        class: Akeneo\ReferenceEntity\Infrastructure\Persistence\Sql\ReferenceEntity\SqlFindReferenceEntityItems
        arguments:
            - '@database_connection'

    akeneo_referenceentity.infrastructure.persistence.query.find_reference_entity_details:
        class: Akeneo\ReferenceEntity\Infrastructure\Persistence\Sql\ReferenceEntity\SqlFindReferenceEntityDetails
        arguments:
            - '@database_connection'
            - '@akeneo_referenceentity.infrastructure.persistence.query.find_attributes_details'

    akeneo_referenceentity.infrastructure.persistence.query.find_record_items_for_identifiers_and_query:
        class: Akeneo\ReferenceEntity\Infrastructure\Persistence\Sql\Record\SqlFindRecordItemsForIdentifiersAndQuery
        arguments:
            - '@database_connection'
            - '@akeneo_referenceentity.infrastructure.persistence.query.find_required_value_key_collection_for_channel_and_locale'

    akeneo_referenceentity.infrastructure.persistence.query.reference_entity_has_records:
        class: Akeneo\ReferenceEntity\Infrastructure\Persistence\Sql\ReferenceEntity\SqlReferenceEntityHasRecords
        arguments:
            - '@database_connection'

    akeneo_referenceentity.infrastructure.persistence.query.reference_entity_is_linked_to_at_least_one_product_attribute:
        class: Akeneo\ReferenceEntity\Infrastructure\Persistence\Sql\ReferenceEntity\SqlReferenceEntityIsLinkedToAtLeastOneProductAttribute
        arguments:
            - '@database_connection'

    akeneo_referenceentity.infrastructure.persistence.query.reference_entity_is_linked_to_at_least_one_reference_entity_attribute:
        class: Akeneo\ReferenceEntity\Infrastructure\Persistence\Sql\ReferenceEntity\SqlReferenceEntityIsLinkedToAtLeastOneReferenceEntityAttribute
        arguments:
            - '@database_connection'

    # Record query functions
    akeneo_referenceentity.infrastructure.persistence.query.record_exists:
        class: Akeneo\ReferenceEntity\Infrastructure\Persistence\Sql\Record\SqlRecordExists
        arguments:
            - '@database_connection'

    akeneo_referenceentity.infrastructure.persistence.query.find_record_details:
        class: Akeneo\ReferenceEntity\Infrastructure\Persistence\Sql\Record\SqlFindRecordDetails
        arguments:
            - '@database_connection'
            - '@akeneo_referenceentity.infrastructure.persistence.record.hydrator.record_details'
            - '@akeneo_referenceentity.infrastructure.persistence.query.generate_empty_values'

    akeneo_referenceentity.infrastructure.persistence.query.find_existing_record_codes:
        class: Akeneo\ReferenceEntity\Infrastructure\Persistence\Sql\Record\SqlFindExistingRecordCodes
        arguments:
            - '@database_connection'

    akeneo_referenceentity.infrastructure.persistence.query.find_connector_record_by_reference_entity_and_code:
        class: Akeneo\ReferenceEntity\Infrastructure\Persistence\Sql\Record\SqlFindConnectorRecordByReferenceEntityAndCode
        arguments:
            - '@database_connection'
            - '@akeneo_referenceentity.infrastructure.persistence.record.hydrator.connector_record'
            - '@akeneo_referenceentity.infrastructure.persistence.query.find_value_key_collection'
            - '@akeneo_referenceentity.infrastructure.persistence.query.find_attributes_indexed_by_identifier'

    akeneo_referenceentity.infrastructure.persistence.query.find_connector_reference_entity_by_reference_entity_identifier:
        class: Akeneo\ReferenceEntity\Infrastructure\Persistence\Sql\ReferenceEntity\SqlFindConnectorReferenceEntityByReferenceEntityIdentifier
        arguments:
            - '@database_connection'
            - '@akeneo_referenceentity.infrastructure.persistence.reference_entity.hydrator.connector_reference_entity'

    akeneo_referenceentity.infrastructure.persistence.query.find_connector_reference_entity_items:
        class: Akeneo\ReferenceEntity\Infrastructure\Persistence\Sql\ReferenceEntity\SqlFindConnectorReferenceEntityItems
        arguments:
            - '@database_connection'
            - '@akeneo_referenceentity.infrastructure.persistence.reference_entity.hydrator.connector_reference_entity'

    akeneo_referenceentity.infrastructure.persistence.query.find_connector_reference_entity_attributes_by_reference_entity_identifier:
        class: Akeneo\ReferenceEntity\Infrastructure\Persistence\Sql\Attribute\SqlFindConnectorAttributesByReferenceEntityIdentifier
        arguments:
            - '@database_connection'
            - '@akeneo_referenceentity.infrastructure.persistence.attribute.hydrator.attribute_hydrator_registry'

    akeneo_referenceentity.infrastructure.persistence.query.find_connector_attribute_by_identifier_and_code:
        class: Akeneo\ReferenceEntity\Infrastructure\Persistence\Sql\Attribute\SqlFindConnectorAttributeByIdentifierAndCode
        arguments:
            - '@database_connection'
            - '@akeneo_referenceentity.infrastructure.persistence.attribute.hydrator.attribute_hydrator_registry'

    akeneo_referenceentity.infrastructure.persistence.query.find_connector_attribute_option:
        class: Akeneo\ReferenceEntity\Infrastructure\Persistence\Sql\Attribute\SqlFindConnectorAttributeOption
        arguments:
            - '@database_connection'
            - '@akeneo_referenceentity.infrastructure.persistence.attribute.hydrator.attribute_hydrator_registry'

    akeneo_referenceentity.infrastructure.persistence.query.find_connector_records_by_identifiers:
        class: Akeneo\ReferenceEntity\Infrastructure\Persistence\Sql\Record\SqlFindConnectorRecordsByIdentifiers
        arguments:
            - '@database_connection'
            - '@akeneo_referenceentity.infrastructure.persistence.record.hydrator.connector_record'
            - '@akeneo_referenceentity.infrastructure.persistence.query.find_value_key_collection'
            - '@akeneo_referenceentity.infrastructure.persistence.query.find_attributes_indexed_by_identifier'

    # Attributes query functions
    akeneo_referenceentity.infrastructure.persistence.query.attribute_exists:
        class: Akeneo\ReferenceEntity\Infrastructure\Persistence\Sql\Attribute\SqlAttributeExists
        arguments:
            - '@database_connection'

    akeneo_referenceentity.infrastructure.persistence.query.find_attribute_next_order:
        class: Akeneo\ReferenceEntity\Infrastructure\Persistence\Sql\Attribute\SqlFindAttributeNextOrder
        arguments:
            - '@database_connection'

    akeneo_referenceentity.infrastructure.persistence.query.find_attributes_details:
        class: Akeneo\ReferenceEntity\Infrastructure\Persistence\Sql\Attribute\SqlFindAttributesDetails
        arguments:
            - '@database_connection'

    akeneo_referenceentity.infrastructure.persistence.query.find_attributes_indexed_by_identifier:
        class: Akeneo\ReferenceEntity\Infrastructure\Persistence\Sql\Attribute\SqlFindAttributesIndexedByIdentifier
        arguments:
            - '@database_connection'
            - '@akeneo_referenceentity.infrastructure.persistence.attribute.hydrator.attribute_hydrator_registry'

    akeneo_referenceentity.infrastructure.persistence.query.find_value_key_collection:
        class: Akeneo\ReferenceEntity\Infrastructure\Persistence\Sql\Attribute\SqlFindValueKeyCollection
        arguments:
            - '@database_connection'

    akeneo_referenceentity.infrastructure.persistence.query.find_required_value_key_collection_for_channel_and_locale:
        class: Akeneo\ReferenceEntity\Infrastructure\Persistence\Sql\Attribute\SqlFindRequiredValueKeyCollectionForChannelAndLocale
        arguments:
            - '@database_connection'

    akeneo_referenceentity.infrastructure.persistence.query.generate_empty_values:
        class: Akeneo\ReferenceEntity\Infrastructure\Persistence\Sql\Attribute\SqlGenerateEmptyValues
        arguments:
            - '@database_connection'
            - '@akeneo_referenceentity.infrastructure.persistence.attribute.hydrator.attribute_hydrator_registry'

    akeneo_referenceentity.infrastructure.persistence.query.find_image_attribute_codes:
        class: Akeneo\ReferenceEntity\Infrastructure\Persistence\Sql\Attribute\SqlFindImageAttributeCodes
        arguments:
             - '@database_connection'

    # attribute hydrators
    akeneo_referenceentity.infrastructure.persistence.attribute.hydrator.attribute_hydrator_registry:
        class: Akeneo\ReferenceEntity\Infrastructure\Persistence\Sql\Attribute\Hydrator\AttributeHydratorRegistry

    akeneo_referenceentity.infrastructure.persistence.hydrator.attribute.text_attribute_hydrator:
        class: Akeneo\ReferenceEntity\Infrastructure\Persistence\Sql\Attribute\Hydrator\TextAttributeHydrator
        arguments:
            - '@database_connection'
        tags:
            - { name: akeneo_referenceentity.attribute_hydrator }

    akeneo_referenceentity.infrastructure.persistence.hydrator.attribute.image_attribute_hydrator:
        class: Akeneo\ReferenceEntity\Infrastructure\Persistence\Sql\Attribute\Hydrator\ImageAttributeHydrator
        arguments:
            - '@database_connection'
        tags:
            - { name: akeneo_referenceentity.attribute_hydrator }

    akeneo_referenceentity.infrastructure.persistence.hydrator.attribute.record_attribute_hydrator:
        class: Akeneo\ReferenceEntity\Infrastructure\Persistence\Sql\Attribute\Hydrator\RecordAttributeHydrator
        arguments:
            - '@database_connection'
        tags:
            - { name: akeneo_referenceentity.attribute_hydrator }

    akeneo_referenceentity.infrastructure.persistence.hydrator.attribute.record_collection_attribute_hydrator:
        class: Akeneo\ReferenceEntity\Infrastructure\Persistence\Sql\Attribute\Hydrator\RecordCollectionAttributeHydrator
        arguments:
            - '@database_connection'
        tags:
            - { name: akeneo_referenceentity.attribute_hydrator }

    akeneo_referenceentity.infrastructure.persistence.hydrator.attribute.option_attribute_hydrator:
        class: Akeneo\ReferenceEntity\Infrastructure\Persistence\Sql\Attribute\Hydrator\OptionAttributeHydrator
        arguments:
            - '@database_connection'
        tags:
            - { name: akeneo_referenceentity.attribute_hydrator }

    akeneo_referenceentity.infrastructure.persistence.hydrator.attribute.option_collection_attribute_hydrator:
        class: Akeneo\ReferenceEntity\Infrastructure\Persistence\Sql\Attribute\Hydrator\OptionCollectionAttributeHydrator
        arguments:
            - '@database_connection'
        tags:
            - { name: akeneo_referenceentity.attribute_hydrator }

    # Record value hydrators
    akeneo_referenceentity.infrastructure.persistence.record.hydrator.data_hydrator_registry:
        class: Akeneo\ReferenceEntity\Infrastructure\Persistence\Sql\Record\Hydrator\DataHydratorRegistry

    akeneo_referenceentity.infrastructure.persistence.record.hydrator.record:
        class: Akeneo\ReferenceEntity\Infrastructure\Persistence\Sql\Record\Hydrator\RecordHydrator
        arguments:
            - '@database_connection'
            - '@akeneo_referenceentity.infrastructure.persistence.record.hydrator.value'

    akeneo_referenceentity.infrastructure.persistence.record.hydrator.record_details:
        class: Akeneo\ReferenceEntity\Infrastructure\Persistence\Sql\Record\Hydrator\RecordDetailsHydrator
        arguments:
            - '@database_connection'

    akeneo_referenceentity.infrastructure.persistence.record.hydrator.connector_record:
        class: Akeneo\ReferenceEntity\Infrastructure\Persistence\Sql\Record\Hydrator\ConnectorRecordHydrator
        arguments:
            - '@database_connection'
            - '@akeneo_referenceentity.infrastructure.persistence.record.transformer.connector_value_registry'

    akeneo_referenceentity.infrastructure.persistence.reference_entity.hydrator.connector_reference_entity:
        class: Akeneo\ReferenceEntity\Infrastructure\Persistence\Sql\ReferenceEntity\Hydrator\ConnectorReferenceEntityHydrator
        arguments:
            - '@database_connection'

    akeneo_referenceentity.infrastructure.persistence.record.hydrator.value:
        class: Akeneo\ReferenceEntity\Infrastructure\Persistence\Sql\Record\Hydrator\ValueHydrator
        arguments:
            - '@database_connection'
            - '@akeneo_referenceentity.infrastructure.persistence.record.hydrator.data_hydrator_registry'

    akeneo_referenceentity.infrastructure.persistence.record.hydrator.text_data:
        class: Akeneo\ReferenceEntity\Infrastructure\Persistence\Sql\Record\Hydrator\TextDataHydrator
        tags:
            - { name: akeneo_referenceentity.data_hydrator }

    akeneo_referenceentity.infrastructure.persistence.record.hydrator.file_data:
        class: Akeneo\ReferenceEntity\Infrastructure\Persistence\Sql\Record\Hydrator\FileDataHydrator
        tags:
            - { name: akeneo_referenceentity.data_hydrator }

    akeneo_referenceentity.infrastructure.persistence.record.hydrator.record_data:
        class: Akeneo\ReferenceEntity\Infrastructure\Persistence\Sql\Record\Hydrator\RecordDataHydrator
        tags:
            - { name: akeneo_referenceentity.data_hydrator }

    akeneo_referenceentity.infrastructure.persistence.record.hydrator.record_collection_data:
        class: Akeneo\ReferenceEntity\Infrastructure\Persistence\Sql\Record\Hydrator\RecordCollectionDataHydrator
        tags:
            - { name: akeneo_referenceentity.data_hydrator }

    akeneo_referenceentity.infrastructure.persistence.record.hydrator.option_data:
        class: Akeneo\ReferenceEntity\Infrastructure\Persistence\Sql\Record\Hydrator\OptionDataHydrator
        tags:
            - { name: akeneo_referenceentity.data_hydrator }

    akeneo_referenceentity.infrastructure.persistence.record.hydrator.option_collection_data:
        class: Akeneo\ReferenceEntity\Infrastructure\Persistence\Sql\Record\Hydrator\OptionCollectionDataHydrator
        tags:
            - { name: akeneo_referenceentity.data_hydrator }

    # Record value transformers
    akeneo_referenceentity.infrastructure.persistence.record.transformer.connector_value_registry:
        class: Akeneo\ReferenceEntity\Infrastructure\Persistence\Sql\Record\Hydrator\Transformer\ConnectorValueTransformerRegistry
        arguments:
            - !tagged akeneo_referenceentity.connector_value_transformer

    akeneo_referenceentity.infrastructure.persistence.record.transformer.text_connector_value:
        class: Akeneo\ReferenceEntity\Infrastructure\Persistence\Sql\Record\Hydrator\Transformer\TextConnectorValueTransformer
        tags:
            - { name: akeneo_referenceentity.connector_value_transformer }

    akeneo_referenceentity.infrastructure.persistence.record.transformer.image_connector_value:
        class: Akeneo\ReferenceEntity\Infrastructure\Persistence\Sql\Record\Hydrator\Transformer\ImageConnectorValueTransformer
        tags:
            - { name: akeneo_referenceentity.connector_value_transformer }

    akeneo_referenceentity.infrastructure.persistence.record.transformer.record_connector_value:
        class: Akeneo\ReferenceEntity\Infrastructure\Persistence\Sql\Record\Hydrator\Transformer\RecordConnectorValueTransformer
        arguments:
            - '@akeneo_referenceentity.infrastructure.persistence.query.record_exists'
        tags:
            - { name: akeneo_referenceentity.connector_value_transformer }

    akeneo_referenceentity.infrastructure.persistence.record.transformer.record_collection_connector_value:
        class: Akeneo\ReferenceEntity\Infrastructure\Persistence\Sql\Record\Hydrator\Transformer\RecordCollectionConnectorValueTransformer
        arguments:
            - '@akeneo_referenceentity.infrastructure.persistence.query.find_existing_record_codes'
        tags:
            - { name: akeneo_referenceentity.connector_value_transformer }

    akeneo_referenceentity.infrastructure.persistence.record.transformer.option_connector_value:
        class: Akeneo\ReferenceEntity\Infrastructure\Persistence\Sql\Record\Hydrator\Transformer\OptionConnectorValueTransformer
        tags:
            - { name: akeneo_referenceentity.connector_value_transformer }

    akeneo_referenceentity.infrastructure.persistence.record.transformer.option_collection_connector_value:
        class: Akeneo\ReferenceEntity\Infrastructure\Persistence\Sql\Record\Hydrator\Transformer\OptionCollectionConnectorValueTransformer
        tags:
            - { name: akeneo_referenceentity.connector_value_transformer }

    # Structure query functions
    akeneo_referenceentity.infrastructure.persistence.query.channel_exists:
        class: Akeneo\ReferenceEntity\Infrastructure\Persistence\Sql\Channel\SqlChannelExists
        arguments:
            - '@database_connection'

    akeneo_referenceentity.infrastructure.persistence.cache.query.channel_exists:
        class: Akeneo\ReferenceEntity\Infrastructure\Persistence\Cache\Channel\CacheChannelExists
        arguments:
            - '@akeneo_referenceentity.infrastructure.persistence.query.channel_exists'

    akeneo_referenceentity.infrastructure.persistence.query.find_activated_locales_by_identifiers:
        class: Akeneo\ReferenceEntity\Infrastructure\Persistence\Sql\Locale\SqlFindActivatedLocalesByIdentifiers
        arguments:
            - '@database_connection'

    akeneo.referencentity.infrastructure.persistence.cache.query.find_activated_locales_per_channels:
        class: Akeneo\ReferenceEntity\Infrastructure\Persistence\Cache\Channel\CacheFindActivatedLocalesPerChannels
        arguments:
            - '@akeneo_referenceentity.infrastructure.search.elasticsearch.record.query.find_activated_locales_per_channels'

    akeneo.referencentity.infrastructure.persistence.cache.query.find_activated_locales_by_identifiers:
        class: Akeneo\ReferenceEntity\Infrastructure\Persistence\Cache\Locale\CacheFindActivatedLocalesByIdentifiers
        arguments:
            - '@akeneo_referenceentity.infrastructure.persistence.query.find_activated_locales_by_identifiers'

    akeneo.referencentity.infrastructure.persistence.permission.query.can_edit_reference_entity:
        class: Akeneo\ReferenceEntity\Infrastructure\Persistence\Sql\ReferenceEntity\SqlCanEditReferenceEntity
        arguments:
            - '@database_connection'
