version: 2
jobs:
  build_dev:
    machine:
      image: ubuntu-1604:201903-01
    steps:
      - checkout
      - run:
          name: Copy docker-compose.override.yml.dist
          command: cp .circleci/docker-compose.override.yml.dist docker-compose.override.yml
      - run:
            name: Pull and build the latest Docker images
            command: |
                make php-image-dev
                docker save -o php-pim-image.tar akeneo/pim-dev/php:7.3
      - run:
          name: Setup tests results folder and log folder
          command: mkdir -p var/tests/phpunit var/tests/behat var/tests/phpspec var/tests/csfixer var/logs var/tests/screenshots ~/.cache/yarn ~/.composer .nyc_output .coverage
      - run:
          name: Change owner on project dir (default user = circleci (1001) and docker needs uid 1000)
          command: sudo chown -R 1000:1000 ../project
      - restore_cache:
          name: Restore cache - node_modules
          keys:
            - node-modules-{{ .Environment.CACHE_VERSION }}-{{ checksum "yarn.lock" }}
      - restore_cache:
          name: Restore cache - vendor
          keys:
            - vendor-{{ .Environment.CACHE_VERSION }}-{{ checksum "composer.lock" }}
      - run:
          name: Change owner on project dir after restoring cache
          command: |
              sudo chown -R 1000:1000 ../project
              sudo chown -R 1000:1000 ~/.composer
              sudo chown -R 1000:1000 ~/.cache/yarn
      - run:
            name: Install back dependencies
            command: make vendor
      - run:
            name: Install front dependencies
            command: make node_modules
      - run:
            name: Check PIM requirements
            command: |
                C='mysql elasticsearch' make up
                .circleci/wait_docker_up.sh
                make check-requirements
      - run:
            name: Install asset
            command: make assets
      - run:
            name: Build CSS
            command: make css
      - run:
            name: Build Javascript
            command: |
                make javascript-test
                make javascript-dev
      - run:
            name: Change owner on project dir after install
            command: sudo chmod -R 777 ../project
      - save_cache:
          paths:
            - ./node_modules
          key: node-modules-{{ .Environment.CACHE_VERSION }}-{{ checksum "yarn.lock" }}
      - save_cache:
          paths:
            - ./vendor
          key: vendor-{{ .Environment.CACHE_VERSION }}-{{ checksum "composer.lock" }}
      - persist_to_workspace:
          root: ~/
          paths:
            - project

  back_static_and_acceptance:
      machine:
          image: ubuntu-1604:201903-01
      steps:
          - attach_workspace:
                at: ~/
          - run:
                name: Change owner on project dir (default user = circleci (1001) and docker needs uid 1000)
                command: sudo chown -R 1000:1000 ../project
          - run:
                name: Load archived docker image
                command: docker load -i php-pim-image.tar
          - run:
                name: Generate dev cache for Symfony's Phpstan extension
                command: APP_ENV=dev make cache
          - run:
                name: PhpSpec
                command: docker-compose run -u www-data --rm -T php vendor/bin/phpspec run --format=junit > var/tests/phpspec/specs.xml
          - run:
                name: Find non executed PhpSpec files
                command: ./.circleci/find_non_executed_phpspec.sh
          - run:
                name: PhpCsFixer
                command: docker-compose run --rm -T php vendor/bin/php-cs-fixer fix --diff --dry-run --config=.php_cs.php
                when: always
          - run:
                name: PhpCoupling Detector
                command: make coupling
                when: always
          - run:
                name: PHPStan
                command: docker-compose run --rm -T php vendor/bin/phpstan analyse src/Akeneo/Pim -l 1
                when: always
          - run:
                name: Check Pullup
                command: docker-compose run --rm -T php bin/check-pullup
                when: always
          - run:
                name: Acceptance back
                command: docker-compose run --rm -T php vendor/bin/behat --strict -p acceptance -vv
                when: always
          - store_test_results:
                path: var/tests
          - store_artifacts:
                path: var/tests
          - store_artifacts:
                path: var/logs

  back_phpunit:
      machine:
          image: ubuntu-1604:201903-01
      parallelism: 10
      steps:
          - attach_workspace:
                at: ~/
          - run:
                name: Change owner on project dir in order to archive the project into the workspace
                command: sudo chown -R 1000:1000 ../project
          - run:
                name: Start containers
                command: |
                    docker load -i php-pim-image.tar
                    APP_ENV=test C='fpm mysql elasticsearch object-storage' make up
                    .circleci/wait_docker_up.sh
          - run:
                name: Install database
                command: APP_ENV=test make database
          - run:
                name: PHPunit Integration
                command: |
                    TESTFILES=$(docker-compose run --rm -T php php .circleci/find_phpunit.php --testsuite PIM_Integration_Test | circleci tests split --split-by=timings)
                    .circleci/run_phpunit.sh . $TESTFILES
          - run:
                name: PHPunit End to end
                command: |
                    TESTFILES=$(docker-compose run --rm -T php php .circleci/find_phpunit.php --testsuite End_to_End | circleci tests split --split-by=timings)
                    .circleci/run_phpunit.sh . $TESTFILES
          - store_test_results:
                path: var/tests/phpunit
          - store_artifacts:
                path: var/tests/phpunit
          - store_artifacts:
                path: var/logs

  back_behat_legacy:
    machine:
      image: ubuntu-1604:201903-01
    parallelism: 20
    steps:
      - attach_workspace:
          at: ~/
      - run:
            name: Get Behat Suite name to run
            command: |
                TESTSUITE=$(echo $CIRCLE_BRANCH | sed -e 's/^.*-\([^-]*\)$/\1/g')
                if ! [[ $TESTSUITE =~ ^(weasel|chipmunk|raccoon)$ ]] ; then
                  TESTSUITE="all"
                fi
                echo "Behat Suite to run: "$TESTSUITE
                echo "export TESTSUITE=$TESTSUITE" >> $BASH_ENV
      - run:
            name: Change owner on project dir in order to archive the project into the workspace
            command: sudo chown -R 1000:1000 ../project
      - run:
            name: Start containers
            command: |
                docker load -i php-pim-image.tar
                APP_ENV=behat C='fpm mysql elasticsearch httpd object-storage selenium' make up
                .circleci/wait_docker_up.sh
      - run:
            name: Install database
            command: APP_ENV=behat make database
    #   - run:
    #         name: Non critical Behat
    #         command: |
    #             TESTFILES=$(docker-compose run --rm -T php vendor/bin/behat --list-scenarios -p legacy -s $TESTSUITE | circleci tests split --split-by=timings)
    #             .circleci/run_behat.sh $TESTSUITE $TESTFILES
      - run:
            name: Critical Behat
            command: |
                TESTFILES=$(docker-compose run --rm -T php vendor/bin/behat --list-scenarios -p legacy -s critical | circleci tests split --split-by=timings)
                .circleci/run_behat.sh critical $TESTFILES
      - run:
          name: Gather Junit test result files in the same directory to improve the render of failing tests
          command: |
              set -e
              cd var/tests/behat
              sudo chmod -R 777 .
              for subdir in */*; do mv "${subdir}" "${subdir/\//_}"; done
          when: always
      - store_test_results:
          path: var/tests/behat
      - store_artifacts:
          path: var/tests/behat
      - store_artifacts:
          path: var/tests/screenshots
      - store_artifacts:
          path: var/logs
      - persist_to_workspace:
          root: ~/
          paths:
            - project/.coverage

  collect_js_coverage:
    machine:
        enabled: true
        docker_layer_caching: true
    steps:
      - attach_workspace:
          at: ~/
      - add_ssh_keys:
          fingerprints:
            - "3b:a2:61:e2:63:33:69:5e:29:9b:c4:92:e9:77:71:c5"
      - run:
          name: Change owner on project dir in order to archive the project into the workspace
          command: sudo chown -R 1000:1000 ../project
      - run:
          name: Pull the latest Docker images
          command: docker-compose pull
      - run:
          name: Merge JS code coverage reports and output HTML
          command: |
              docker-compose run --rm node yarn run instrument-merge
              docker-compose run --rm node yarn run instrument-report
      - run:
          name: Compress HTML coverage report
          command: tar -cvf coverage.tar ./coverage/
      - run:
          name: Deploy coverage report
          command: scp akeneo@coverage.core.akeneo.com:coverage /var/www/html/frontend
      - store_artifacts:
          path: coverage.tar
          destination: coverage_report
      - store_artifacts:
          path: .nyc_output

  front_static_acceptance_and_integration:
      machine:
          image: ubuntu-1604:201903-01
      steps:
        - attach_workspace:
            at: ~/
        - run:
            name: Change owner on project dir (default user = circleci (1001) and docker needs uid 1000)
            command: sudo chown -R 1000:1000 ../project
        - run:
            name: Front linter
            command: docker-compose run --rm node yarn run lint
        - run:
            name: Front unit tests
            command: docker-compose run --rm node yarn run unit
            when: always
        - run:
            name: Front acceptance tests
            command: MAX_RANDOM_LATENCY_MS=100 docker-compose run --rm node yarn run acceptance ./tests/features
            when: always
        - run:
            name: Front integration tests
            command: docker-compose run --rm node yarn run integration
            when: always

workflows:
  version: 2
  pull_request:
      jobs:
          - wait_for_user_approval:
                type: approval
                filters:
                    branches:
                        ignore:
                            - master
          - build_dev:
                requires:
                    - wait_for_user_approval
        #   - back_static_and_acceptance:
        #         requires:
        #             - build_dev
        #   - front_static_acceptance_and_integration:
        #         requires:
        #             - build_dev
        #   - back_phpunit:
        #         requires:
        #             - back_static_and_acceptance
        #             - front_static_acceptance_and_integration
          - back_behat_legacy:
                requires:
                    - build_dev
          - collect_js_coverage:
                requires:
                    - back_behat_legacy

  nightly:
      triggers:
          - schedule:
                cron: "0 2 * * *"
                filters:
                    branches:
                        only:
                            - master
      jobs:
          - build_dev
          - back_static_and_acceptance:
                requires:
                    - build_dev
          - front_static_acceptance_and_integration:
                requires:
                    - build_dev
          - back_phpunit:
                requires:
                    - back_static_and_acceptance
                    - front_static_acceptance_and_integration
          - back_behat_legacy:
                requires:
                    - back_phpunit
