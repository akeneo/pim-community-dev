{% extends 'OroNavigationBundle:Menu:menu.html.twig' %}

{% macro get_options(attributes, data) %}
    {%- set options = {} %}
    {%- for attribute in attributes %}
        {%- if data[attribute] is defined %}
            {%- set options = options|merge({(attribute): data[attribute]}) %}
        {%- endif %}
    {%- endfor %}
    {%- if options %}
        {{- options|json_encode|raw -}}
    {% endif %}
{% endmacro %}

{% block list %}
    <ul class="extra-list"></ul>
    {% if item.hasChildren and options.depth is not sameas(0) and item.displayChildren %}
        {% set pinbarItems = [] %}
        {% for pinbarItem in item.children %}
            {% if pinbarItem.extras.isAllowed %}
                {% set pinbarItems = pinbarItems|merge([{'id': pinbarItem.extras.id, 'title': pinbarItem.label|raw, 'title_rendered': oro_title_render(pinbarItem.label|raw), 'title_rendered_short': oro_title_render_short(pinbarItem.label|raw), 'url': pinbarItem.uri, 'type': pinbarItem.extras.type}]) %}
            {% endif %}
        {% endfor %}
    {% endif %}
    {% import _self as pinbar %}
    <script type="text/javascript">
        require(['jquery', 'oro/navigation/pinbar/view', 'oro/navigation'], function ($, PinbarView, Navigation) {
            $(function () {
                /** @type {oro.navigation.pinbar.View} */
                var pinbarView = new PinbarView({{- pinbar.get_options(['maxPinbarItems', 'el', 'listBar', 'tabTitle', 'tabIcon', 'minimizeButton', 'closeButton', 'defaultUrl'], options) -}});
                Navigation.registerPinbarView(pinbarView);

                {% if pinbarItems is defined %}
                pinbarView.resetCollection({{ pinbarItems|json_encode|raw }});
                {% endif %}
            });
        });
    </script>
{% endblock %}
