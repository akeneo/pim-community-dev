{% extends 'PimEnrichBundle:MassEditAction:configure/layout.html.twig' %}

{% block formTitle %}
    <div class="pull-left">
        {{ form_widget(form.operation.locale) }}
    </div>
    <div class="pull-left buffer-small-left">
        {{ form_widget(form.operation.displayedAttributes) }}
    </div>
{% endblock %}

{% block formContent %}
    {% for groupView in form.operation.vars.groups %}

        <div class="group-container hide">
            <h4>{{ groupView.label }}</h4>

            {% for attributeView in groupView.attributes %}
                <div class="attribute-field hide {{ attributeView.classes|default([])|keys|join(' ') }}" data-attribute-id="{{ attributeView.id }}">
                    {% if attributeView.values is defined %}
                        {% for scope, subvalue in attributeView.values %}
                            <div class="control-group" data-field="{{ attributeView.code }}">
                                {{ form_widget(subvalue, {'attr': {'data-scope': scope, 'data-color': channel_color(scope), 'data-font-color': channel_font_color(scope)}}) }}
                            </div>
                        {% endfor %}
                    {% else %}
                        <div class="control-group" data-field="{{ attributeView.code }}">
                            {{ form_widget(attributeView.value) }}
                        </div>
                    {% endif %}
                    <i class="icon-remove remove-attribute" data-id="{{ attributeView.id }}" data-toggle="tooltip" data-placement="right" data-original-title="{{ 'Remove this attribute'|trans }}"></i>
                </div>
            {% endfor %}

            {% if not loop.last %}
                <hr />
            {% endif %}
        </div>

    {% else %}

        {{ 'pim_enrich.mass_edit_action.edit-common-attributes.empty'|trans }}

    {% endfor %}

{% endblock %}

{% block head_script_component %}
    {{ parent() }}
    <script type="text/javascript">
        require(
            ['jquery', 'underscore', 'pim/scopable', 'pim/currencyfield', 'datepicker', 'oro/mediator', 'jquery.multiselect', 'jquery.multiselect.filter'],
            function ($, _, Scopable, CurrencyField, datepicker, mediator) {
                'use strict';
                $(function () {
                    {% if form.operation.vars.groups is empty %}
                        $('a.next').hide();
                    {% endif %}

                    _.each($('form div.scopable:not(.currency)'), function (field) {
                        new Scopable({ el: $(field) });
                        {# TODO: inject the scope here too
                        new Scopable({ el: $(field), initialScope: '{{ dataScope }}' });
                        #}
                    });

                    _.each($('form div.currency'), function (field) {
                        new CurrencyField({ el: $(field) });
                    });

                    _.each($('form input.datepicker:not(.hasPicker)'), function (field) {
                        datepicker.init(field.getAttribute('id'));
                    });

                    mediator.trigger('pim:reinit');

                    /**
                     * Add attributes widget
                     */
                    var opts = {
                        title: '{{ "Select attributes"|trans }}',
                        placeholder: '{{ "Search"|trans }}',
                        header: '',
                        height: 175,
                        minWidth: 50,
                        classes: 'pimmultiselect',
                        position: {
                            my: 'right top',
                            at: 'right bottom',
                            collision: 'none'
                        }
                    };
                    opts.selectedText = opts.title;
                    opts.noneSelectedText = opts.title;
                    var $el = $('#{{ form.operation.displayedAttributes.vars.id }}')
                        .addClass('pimmultiselect')
                        .multiselect(opts)
                        .multiselectfilter({
                            label: false,
                            placeholder: opts.placeholder
                        });

                    var $menu = $('.ui-multiselect-menu.pimmultiselect').appendTo('#container');
                    var saveButton = '{{ "Select"|trans }}';

                    var footerContainer = $('<div>').addClass('ui-multiselect-footer').appendTo($menu);
                    var $saveButton = $('<a>').addClass('btn btn-small').html(saveButton).on('click', function () {
                        $el.multiselect('close');
                        var checked = _.map($el.multiselect('getChecked'), function(el) {
                            return +el.value;
                        });
                        $('div.attribute-field').each(function() {
                            var $field = $(this);
                            if (_.contains(checked, $field.data('attribute-id'))) {
                                $field.removeClass('hide');
                                $field.find('input, select, textarea').prop('disabled', false);
                            } else {
                                $field.addClass('hide');
                                $field.find('input, select, textarea').prop('disabled', true);
                            }
                        });
                        $('div.group-container').each(function() {
                            if ($(this).find('div.attribute-field:not(.hide)').length) {
                                $(this).removeClass('hide');
                            } else {
                                $(this).addClass('hide');
                            }
                        });
                    }).appendTo(footerContainer);

                    var $openButton = $('button.pimmultiselect').addClass('btn btn-group');
                    $openButton.append($('<span>', { 'class': 'caret' })).removeAttr('style');

                    $menu.find('input[type="search"]').width(207);

                    // Click the save button to show selected fields in case of errors
                    $saveButton.click();

                    /**
                     * Manage removal of attributes from the form
                     */
                    $('.remove-attribute').on('click', function () {
                        $el.multiselect('widget').find('input[value="' + $(this).attr('data-id') + '"]').click();
                        $saveButton.click();
                    });
                });
            }
        );
    </script>
{% endblock %}
