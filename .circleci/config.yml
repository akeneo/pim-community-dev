version: 2
jobs:
  build:
    machine:
      enabled: true
      docker_layer_caching: true
    steps:
      - checkout
      - run:
          name: Copy env file
          command: |
            cp .env.dist .env
            cp behat.yml.dist behat.yml
      - run:
          name: Setup tests results folder and log folder
          command: mkdir -p var/tests/phpunit var/tests/behat var/tests/phpspec var/tests/csfixer var/logs
      - run:
          name: Setup the parameters.yml files
          command: ./bin/docker/pim-setup.sh
      - run:
          name: Change owner on project dir (default user = circleci (1001) and docker needs uid 1000)
          command: sudo chown -R 1000:1000 ../project
      - run:
          name: Start containers
          command: docker-compose up -d
      - restore_cache:
          name: Restore cache - node_modules
          keys:
            - node-modules-v4-{{ checksum "yarn.lock" }}
      - restore_cache:
          name: Restore cache - vendor
          keys:
            - vendor-v4-{{ checksum "composer.lock" }}
      - run:
          name: Change owner on project dir after restoring cache
          command: sudo chown -R 1000:1000 ../project
      - run:
          name: Install dependencies
          command: ./bin/docker/pim-dependencies.sh
      - run:
          name: Pim installation
          command: |
              docker-compose exec fpm bin/console --env=behat pim:install --force --symlink --clean
              docker-compose run --rm node yarn run webpack-dev
              docker-compose run --rm node yarn run webpack-test
      - save_cache:
          paths:
            - ./node_modules
          key: node-modules-v4-{{ checksum "yarn.lock" }}
      - save_cache:
          paths:
            - ./vendor
          key: vendor-v4-{{ checksum "composer.lock" }}
      - persist_to_workspace:
          root: ~/
          paths:
            - project

  test_static_back:
      machine:
          enabled: true
          docker_layer_caching: true
      steps:
          - attach_workspace:
                at: ~/
          - run:
                name: Change owner on project dir (default user = circleci (1001) and docker needs uid 1000)
                command: sudo chown -R 1000:1000 ../project
          - run:
                name: Start containers
                command:
                    docker-compose up -d fpm
          - run:
                name: PhpSpec
                command:
                    docker-compose exec -T fpm vendor/bin/phpspec run --format=junit > var/tests/phpspec/specs.xml
          - run:
                name: PhpCsFixer
                command: docker-compose exec -T fpm vendor/bin/php-cs-fixer fix --diff --dry-run --config=.php_cs.php
          - run:
                name: PhpCoupling Detector
                command: |
                    docker-compose exec -T fpm vendor/bin/php-coupling-detector detect --config-file=.php_cd.php src
                    docker-compose exec -T fpm vendor/bin/php-coupling-detector detect --config-file=src/Akeneo/Pim/Structure/.php_cd.php src/Akeneo/Pim/Structure
                    docker-compose exec -T fpm vendor/bin/php-coupling-detector detect --config-file=src/Akeneo/UserManagement/.php_cd.php src/Akeneo/UserManagement
                    docker-compose exec -T fpm vendor/bin/php-coupling-detector detect --config-file=src/Akeneo/Channel/.php_cd.php src/Akeneo/Channel
          - run:
                name: PHPStan
                command: docker-compose exec -T fpm vendor/bin/phpstan analyse src/Akeneo/Pim -l 0
          - run:
                name: Check Pullup
                command: docker-compose exec -T fpm bin/check-pullup
          - store_test_results:
                path: var/tests
          - store_artifacts:
                path: var/tests

  test_phpunit_integration:
      machine:
          enabled: true
      parallelism: 7
      steps:
          - attach_workspace:
                at: ~/
          - run:
                name: Change permissions on project dir in order to archive the project into the workspace
                command: sudo chmod 777 ../project -R
          - run:
                name: Start containers
                command: |
                    docker-compose up -d
                    sleep 25 # wait mysql to be up
                    docker-compose exec fpm bin/console --env=behat pim:install:db
          - run:
                name: PHPunit Integration
                command: |
                    TESTFILES=$(cat .circleci/phpunit.txt | circleci tests split)
                    .circleci/run_phpunit.sh $TESTFILES
          - store_test_results:
                path: var/tests/phpunit
          - store_artifacts:
                path: var/tests/phpunit

  test_legacy_behat:
    machine:
      enabled: true
    parallelism: 7
    steps:
      - attach_workspace:
          at: ~/
      - run:
            name: Change permissions on project dir in order to archive the project into the workspace
            command: sudo chmod 777 ../project -R
      - run:
          name: Start containers
          command: |
            docker-compose up -d
            sleep 25 # wait mysql to be up
            docker-compose exec fpm bin/console --env=behat pim:install:db
      - run:
          name: Behat
          command: |
            TESTFILES=$(docker-compose exec -T fpm vendor/bin/behat --list-scenarios -p legacy | circleci tests split)
            .circleci/run_behat.sh $TESTFILES
      - store_test_results:
          path: var/tests/behat
      - store_artifacts:
          path: var/tests/behat

  test_static_front:
    docker:
    - image: akeneo/fpm:php-7.2
      environment:
        COMPOSER_MEMORY_LIMIT: 5G
      user: docker
    steps:
    - run:
        name: Install all that is necessary for nodejs
        command: |
          sudo curl -sS https://deb.nodesource.com/gpgkey/nodesource.gpg.key | sudo apt-key add -
          sudo curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
          sudo sh -c 'echo "deb https://deb.nodesource.com/node_8.x stretch main" > /etc/apt/sources.list.d/nodesource.list'
          sudo sh -c 'echo "deb https://dl.yarnpkg.com/debian/ stable main" > /etc/apt/sources.list.d/yarn.list'
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends nodejs yarn
          sudo apt-get install -yq libgconf-2-4
          sudo wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
          sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list'
          sudo apt-get update
          sudo apt-get install -y google-chrome-unstable fonts-ipafont-gothic fonts-wqy-zenhei fonts-thai-tlwg fonts-kacst ttf-freefont --no-install-recommends
          sudo apt-get install -yq gconf-service libasound2 libatk1.0-0 libc6 libcairo2 libcups2 libdbus-1-3
          sudo apt-get install -y --no-install-recommends libexpat1 libfontconfig1 libgcc1 libgconf-2-4 libgdk-pixbuf2.0-0 libglib2.0-0 libgtk-3-0 libnspr4
          sudo apt-get install -y --no-install-recommends libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 libxcb1 libxcomposite1
          sudo apt-get install -y --no-install-recommends libxcursor1 libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6
          sudo apt-get install -y --no-install-recommends fonts-liberation libappindicator1 libnss3 lsb-release xdg-utils
    - checkout
    - run:
        name: Install dependencies
        command: |
          cp ./app/config/parameters.yml.dist ./app/config/parameters.yml
          sed -i "s/database_host:                        localhost/database_host:                        mysql-behat/g" ./app/config/parameters.yml
          sed -i "s/localhost: 9200/elastic:changeme@elasticsearch:9200/g" ./app/config/parameters.yml
          sed -i "s/product_index_name:                    akeneo_pim_product/product_index_name:                    test_akeneo_pim_product/g" ./app/config/parameters.yml
          sed -i "s/product_model_index_name:              akeneo_pim_product_model/product_model_index_name:              test_akeneo_pim_product_model/g" ./app/config/parameters.yml
          sed -i "s/product_and_product_model_index_name:  akeneo_pim_product_and_product_model/product_and_product_model_index_name:  test_akeneo_pim_product_and_product_model/g" ./app/config/parameters.yml
          composer update --no-ansi --no-scripts --no-interaction --no-progress --prefer-dist --no-suggest
          yarn install
          mkdir ./web/js
          bin/console pim:installer:dump-extensions --env=prod
          bin/console pim:install:assets --env=prod --symlink
    - run:
        name: Yarn Lint
        command: yarn run lint
    - run:
        name: Yarn Unit
        command: yarn run unit
    - run:
        name: Yarn acceptance
        command: |
          yarn run webpack-test
          MAX_RANDOM_LATENCY_MS=100 yarn run acceptance ./tests/features

workflows:
  version: 2
  build_and_test:
    jobs:
#      - wait_for_user_approval:
#          type: approval
      - build:
          requires:
#            - wait_for_user_approval
      - test_static_back:
          requires:
            - build
#      - test_phpunit_integration:
#          requires:
#            - build
#            - test_static_back
#      - test_phpunit_end_to_end:
#          requires:
#            - test_phpunit_integration
#      - test_legacy_behat:
#          requires:
#            - build
