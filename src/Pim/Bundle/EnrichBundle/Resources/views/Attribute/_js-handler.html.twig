<script type="text/javascript">
require(
    ['jquery', 'underscore', 'datepicker', 'oro/mediator', 'pim/date-context', 'jquery.select2', 'bootstrap.bootstrapswitch'],
    function ($, _, datepicker, mediator, dateContext) {
        'use strict';
        $(function() {
            var measures = {% include 'PimUIBundle::measures.html.twig' with measures %};

            // Get form name
            var formName = '#{{ form.vars.id }}';

            var $optionList;

            function initializeForm() {
                var $switch = $(formName+'_autoOptionSorting')
                    .closest('.AknFieldContainer')
                    .appendTo('#attribute-option-switcher')
                    .removeClass('hide')
                    .find('.has-switch');
                $switch.on('switch-change', function (e, data) {
                        mediator.trigger('attribute:auto_option_sorting:changed', data.value);
                    });

                $(formName+'_type').select2('readonly', true);

                // Enable/disable scope and localizable fields according to unique field value
                $(formName+'_unique').closest('.has-switch').on('switch-change', function (e, data) {
                    if (data.value) {
                        $(formName+'_scopable').closest('.has-switch').bootstrapSwitch('setState', false);
                        $(formName+'_scopable').closest('.has-switch').bootstrapSwitch('setActive', false);
                        $(formName+'_localizable').closest('.has-switch').bootstrapSwitch('setState', false);
                        $(formName+'_localizable').closest('.has-switch').bootstrapSwitch('setActive', false);
                    } else {
                        $(formName+'_scopable').closest('.has-switch').bootstrapSwitch('setActive', true);
                        $(formName+'_localizable').closest('.has-switch').bootstrapSwitch('setActive', true);
                    }
                });

                $(formName+'_validationRule').change(function() {
                    if ($(this).val() == 'regexp') {
                        $(formName+'_validationRegexp').parent().parent().show();
                    } else {
                        $(formName+'_validationRegexp').val('').parent().parent().hide();
                    }
                }).trigger('change');

                if ($(formName+'_availableLocales').val()) {
                    $(formName+'_availableLocales').parent().parent().show();
                    $('#limitLocales-switch').bootstrapSwitch('setState', true);
                } else {
                    $(formName+'_availableLocales').parent().parent().hide();
                }

                $('#limitLocales-switch').on('switch-change', function (e, data) {
                    if (data.value) {
                        $(this).parent().parent().next().show();
                    } else {
                        $(formName+'_availableLocales').select2('val', '');
                        $(this).parent().parent().next().hide();
                    }
                });

                _.each($(formName + ' input.datepicker:not(.hasPicker)'), function (field) {
                    datepicker.init($(field).closest('div'), {
                        format: dateContext.get('date').format,
                        defaultFormat: dateContext.get('date').defaultFormat,
                        language: dateContext.get('language')
                    });
                });

                $(formName+'_metricFamily').select2({
                    data: measures.getMetricTypes(),
                    placeholder: '{{ "Choose a family"|trans }}'
                }).change(function() {
                    $(formName+'_defaultMetricUnit').select2('val', '').select2({
                        data: measures.getMetricUnits($(this).select2('val')),
                        placeholder: '{{ "Choose a unit"|trans }}'
                    }).closest('.AknTextField').addClass('AknTextField--select2');
                }).trigger('change');

                $(formName).trigger('refresh');
            }

            initializeForm();
        });
    }
);
</script>
