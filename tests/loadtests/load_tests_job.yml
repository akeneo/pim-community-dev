apiVersion: batch/v1
kind: Job
metadata:
  name: load-tests
spec:
  parallelism: #load_parallelims#
  ttlSecondsAfterFinished: 0
  template:
    spec:
      containers:

      - name: pim-completeness-calculate
        image: #pim_docker_image#
        command: ["sh"]
        args:
          - "-c"
          - |
            while true
            do
              bin/console pim:completeness:calculate
            done
        envFrom: [ configMapRef: { name: srnt-pimci-long-duplic-srnt-c3po-549725-pim-env } ]
        env:
          - { name: MAILER_USER, valueFrom: { secretKeyRef: { name: pim-secrets, key: mailerLogin } } }
          - { name: MAILER_PASSWORD, valueFrom: { secretKeyRef: { name: pim-secrets, key: mailerPassword } } }
          - { name: APP_DATABASE_PASSWORD, valueFrom: { secretKeyRef: { name: pim-secrets, key: mysqlPimUserPassword } } }
          - { name: GOOGLE_NAMESPACE, valueFrom: { fieldRef: { fieldPath: metadata.namespace } } }
          - { name: GOOGLE_POD_NAME, valueFrom: { fieldRef: { fieldPath: metadata.name } } }
        volumeMounts:
          - name: google-cloud-pim-storage-key
            mountPath: /var/secrets/google/srnt.json
            subPath: srnt.json
            readOnly: true

      - name: akeneo-reset-indexes
        image: #pim_docker_image#
        command: ["sh"]
        args:
          - "-c"
          - |
            while true
            do
              bin/console akeneo:elasticsearch:reset-indexes --no-interaction
              bin/console pim:product-model:index --all
              bin/console pim:product:index --all
            done
        envFrom: [ configMapRef: { name: srnt-pimci-long-duplic-srnt-c3po-549725-pim-env } ]
        env:
          - { name: MAILER_USER, valueFrom: { secretKeyRef: { name: pim-secrets, key: mailerLogin } } }
          - { name: MAILER_PASSWORD, valueFrom: { secretKeyRef: { name: pim-secrets, key: mailerPassword } } }
          - { name: APP_DATABASE_PASSWORD, valueFrom: { secretKeyRef: { name: pim-secrets, key: mysqlPimUserPassword } } }
          - { name: GOOGLE_NAMESPACE, valueFrom: { fieldRef: { fieldPath: metadata.namespace } } }
          - { name: GOOGLE_POD_NAME, valueFrom: { fieldRef: { fieldPath: metadata.name } } }
        volumeMounts:
          - name: google-cloud-pim-storage-key
            mountPath: /var/secrets/google/srnt.json
            subPath: srnt.json
            readOnly: true

      - name: akeneo-reference-entity-refresh-records
        image: #pim_docker_image#
        command: ["sh"]
        args:
          - "-c"
          - |
            while true
            do
              bin/console akeneo:reference-entity:refresh-records
            done
        envFrom: [ configMapRef: { name: srnt-pimci-long-duplic-srnt-c3po-549725-pim-env } ]
        env:
          - { name: MAILER_USER, valueFrom: { secretKeyRef: { name: pim-secrets, key: mailerLogin } } }
          - { name: MAILER_PASSWORD, valueFrom: { secretKeyRef: { name: pim-secrets, key: mailerPassword } } }
          - { name: APP_DATABASE_PASSWORD, valueFrom: { secretKeyRef: { name: pim-secrets, key: mysqlPimUserPassword } } }
          - { name: GOOGLE_NAMESPACE, valueFrom: { fieldRef: { fieldPath: metadata.namespace } } }
          - { name: GOOGLE_POD_NAME, valueFrom: { fieldRef: { fieldPath: metadata.name } } }
        volumeMounts:
          - name: google-cloud-pim-storage-key
            mountPath: /var/secrets/google/srnt.json
            subPath: srnt.json
            readOnly: true

      volumes:
        - name: google-cloud-pim-storage-key
          secret:
            secretName: pim-secrets
            items:
            - key: srntPimStorageKey
              path: srnt.json
      restartPolicy: Never
  backoffLimit: 1
  activeDeadlineSeconds: #load_duration#